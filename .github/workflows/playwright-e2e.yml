name: Playwright E2E Tests

# on:
#   workflow_run:
#     workflows: ["Code Scanning"]
#     types: [completed]

on:
  pull_request:
    branches: [ jordyn/githubactions ]
  push:
    branches: [ jordyn/githubactions ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    env:
      BASE_URL: http://frontend:8000
      API_URL: http://backend:3000

    steps:
      - uses: actions/checkout@v4

      # Set up Docker Buildx (optional for multi-platform)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build backend image
      - name: Build Backend Docker Image
        run: |
          docker build \
            --build-arg NODE_ENV=development \
            -t chat-backend:dev ./api

      # Build frontend image
      - name: Build Frontend Docker Image
        run: |
          docker build \
            --build-arg NODE_ENV=development \
            -t chat-frontend:dev ./chit-chat-ui

      # Start containers
      - name: Start Containers
        run: |
          docker network create e2e-network || true
          docker run -d --name backend --network e2e-network -p 3000:3000 chat-backend:dev
          docker run -d --name frontend --network e2e-network -p 8000:8000 chat-frontend:dev

      # Wait for containers to be ready
      - name: Wait for Backend
        run: |
          until curl -s http://localhost:3000/health; do echo "Waiting for backend..."; sleep 2; done

      - name: Wait for Frontend
        run: |
          until curl -s http://localhost:8000; do echo "Waiting for frontend..."; sleep 2; done

      # Install Node.js & Playwright
      - name: Set up Node.js & Playwright
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Playwright dependencies
        run: |
          npm ci
          npx playwright install --with-deps
        working-directory: ./tests/e2e

      # Run Playwright E2E tests
      - name: Run E2E Tests
        run: npx playwright test --headless
        working-directory: ./tests/e2e

      # Tear down containers
      - name: Stop Containers
        run: |
          docker stop frontend backend
          docker rm frontend backend
          docker network rm e2e-network || true