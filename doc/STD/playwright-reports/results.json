{
  "config": {
    "configFile": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/playwright.config.ts",
    "rootDir": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "ci": {
        "commitHref": "https://github.com/BUMETCS673/cs673olf25project-cs673olf25_team1/commit/611f54bbe1bf496ec9e9316bfa3dde444bf88f0f",
        "commitHash": "611f54bbe1bf496ec9e9316bfa3dde444bf88f0f",
        "prHref": "https://github.com/BUMETCS673/cs673olf25project-cs673olf25_team1/pull/77",
        "prTitle": "Bug/71",
        "prBaseHash": "a2edf720af75620098c3b6d37a6a2e3f7202f362",
        "buildHref": "https://github.com/BUMETCS673/cs673olf25project-cs673olf25_team1/actions/runs/18478059837"
      },
      "gitCommit": {
        "shortHash": "611f54b",
        "hash": "611f54bbe1bf496ec9e9316bfa3dde444bf88f0f",
        "subject": "Merge 131970e77de6e79262af93487be195c6fca44f94 into 106ce557e7964a950d8879e5f915798a3fc31baa",
        "body": "Merge 131970e77de6e79262af93487be195c6fca44f94 into 106ce557e7964a950d8879e5f915798a3fc31baa\n",
        "author": {
          "name": "dlittl02",
          "email": "dlittl02@bu.edu",
          "time": 1760389143000
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "time": 1760389143000
        },
        "branch": "HEAD"
      },
      "gitDiff": "diff --git a/.DS_Store b/.DS_Store\ndeleted file mode 100644\nindex 783595e..0000000\nBinary files a/.DS_Store and /dev/null differ\ndiff --git a/.github/scripts/create-defects.cjs b/.github/scripts/create-defects.cjs\nindex b6cdfe1..7270626 100644\n--- a/.github/scripts/create-defects.cjs\n+++ b/.github/scripts/create-defects.cjs\n@@ -7,7 +7,7 @@ const fs = require('fs');\n const path = require('path');\n const { execSync } = require('child_process');\n \n-const reportPath = 'playwright-report/results.json'; \n+const reportPath = './tests/e2e/playwright-report/results.json'; \n \n if (!fs.existsSync(reportPath)) {\n   console.error('Playwright JSON report not found.');\ndiff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nindex 5e7977a..ea8a4e6 100644\n--- a/.github/workflows/ci.yml\n+++ b/.github/workflows/ci.yml\n@@ -122,6 +122,11 @@ jobs:\n       run: |\n         timeout 240 bash -c 'until curl -s http://localhost:3000/health || curl -s http://localhost:3000; do echo \"Waiting for backend...\"; sleep 2; done'\n \n+    - name: Install pg module for seed script\n+      run: npm install pg\n+\n+    - name: Seed test user into Postgres inside Docker\n+      run: docker exec api npx ts-node scripts/seedUser.ts\n     # - name: Wait for Frontend\n     #   run: |\n     #     until curl -s http://localhost:8000; do echo \"Waiting for frontend...\"; sleep 2; done\n@@ -146,35 +151,63 @@ jobs:\n         npx playwright install --with-deps\n       working-directory: ./tests/e2e\n \n-    # - name: Run Playwright E2E Tests\n-    #   run: npx playwright test --config=playwright.config.ts    \n-    #   working-directory: ./tests/e2e\n-\n-    # - name: Generate readable summary\n-    #   if: always()\n-    #   run: node scripts/generateReadableReport.js\n-\n-    # - name: Upload Playwright HTML + JSON + summary\n-    #   if: always()\n-    #   uses: actions/upload-artifact@v4\n-    #   with:\n-    #     name: playwright-report\n-    #     path: |\n-    #       playwright-report/**\n-    #       test-results/**\n-\n-    # - name: Upload Playwright test artifacts (screenshots, videos, traces)\n-    #   if: always()\n-    #   uses: actions/upload-artifact@v4\n-    #   with:\n-    #     name: playwright-test-results\n-    #     path: test-results/\n-\n-    # - name: Create GitHub Issues from Failed Tests\n-    #   if: failure() \n-    #   env:\n-    #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-    #   run: node .github/scripts/create-defects.cjs ${{ github.run_id }}\n+    - name: Run Playwright E2E Tests with Full Reporters\n+      id: e2e\n+      run: |\n+        npx playwright test \n+      working-directory: ./tests/e2e\n+      continue-on-error: true\n+\n+    - name: Debug Report Directory Contents\n+      run: |\n+        echo \"Checking test output directory\"\n+        ls -R ./tests/e2e/playwright-report || echo \"Directory not found\"\n+        ls -R ./tests/e2e || true\n+\n+    # - name: Move JSON report to root-level playwright-report\n+    #   run: |\n+    #     mkdir -p playwright-report\n+    #     cp tests/e2e/playwright-report/results.json playwright-report/results.json\n+            \n+    - name: Generate readable summary\n+      if: always()\n+      run: |\n+        if [ -f ./tests/e2e/playwright-report/results.json ]; then\n+          node scripts/generateReadableReport.cjs\n+        else\n+          echo \"Skipping summary generation: results.json not found\"\n+        fi\n+\n+    - name: Upload Playwright HTML + JSON + summary\n+      if: always()\n+      uses: actions/upload-artifact@v4\n+      with:\n+        name: playwright-report\n+        path: |\n+          tests/e2e/playwright-report/**\n+          test-results/**\n+\n+    - name: Upload Summary Files\n+      if: always()\n+      uses: actions/upload-artifact@v4\n+      with:\n+        name: readable-playwright-summary\n+        path: |\n+          tests/e2e/playwright-report/summary.md\n+          tests/e2e/playwright-report/summary.html\n+\n+    - name: Upload Playwright test artifacts (screenshots, videos, traces)\n+      if: always()\n+      uses: actions/upload-artifact@v4\n+      with:\n+        name: playwright-test-results\n+        path: test-results/\n+\n+    - name: Create GitHub Issues from Failed Tests\n+      if: steps.e2e.outcome == 'failure'\n+      env:\n+        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      run: node .github/scripts/create-defects.cjs ${{ github.run_id }}\n \n     # Clean Up\n     - name: Stop Containers\ndiff --git a/api/package-lock.json b/api/package-lock.json\nindex ad6da98..22eb426 100644\n--- a/api/package-lock.json\n+++ b/api/package-lock.json\n@@ -2120,6 +2120,128 @@\n         }\n       }\n     },\n+    \"node_modules/@nestjs/cli/node_modules/ajv\": {\n+      \"version\": \"8.17.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz\",\n+      \"integrity\": \"sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fast-deep-equal\": \"^3.1.3\",\n+        \"fast-uri\": \"^3.0.1\",\n+        \"json-schema-traverse\": \"^1.0.0\",\n+        \"require-from-string\": \"^2.0.2\"\n+      },\n+      \"funding\": {\n+        \"type\": \"github\",\n+        \"url\": \"https://github.com/sponsors/epoberezkin\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/ajv-formats\": {\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n+      \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ajv\": \"^8.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"ajv\": \"^8.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"ajv\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/ajv-keywords\": {\n+      \"version\": \"5.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz\",\n+      \"integrity\": \"sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fast-deep-equal\": \"^3.1.3\"\n+      },\n+      \"peerDependencies\": {\n+        \"ajv\": \"^8.8.2\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/eslint-scope\": {\n+      \"version\": \"5.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n+      \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"esrecurse\": \"^4.3.0\",\n+        \"estraverse\": \"^4.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8.0.0\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/estraverse\": {\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n+      \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"engines\": {\n+        \"node\": \">=4.0\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/json-schema-traverse\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n+      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/mime-db\": {\n+      \"version\": \"1.52.0\",\n+      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n+      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 0.6\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/mime-types\": {\n+      \"version\": \"2.1.35\",\n+      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n+      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"mime-db\": \"1.52.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.6\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/schema-utils\": {\n+      \"version\": \"4.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-4.3.3.tgz\",\n+      \"integrity\": \"sha512-eflK8wEtyOE6+hsaRVPxvUKYCpRgzLqDTb8krvAsRIwOGlHoSgYLgBXoubGgLd2fT41/OUYdb48v4k4WWHQurA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/json-schema\": \"^7.0.9\",\n+        \"ajv\": \"^8.9.0\",\n+        \"ajv-formats\": \"^2.1.1\",\n+        \"ajv-keywords\": \"^5.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 10.13.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/webpack\"\n+      }\n+    },\n     \"node_modules/@nestjs/cli/node_modules/typescript\": {\n       \"version\": \"5.8.3\",\n       \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\",\n@@ -2134,6 +2256,55 @@\n         \"node\": \">=14.17\"\n       }\n     },\n+    \"node_modules/@nestjs/cli/node_modules/webpack\": {\n+      \"version\": \"5.100.2\",\n+      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.100.2.tgz\",\n+      \"integrity\": \"sha512-QaNKAvGCDRh3wW1dsDjeMdDXwZm2vqq3zn6Pvq4rHOEOGSaUMgOOjG2Y9ZbIGzpfkJk9ZYTHpDqgDfeBDcnLaw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/eslint-scope\": \"^3.7.7\",\n+        \"@types/estree\": \"^1.0.8\",\n+        \"@types/json-schema\": \"^7.0.15\",\n+        \"@webassemblyjs/ast\": \"^1.14.1\",\n+        \"@webassemblyjs/wasm-edit\": \"^1.14.1\",\n+        \"@webassemblyjs/wasm-parser\": \"^1.14.1\",\n+        \"acorn\": \"^8.15.0\",\n+        \"acorn-import-phases\": \"^1.0.3\",\n+        \"browserslist\": \"^4.24.0\",\n+        \"chrome-trace-event\": \"^1.0.2\",\n+        \"enhanced-resolve\": \"^5.17.2\",\n+        \"es-module-lexer\": \"^1.2.1\",\n+        \"eslint-scope\": \"5.1.1\",\n+        \"events\": \"^3.2.0\",\n+        \"glob-to-regexp\": \"^0.4.1\",\n+        \"graceful-fs\": \"^4.2.11\",\n+        \"json-parse-even-better-errors\": \"^2.3.1\",\n+        \"loader-runner\": \"^4.2.0\",\n+        \"mime-types\": \"^2.1.27\",\n+        \"neo-async\": \"^2.6.2\",\n+        \"schema-utils\": \"^4.3.2\",\n+        \"tapable\": \"^2.1.1\",\n+        \"terser-webpack-plugin\": \"^5.3.11\",\n+        \"watchpack\": \"^2.4.1\",\n+        \"webpack-sources\": \"^3.3.3\"\n+      },\n+      \"bin\": {\n+        \"webpack\": \"bin/webpack.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10.13.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/webpack\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"webpack-cli\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n     \"node_modules/@nestjs/common\": {\n       \"version\": \"11.1.6\",\n       \"resolved\": \"https://registry.npmjs.org/@nestjs/common/-/common-11.1.6.tgz\",\n@@ -11000,55 +11171,6 @@\n       \"integrity\": \"sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==\",\n       \"license\": \"BSD-2-Clause\"\n     },\n-    \"node_modules/webpack\": {\n-      \"version\": \"5.100.2\",\n-      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.100.2.tgz\",\n-      \"integrity\": \"sha512-QaNKAvGCDRh3wW1dsDjeMdDXwZm2vqq3zn6Pvq4rHOEOGSaUMgOOjG2Y9ZbIGzpfkJk9ZYTHpDqgDfeBDcnLaw==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"@types/eslint-scope\": \"^3.7.7\",\n-        \"@types/estree\": \"^1.0.8\",\n-        \"@types/json-schema\": \"^7.0.15\",\n-        \"@webassemblyjs/ast\": \"^1.14.1\",\n-        \"@webassemblyjs/wasm-edit\": \"^1.14.1\",\n-        \"@webassemblyjs/wasm-parser\": \"^1.14.1\",\n-        \"acorn\": \"^8.15.0\",\n-        \"acorn-import-phases\": \"^1.0.3\",\n-        \"browserslist\": \"^4.24.0\",\n-        \"chrome-trace-event\": \"^1.0.2\",\n-        \"enhanced-resolve\": \"^5.17.2\",\n-        \"es-module-lexer\": \"^1.2.1\",\n-        \"eslint-scope\": \"5.1.1\",\n-        \"events\": \"^3.2.0\",\n-        \"glob-to-regexp\": \"^0.4.1\",\n-        \"graceful-fs\": \"^4.2.11\",\n-        \"json-parse-even-better-errors\": \"^2.3.1\",\n-        \"loader-runner\": \"^4.2.0\",\n-        \"mime-types\": \"^2.1.27\",\n-        \"neo-async\": \"^2.6.2\",\n-        \"schema-utils\": \"^4.3.2\",\n-        \"tapable\": \"^2.1.1\",\n-        \"terser-webpack-plugin\": \"^5.3.11\",\n-        \"watchpack\": \"^2.4.1\",\n-        \"webpack-sources\": \"^3.3.3\"\n-      },\n-      \"bin\": {\n-        \"webpack\": \"bin/webpack.js\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10.13.0\"\n-      },\n-      \"funding\": {\n-        \"type\": \"opencollective\",\n-        \"url\": \"https://opencollective.com/webpack\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"webpack-cli\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n     \"node_modules/webpack-node-externals\": {\n       \"version\": \"3.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/webpack-node-externals/-/webpack-node-externals-3.0.0.tgz\",\n@@ -11069,128 +11191,6 @@\n         \"node\": \">=10.13.0\"\n       }\n     },\n-    \"node_modules/webpack/node_modules/ajv\": {\n-      \"version\": \"8.17.1\",\n-      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz\",\n-      \"integrity\": \"sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"fast-deep-equal\": \"^3.1.3\",\n-        \"fast-uri\": \"^3.0.1\",\n-        \"json-schema-traverse\": \"^1.0.0\",\n-        \"require-from-string\": \"^2.0.2\"\n-      },\n-      \"funding\": {\n-        \"type\": \"github\",\n-        \"url\": \"https://github.com/sponsors/epoberezkin\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/ajv-formats\": {\n-      \"version\": \"2.1.1\",\n-      \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n-      \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"ajv\": \"^8.0.0\"\n-      },\n-      \"peerDependencies\": {\n-        \"ajv\": \"^8.0.0\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"ajv\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/ajv-keywords\": {\n-      \"version\": \"5.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz\",\n-      \"integrity\": \"sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"fast-deep-equal\": \"^3.1.3\"\n-      },\n-      \"peerDependencies\": {\n-        \"ajv\": \"^8.8.2\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/eslint-scope\": {\n-      \"version\": \"5.1.1\",\n-      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n-      \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n-      \"dev\": true,\n-      \"license\": \"BSD-2-Clause\",\n-      \"dependencies\": {\n-        \"esrecurse\": \"^4.3.0\",\n-        \"estraverse\": \"^4.1.1\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8.0.0\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/estraverse\": {\n-      \"version\": \"4.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n-      \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n-      \"dev\": true,\n-      \"license\": \"BSD-2-Clause\",\n-      \"engines\": {\n-        \"node\": \">=4.0\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/json-schema-traverse\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n-      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\"\n-    },\n-    \"node_modules/webpack/node_modules/mime-db\": {\n-      \"version\": \"1.52.0\",\n-      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n-      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"engines\": {\n-        \"node\": \">= 0.6\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/mime-types\": {\n-      \"version\": \"2.1.35\",\n-      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n-      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"mime-db\": \"1.52.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 0.6\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/schema-utils\": {\n-      \"version\": \"4.3.3\",\n-      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-4.3.3.tgz\",\n-      \"integrity\": \"sha512-eflK8wEtyOE6+hsaRVPxvUKYCpRgzLqDTb8krvAsRIwOGlHoSgYLgBXoubGgLd2fT41/OUYdb48v4k4WWHQurA==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"@types/json-schema\": \"^7.0.9\",\n-        \"ajv\": \"^8.9.0\",\n-        \"ajv-formats\": \"^2.1.1\",\n-        \"ajv-keywords\": \"^5.1.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 10.13.0\"\n-      },\n-      \"funding\": {\n-        \"type\": \"opencollective\",\n-        \"url\": \"https://opencollective.com/webpack\"\n-      }\n-    },\n     \"node_modules/whatwg-url\": {\n       \"version\": \"5.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz\",\ndiff --git a/chit-chat-ui/src/components/Sidebar.tsx b/chit-chat-ui/src/components/Sidebar.tsx\nindex c451b1b..70421e0 100644\n--- a/chit-chat-ui/src/components/Sidebar.tsx\n+++ b/chit-chat-ui/src/components/Sidebar.tsx\n@@ -71,25 +71,24 @@ const ResponsiveSidebar: React.FC<ResponsiveSidebarProps> = ({ children, onLogou\n       <Divider sx={{ borderColor: \"rgba(255,255,255,0.1)\" }} />\n \n       <Stack sx={{ flexGrow: 1, p: 1, justifyContent: \"space-between\" }}>\n-        <List dense>\n-          {navItems.map((item) => (\n-            <ListItem key={item.text} disablePadding sx={{ display: \"block\" }}>\n-              <ListItemButton\n-                selected={location.pathname === item.path}\n-                component={Link}\n-                to={item.path}\n-                sx={{ borderRadius: 2 }}\n-                data-testid={\n-                  item.text === \"Community\" ? \"nav-community\" : \"nav-ai\"\n-                }\n-              >\n-                <ListItemIcon>{item.icon}</ListItemIcon>\n-                <ListItemText primary={item.text} sx={{ color: \"black\" }} />\n-              </ListItemButton>\n-              )\n-            </ListItem>\n-          ))}\n-        </List>\n+       <List dense>\n+  {navItems.map((item) => (\n+    <ListItem key={item.text} disablePadding sx={{ display: \"block\" }}>\n+      <ListItemButton\n+        selected={location.pathname === item.path}\n+        component={Link}\n+        to={item.path}\n+        sx={{ borderRadius: 2 }}\n+        data-testid={\n+          item.text === \"Community\" ? \"nav-community\" : item.text === \"AI Chat\" ? \"nav-ai\" : undefined\n+        }\n+      >\n+        <ListItemIcon>{item.icon}</ListItemIcon>\n+        <ListItemText primary={item.text} sx={{ color: \"black\" }} />\n+      </ListItemButton>\n+    </ListItem>\n+  ))}\n+</List>\n       </Stack>\n     </Box>\n   );\ndiff --git a/chit-chat-ui/src/pages/Login.tsx b/chit-chat-ui/src/pages/Login.tsx\nindex ace1087..421e6a8 100644\n--- a/chit-chat-ui/src/pages/Login.tsx\n+++ b/chit-chat-ui/src/pages/Login.tsx\n@@ -28,6 +28,7 @@ export default function Login({ onLogin }: LoginProps) {\n   const [username, setUsername] = useState(\"\");\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n+\n   const navigate = useNavigate();\n \n   const toggleMode = () => {\n@@ -179,7 +180,7 @@ export default function Login({ onLogin }: LoginProps) {\n                 <Link\n                   component=\"button\"\n                   variant=\"body2\"\n-                  onClick={toggleMode}\n+                  onClick={() => navigate(\"/register\")}\n                   sx={{ fontWeight: 600 }}\n                 >\n                   Register here\ndiff --git a/package-lock.json b/package-lock.json\nindex de6ef61..420bb9b 100644\n--- a/package-lock.json\n+++ b/package-lock.json\n@@ -23,9 +23,10 @@\n         \"eslint\": \"^9.36.0\",\n         \"eslint-plugin-react-hooks\": \"^5.2.0\",\n         \"eslint-plugin-react-refresh\": \"^0.4.21\",\n+        \"pg\": \"^8.16.3\",\n         \"ts-morph\": \"^27.0.0\",\n         \"ts-node\": \"^10.9.2\",\n-        \"typescript\": \"^5.9.2\",\n+        \"typescript\": \"^5.9.3\",\n         \"typescript-eslint\": \"^8.45.0\",\n         \"wait-on\": \"^9.0.1\"\n       }\n@@ -2380,6 +2381,103 @@\n       \"resolved\": \"https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\",\n       \"integrity\": \"sha512-KG8UEiEVkR3wGEb4m5yZkVCzigAD+cVEJck2CzYZO37ZGJfctvVptVO192MwrtPhzONn6go8ylnOdMhKqi4nfg==\"\n     },\n+    \"node_modules/pg\": {\n+      \"version\": \"8.16.3\",\n+      \"resolved\": \"https://registry.npmjs.org/pg/-/pg-8.16.3.tgz\",\n+      \"integrity\": \"sha512-enxc1h0jA/aq5oSDMvqyW3q89ra6XIIDZgCX9vkMrnz5DFTw/Ny3Li2lFQ+pt3L6MCgm/5o2o8HW9hiJji+xvw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"pg-connection-string\": \"^2.9.1\",\n+        \"pg-pool\": \"^3.10.1\",\n+        \"pg-protocol\": \"^1.10.3\",\n+        \"pg-types\": \"2.2.0\",\n+        \"pgpass\": \"1.0.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 16.0.0\"\n+      },\n+      \"optionalDependencies\": {\n+        \"pg-cloudflare\": \"^1.2.7\"\n+      },\n+      \"peerDependencies\": {\n+        \"pg-native\": \">=3.0.1\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"pg-native\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/pg-cloudflare\": {\n+      \"version\": \"1.2.7\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.2.7.tgz\",\n+      \"integrity\": \"sha512-YgCtzMH0ptvZJslLM1ffsY4EuGaU0cx4XSdXLRFae8bPP4dS5xL1tNB3k2o/N64cHJpwU7dxKli/nZ2lUa5fLg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true\n+    },\n+    \"node_modules/pg-connection-string\": {\n+      \"version\": \"2.9.1\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.9.1.tgz\",\n+      \"integrity\": \"sha512-nkc6NpDcvPVpZXxrreI/FOtX3XemeLl8E0qFr6F2Lrm/I8WOnaWNhIPK2Z7OHpw7gh5XJThi6j6ppgNoaT1w4w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/pg-int8\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz\",\n+      \"integrity\": \"sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \">=4.0.0\"\n+      }\n+    },\n+    \"node_modules/pg-pool\": {\n+      \"version\": \"3.10.1\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-pool/-/pg-pool-3.10.1.tgz\",\n+      \"integrity\": \"sha512-Tu8jMlcX+9d8+QVzKIvM/uJtp07PKr82IUOYEphaWcoBhIYkoHpLXN3qO59nAI11ripznDsEzEv8nUxBVWajGg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"peerDependencies\": {\n+        \"pg\": \">=8.0\"\n+      }\n+    },\n+    \"node_modules/pg-protocol\": {\n+      \"version\": \"1.10.3\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.10.3.tgz\",\n+      \"integrity\": \"sha512-6DIBgBQaTKDJyxnXaLiLR8wBpQQcGWuAESkRBX/t6OwA8YsqP+iVSiond2EDy6Y/dsGk8rh/jtax3js5NeV7JQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/pg-types\": {\n+      \"version\": \"2.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz\",\n+      \"integrity\": \"sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"pg-int8\": \"1.0.1\",\n+        \"postgres-array\": \"~2.0.0\",\n+        \"postgres-bytea\": \"~1.0.0\",\n+        \"postgres-date\": \"~1.0.4\",\n+        \"postgres-interval\": \"^1.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/pgpass\": {\n+      \"version\": \"1.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz\",\n+      \"integrity\": \"sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"split2\": \"^4.1.0\"\n+      }\n+    },\n     \"node_modules/picomatch\": {\n       \"version\": \"2.3.1\",\n       \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n@@ -2425,6 +2523,49 @@\n         \"node\": \">=18\"\n       }\n     },\n+    \"node_modules/postgres-array\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz\",\n+      \"integrity\": \"sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/postgres-bytea\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz\",\n+      \"integrity\": \"sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/postgres-date\": {\n+      \"version\": \"1.0.7\",\n+      \"resolved\": \"https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz\",\n+      \"integrity\": \"sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/postgres-interval\": {\n+      \"version\": \"1.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz\",\n+      \"integrity\": \"sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"xtend\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n     \"node_modules/prelude-ls\": {\n       \"version\": \"1.2.1\",\n       \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n@@ -2570,6 +2711,16 @@\n         \"node\": \">=8\"\n       }\n     },\n+    \"node_modules/split2\": {\n+      \"version\": \"4.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/split2/-/split2-4.2.0.tgz\",\n+      \"integrity\": \"sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \">= 10.x\"\n+      }\n+    },\n     \"node_modules/strip-json-comments\": {\n       \"version\": \"3.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n@@ -2781,9 +2932,9 @@\n       }\n     },\n     \"node_modules/typescript\": {\n-      \"version\": \"5.9.2\",\n-      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz\",\n-      \"integrity\": \"sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==\",\n+      \"version\": \"5.9.3\",\n+      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.9.3.tgz\",\n+      \"integrity\": \"sha512-jl1vZzPDinLr9eUt3J/t7V6FgNEw9QjvBPdysz9KfQDD41fQrC2Y4vKQdiaUpFT4bXlb1RHhLpp8wtm6M5TgSw==\",\n       \"dev\": true,\n       \"license\": \"Apache-2.0\",\n       \"bin\": {\n@@ -2923,6 +3074,16 @@\n         \"node\": \">=0.10.0\"\n       }\n     },\n+    \"node_modules/xtend\": {\n+      \"version\": \"4.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz\",\n+      \"integrity\": \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.4\"\n+      }\n+    },\n     \"node_modules/yn\": {\n       \"version\": \"3.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/yn/-/yn-3.1.1.tgz\",\ndiff --git a/package.json b/package.json\nindex 88ef7b8..da2250a 100644\n--- a/package.json\n+++ b/package.json\n@@ -13,9 +13,10 @@\n     \"eslint\": \"^9.36.0\",\n     \"eslint-plugin-react-hooks\": \"^5.2.0\",\n     \"eslint-plugin-react-refresh\": \"^0.4.21\",\n+    \"pg\": \"^8.16.3\",\n     \"ts-morph\": \"^27.0.0\",\n     \"ts-node\": \"^10.9.2\",\n-    \"typescript\": \"^5.9.2\",\n+    \"typescript\": \"^5.9.3\",\n     \"typescript-eslint\": \"^8.45.0\",\n     \"wait-on\": \"^9.0.1\"\n   },\n@@ -27,7 +28,7 @@\n     \"codegen\": \"playwright codegen -c tests/e2e/playwright.config.ts\",\n     \"test:headless\": \"playwright test -c tests/e2e/playwright.config.ts\",\n     \"lint\": \"eslint . --ext .ts,.tsx,.js,.jsx --fix\",\n-    \"report:readable\": \"node scripts/generateReadableReport.js\",\n+    \"report:readable\": \"node scripts/generateReadableReport.cjs\",\n     \"test:report\": \"npm run test:e2e && npm run report:readable\"\n   },\n   \"dependencies\": {\ndiff --git a/scripts/generateReadableReport.cjs b/scripts/generateReadableReport.cjs\nindex 7913f7e..cb96ab4 100755\n--- a/scripts/generateReadableReport.cjs\n+++ b/scripts/generateReadableReport.cjs\n@@ -2,6 +2,7 @@ const fs = require(\"fs\");\n const path = require(\"path\");\n \n const reportDir = path.join(\"tests\", \"e2e\", \"playwright-report\");\n+//const reportDir = path.resolve(__dirname, \"..\", \"playwright-report\");\n const jsonPath = path.join(reportDir, \"results.json\");\n const mdPath = path.join(reportDir, \"summary.md\");\n const htmlPath = path.join(reportDir, \"summary.html\");\ndiff --git a/tests/e2e/ai-chat.spec.ts b/tests/e2e/ai-chat.spec.ts\nnew file mode 100644\nindex 0000000..de7fd0c\n--- /dev/null\n+++ b/tests/e2e/ai-chat.spec.ts\n@@ -0,0 +1,209 @@\n+import { test, expect } from '@playwright/test';\n+import { login } from './helpers';\n+\n+\n+const selectors = {\n+input: (p: any) => p.getByPlaceholder('Type a message...'),\n+send: (p: any) => p.getByTestId('send-button'),\n+list: (p: any) => p.getByTestId('message-list'),\n+};\n+\n+const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n+\n+// AT-1: AI Chat page loads and UI is visible\n+test('AT-1: /ai loads and UI is visible', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await expect(selectors.input(page)).toBeVisible();\n+    await expect(selectors.send(page)).toBeVisible();\n+});\n+\n+// AT-2: Can send a message and see it in the chat list\n+test('AT-2: Sending a message shows it in the chat list', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const message = 'What is the capital of the United States of America?';\n+    await selectors.input(page).fill(message);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(message);\n+});\n+\n+// AT-3: LLM response appears after sending message\n+test('AT-3: LLM response appears after sending a message', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const message = 'What is 2 + 2?';\n+    await selectors.input(page).fill(message);\n+    await selectors.send(page).click();\n+\n+    // Wait for response from the LLM\n+    await expect(selectors.list(page)).toContainText('2 + 2');\n+    await expect(selectors.list(page)).toContainText('4'); \n+});\n+\n+// AT-4: Socket emits LLM response without reload\n+test('AT-4: LLM response is delivered via socket in real-time', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const message = 'Tell me a fun fact.';\n+    await selectors.input(page).fill(message);\n+    await selectors.send(page).click();\n+\n+    // Wait for backend socket-delivered response\n+    await expect(selectors.list(page)).toContainText(/fun fact/i, { timeout: 5000 });\n+});\n+\n+// AT-5: Input clears after sending\n+test('AT-5: Input field clears after sending a message', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await selectors.input(page).fill('Clear me');\n+    await selectors.send(page).click();\n+    await expect(selectors.input(page)).toHaveValue('');\n+});\n+\n+// AT-6: Send button should be disabled or no action on empty message\n+test('AT-6: Send button should be disabled or no action on empty message', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    // Make sure input is empty\n+    await selectors.input(page).fill('');\n+    await expect(selectors.send(page)).toBeDisabled();\n+\n+    const prevCount = await selectors.list(page).locator('div').count();\n+    await page.keyboard.press('Enter');\n+    const postCount = await selectors.list(page).locator('div').count();\n+    expect(postCount).toBe(prevCount);\n+});\n+\n+// AT-7: Multiple messages should appear in correct order\n+test('AT-7: Multiple exchanges show in correct order', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const messages = ['Hi', 'What day is it?', 'Give me a quote'];\n+\n+    for (const msg of messages) {\n+        await selectors.input(page).fill(msg);\n+        await selectors.send(page).click();\n+        await expect(selectors.list(page)).toContainText(msg);\n+    }\n+\n+    const listText = await selectors.list(page).allTextContents();\n+    messages.forEach(msg => expect(listText.join()).toContain(msg));\n+});\n+\n+// AT-8: Long response from LLM is handled properly\n+test('AT-8: LLM long response does not break UI', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const message = 'Explain the theory of relativity in detail.';\n+    await selectors.input(page).fill(message);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(/relativity/i, { timeout: 7000 });\n+});\n+\n+// AT-9: Handles special characters or code input\n+test('AT-9: Can send code or special character input', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const code = 'const x = 5;';\n+    await selectors.input(page).fill(code);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(code);\n+});\n+\n+// AT-10: Handles network/server error (manual simulation or test stub needed)\n+test.skip('AT-10: Gracefully handles LLM/server error', async ({ page }) => {\n+    // Simulate by shutting down backend or mocking error socket event\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const msg = 'Trigger server error';\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page).locator(`text=${msg}`)).toBeVisible();\n+});\n+\n+// AT-11: LLM handles extremely long input gracefully\n+test('AT-11: LLM handles extremely long input gracefully', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const longMessage = 'word '.repeat(500); // ~2,500 characters\n+    await selectors.input(page).fill(longMessage);\n+    await selectors.send(page).click();\n+\n+    // Should still show original input\n+    await expect(selectors.list(page)).toContainText(longMessage.slice(0, 50));\n+\n+    // Should show some kind of response — even if it's a fallback\n+    await expect(selectors.list(page)).not.toHaveText(/error/i); \n+    await expect(selectors.list(page)).not.toHaveText(''); \n+});\n+\n+// AT-12: Sending a new message before previous LLM response finishes\n+test('AT-12: Sending a new message before previous LLM response finishes', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    await selectors.input(page).fill('Start a long explanation about the solar system...');\n+    await selectors.send(page).click();\n+\n+    // Send another message immediately\n+    await selectors.input(page).fill('What’s the hottest planet?');\n+    await selectors.send(page).click();\n+\n+    // Assert both questions and at least one response appear\n+    await expect(selectors.list(page)).toContainText('solar system');\n+    await expect(selectors.list(page)).toContainText('hottest planet');\n+    await expect(selectors.list(page)).toContainText(/Mercury|Venus/i, { timeout: 7000 });\n+});\n+\n+// AT-13: LLM can return formatted/code responses\n+test('AT-13: LLM can return formatted/code responses', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    await selectors.input(page).fill('Show me a JavaScript function that reverses a string');\n+    await selectors.send(page).click();\n+\n+    await expect(selectors.list(page)).toContainText('function');\n+    await expect(selectors.list(page)).toContainText('reverse');\n+    await expect(selectors.list(page)).toContainText('{', { timeout: 5000 }); \n+});\n+\n+// AT-14: Shows fallback when backend/LLM fails (simulated by aborting socket route)\n+test('AT-14: Shows fallback when backend/LLM fails', async ({ page }) => {\n+    await login(page);\n+\n+    // Intercept the LLM response route and simulate server error\n+    await page.route('**/socket.io/**', route => route.abort());\n+\n+    await page.goto(`${BASE_URL}/ai`);\n+    const failMessage = 'What’s the meaning of life?';\n+    await selectors.input(page).fill(failMessage);\n+    await selectors.send(page).click();\n+\n+    await expect(selectors.list(page)).toContainText(failMessage);\n+\n+    // Since no LLM response will arrive, verify it doesn't freeze or duplicate\n+    await expect(selectors.list(page)).not.toContainText(/Philosophical|Religious|Scientific|Personal/i);\n+});\n+\n+// AT-15: Consecutive messages do not overwrite each other\n+test('AT-15: Consecutive messages do not overwrite each other', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const messages = ['What is 5 + 5?', 'Define AI.', 'How tall is Mount Everest?'];\n+\n+    for (const msg of messages) {\n+        await selectors.input(page).fill(msg);\n+        await selectors.send(page).click();\n+    }\n+\n+    for (const msg of messages) {\n+        await expect(selectors.list(page)).toContainText(msg, { timeout: 5000 });\n+    }\n+});\n\\ No newline at end of file\ndiff --git a/tests/e2e/auth-login.spec.ts b/tests/e2e/auth-login.spec.ts\nindex 4e3b5b3..8bfca6f 100644\n--- a/tests/e2e/auth-login.spec.ts\n+++ b/tests/e2e/auth-login.spec.ts\n@@ -8,130 +8,177 @@ import { test, expect } from '@playwright/test';\n \n const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n \n+// AT-1: Successful registration\n+test('AT-1: Register new user successfully', async ({ page }) => {\n+  const user = `user${Date.now()}`;\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+\n+  await page.getByTestId('login-username').locator('input').fill(user);\n+  await page.getByTestId('login-password').locator('input').fill('password123');\n+  await page.getByTestId('register-button').click();\n+\n+  await expect(page).toHaveURL(/\\/community|\\/login|\\/dashboard/i);\n+});\n+\n+// AT-2: Register with an existing username\n+test('AT-2: Registration fails when username already exists', async ({ page }) => {\n+  const user = `user${Date.now()}`;\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+\n+  await page.getByRole('textbox', { name: 'Full Name' }).click();\n+  await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n+  await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n+  await page.getByTestId('login-username').locator('input').fill(user);\n+  await page.getByTestId('login-password').locator('input').fill('password123');\n+  await page.getByTestId('register-button').click();\n+\n+  // Try to register same user again\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+\n+  await page.getByRole('textbox', { name: 'Full Name' }).click();\n+  await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n+  await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n+  await page.getByTestId('login-username').locator('input').fill(user);\n+  await page.getByTestId('login-password').locator('input').fill('password123');\n+  await page.getByTestId('register-button').click();\n+\n+  // Assert error message appears\n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n+  await expect(errorMsg).toBeVisible();\n+  await expect(errorMsg).toHaveText(/invalid credentials/i);\n+});\n+\n+// AT-3: Registration with empty fields\n+test('AT-3: Registration fails when fields are empty', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+  await page.getByTestId('register-button').click();\n+\n+  // HTML5 validation may block this automatically\n+  const usernameValid = await page.getByTestId('login-username').locator('input').evaluate(\n+    el => (el as HTMLInputElement).checkValidity()\n+  );\n+  const passwordValid = await page.getByTestId('login-password').locator('input').evaluate(\n+    el => (el as HTMLInputElement).checkValidity()\n+  );\n+\n+  expect(usernameValid).toBeFalsy();\n+  expect(passwordValid).toBeFalsy();\n+});\n+\n+// AT-4: Password too short\n+test('AT-4: Registration fails when password is too short', async ({ page }) => {\n+  const user = `short${Date.now()}`;\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+\n+  await page.getByRole('textbox', { name: 'Full Name' }).click();\n+  await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n+  await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n+  await page.getByTestId('login-username').locator('input').fill(user);\n+  await page.getByTestId('login-password').locator('input').fill('123'); // too short\n+  await page.getByTestId('register-button').click();\n+\n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n+  await expect(errorMsg).toBeVisible();\n+  await expect(errorMsg).toContainText(/Password must be at least|\\/characters|\\/uppercase|\\/lowercase|\\/special/i);\n+});\n+\n+// AT-5: Valid login\n+test('AT-5: Login with valid credentials redirects to community', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByTestId('login-username').locator('input').fill('AT');\n+  await page.getByTestId('login-password').locator('input').fill('automatedtests');\n+  await page.getByTestId('login-button').click();\n+\n+  await expect(page).toHaveURL(/\\/community|\\/dashboard/i);\n+  await expect(page.locator('text=Talk to the Community')).toBeVisible({ timeout: 10000 });\n+});\n+\n+// AT-6: Invalid password\n+test('AT-6: Login fails with invalid password', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByTestId('login-username').locator('input').fill('AT');\n+  await page.getByTestId('login-password').locator('input').fill('wrong');\n+  await page.getByTestId('login-button').click();\n+\n+  // Assert error message appears\n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n+  await expect(errorMsg).toBeVisible();\n+  await expect(errorMsg).toHaveText(/invalid credentials/i);\n+});\n+\n+// AT-7: Empty login fields\n+test('AT-7: Login fails when fields are empty', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByTestId('login-button').click();\n+\n+  const usernameValid = await page.getByTestId('login-username').locator('input').evaluate(\n+    el => (el as HTMLInputElement).checkValidity()\n+  );\n+  const passwordValid = await page.getByTestId('login-password').locator('input').evaluate(\n+    el => (el as HTMLInputElement).checkValidity()\n+  );\n+\n+  expect(usernameValid).toBeFalsy();\n+  expect(passwordValid).toBeFalsy();\n+});\n+\n+// AT-8: Username case sensitivity\n+test('AT-8: Login fails if username case does not match', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByTestId('login-username').locator('input').fill('at'); // lowercase\n+  await page.getByTestId('login-password').locator('input').fill('automatedtests');\n+  await page.getByTestId('login-button').click();\n+\n+  // Assert error message appears\n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n+  await expect(errorMsg).toBeVisible();\n+  await expect(errorMsg).toHaveText(/invalid credentials/i);\n+});\n+\n+// AT-9: Register ↔ Login navigation works\n+test('AT-9: Navigation between login and register pages works', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+  await expect(page).toHaveURL(/\\/register$/);\n+\n+  await page.getByText(/login here/i).click();\n+  await expect(page).toHaveURL(/\\/login$/);\n+});\n+\n+test('AT-10: Registration fails when password boundaries are not met', async ({ page }) => {\n+  const user = `short${Date.now()}`;\n+  const weakPasswords = [\n+    '123567',     // too short\n+    'uwyehd1@',   // no uppercase\n+    'BDHEIS1@',   // no lowercase\n+    '12345678',   // numbers only\n+    'uwyehdwe',   // lowercase only\n+    'JDHCBWIR',   // uppercase only\n+    '!@#$%^&*',   // special characters only\n+    'uwyehdH@',   // no number\n+    'uwyehd1C',   // no special character\n+  ];\n+\n+  const registerWithPassword = async (password: string) => {\n+    await page.goto(`${BASE_URL}/login`);\n+    await page.getByText(/register here/i).click();\n+    await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n+    await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n+    await page.getByTestId('login-username').locator('input').fill(user);\n+    await page.getByTestId('login-password').locator('input').fill(password);\n+    await page.getByTestId('register-button').click();\n+  };\n \n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n \n-  // AT-1: Successful registration\n-  test('AT-1: Register new user successfully', async ({ page }) => {\n-    const user = `user${Date.now()}`;\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text \n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByPlaceholder('Full Name').fill('Test User');\n-    await page.getByPlaceholder('Username').fill(user);\n-    await page.getByPlaceholder('Password').fill('password123');\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    await expect(page).toHaveURL(/\\/community|\\/login|\\/dashboard/i);\n-  });\n-\n-  // AT-2: Register with an existing username\n-  test('AT-2: Registration fails when username already exists', async ({ page }) => {\n-    const user = `user${Date.now()}`;\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text \n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByPlaceholder('Full Name').fill('Test User');\n-    await page.getByPlaceholder('Username').fill(user);\n-    await page.getByPlaceholder('Password').fill('password123');\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text \n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByPlaceholder('Full Name').fill('Test User');\n-    await page.getByPlaceholder('Username').fill(user);\n-    await page.getByPlaceholder('Password').fill('password123');\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    const errorMsg = page.locator('.error');\n-    await expect(errorMsg).toBeVisible({ timeout: 5000 });\n-    await expect(errorMsg).toHaveText(/already exists|username taken|duplicate/i);\n-  });\n-\n-  // AT-3: Registration with empty fields\n-  test('AT-3: Registration fails when fields are empty', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text\n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    // Expect required validation\n-    await expect(page.locator('input[placeholder=\"Full Name\"]:invalid')).toBeVisible();\n-    await expect(page.locator('input[placeholder=\"Username\"]:invalid')).toBeVisible();\n-    await expect(page.locator('input[placeholder=\"Password\"]:invalid')).toBeVisible();\n-  });\n-\n-  // AT-4: Password too short\n-  test('AT-4: Registration fails when password is too short', async ({ page }) => {\n-    const user = `shortpass${Date.now()}`;\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text\n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByPlaceholder('Full Name').fill('Short Pass');\n-    await page.getByPlaceholder('Username').fill(user);\n-    await page.getByPlaceholder('Password').fill('123');\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    const errorMsg = page.locator('.error');\n-    await expect(errorMsg).toBeVisible({ timeout: 5000 });\n-    await expect(errorMsg).toContainText(/password.*too short|minimum/i);\n-  });\n-\n-  // AT-5: Successful login with valid credentials\n-  test('AT-5: Login with valid credentials redirects to community', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByPlaceholder('Username').fill('AT');\n-    await page.getByPlaceholder('Password').fill('automatedtests');\n-    await page.getByRole('button', { name: 'Login' }).click();\n-\n-    await expect(page).toHaveURL(/\\/community|\\/dashboard/i);\n-    await expect(page.locator('text=Talk to the Community')).toBeVisible({ timeout: 10000 });\n-  });\n-\n-  // AT-6: Invalid login (wrong password)\n-  test('AT-06: Login fails with invalid password', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByPlaceholder('Username').fill('AT');\n-    await page.getByPlaceholder('Password').fill('wrong');\n-    await page.getByRole('button', { name: 'Login' }).click();\n-\n-    const errorMsg = page.locator('.error');\n-    await expect(errorMsg).toBeVisible({ timeout: 5000 });\n-    await expect(errorMsg).toHaveText(/invalid credentials/i);\n-  });\n-\n-  // AT-7: Login with empty fields\n-  test('AT-07: Login fails when username or password is missing', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByPlaceholder('Username').fill('');\n-    await page.getByPlaceholder('Password').fill('');\n-    await page.getByRole('button', { name: 'Login' }).click();\n-\n-    // Expect built-in HTML5 validation to prevent submission\n-    const usernameValid = await page.getByPlaceholder('Username').evaluate(el => (el as HTMLInputElement).checkValidity());\n-    const passwordValid = await page.getByPlaceholder('Password').evaluate(el => (el as HTMLInputElement).checkValidity());\n-    expect(usernameValid).toBeFalsy();\n-    expect(passwordValid).toBeFalsy();\n-  });\n-\n-  // AT-8: Case sensitivity check for login\n-  test('AT-8: Login fails if username case does not match', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByPlaceholder('Username').fill('at');\n-    await page.getByPlaceholder('Password').fill('automatedtests');\n-    await page.getByRole('button', { name: 'Login' }).click();\n-\n-    const errorMsg = page.locator('.error');\n+  for (const password of weakPasswords) {\n+    await registerWithPassword(password);\n     await expect(errorMsg).toBeVisible({ timeout: 5000 });\n-    await expect(errorMsg).toHaveText(/invalid credentials/i);\n-  });\n-\n-  // AT-9: Navigation between login and register\n-  test('AT-9: Navigation between login and register pages works', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByText(/register here/i).click();\n-    await expect(page).toHaveURL(/\\/register$/);\n-\n-    await page.getByText(/login here/i).click();\n-    await expect(page).toHaveURL(/\\/login$/);\n-  });\n+    await expect(errorMsg).toContainText(/Password must be at least|characters|uppercase|lowercase|special/i);\n+  }\n+});\n\\ No newline at end of file\ndiff --git a/tests/e2e/autoscroll.spec.ts b/tests/e2e/autoscroll.spec.ts\nindex daa609f..11def0d 100644\n--- a/tests/e2e/autoscroll.spec.ts\n+++ b/tests/e2e/autoscroll.spec.ts\n@@ -5,127 +5,192 @@ Human code: 85% (tool: Playwright, Tests: 1-4)\n Framework generated code: 0%\n */\n \n-import { test, expect } from '@playwright/test';\n+import { test, expect, Page, Locator } from '@playwright/test';\n+import { login } from './helpers';\n \n // selectors used everywhere\n const input = (p:any) => p.getByPlaceholder('Type a message...');\n-const list  = (p:any) => p.locator('.messages-container');\n+const list = (p: Page) => p.locator('[data-testid=\"message-list\"]');\n const uniq  = (s:string) => `${s} ${Date.now()}`;\n+\n const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n \n-// Helper function for scrolling\n-async function atBottom(l:any) {\n-  return l.evaluate((el:HTMLElement) =>\n-    Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) <= 4\n-  );\n+// Accepts a locator and checks if the scroll is near the bottom\n+export async function atBottom(locator: Locator): Promise<boolean> {\n+  return await locator.evaluate((el) => {\n+    const threshold = 5; // px — allow minor diff due to rounding\n+    return el.scrollHeight - el.scrollTop - el.clientHeight < threshold;\n+  });\n+  }\n+\n+  export const send = (page: Page) =>\n+  page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n+\n+  async function stabilize(page: Page) {\n+  await login(page);\n+\n+  // Wait for list to be visible\n+  await expect(list(page)).toBeVisible({ timeout: 10000 });\n+\n+  // Scroll to bottom\n+  await list(page).evaluate((el: HTMLElement) => {\n+    el.scrollTop = el.scrollHeight;\n+  });\n+\n+  // Ensure input and send button are also visible\n+  await input(page).waitFor({ state: 'visible', timeout: 10000 });\n+  await send(page).waitFor({ state: 'visible', timeout: 10000 });\n }\n \n-// AT-01: Viewer is at bottom, auto-scroll to see new message \n test('AT-01: Auto-scroll when viewer is at bottom', async ({ browser }) => {\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-  await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n \n-  // make sure user B is at bottom now\n-  await list(b).evaluate((el:HTMLElement) => el.scrollTop = el.scrollHeight);\n+  await login(a);\n+  await login(b);\n+\n+  await expect(list(b)).toBeVisible();\n+\n+  // Scroll B to bottom\n+  await list(b).evaluate((el: HTMLElement) => el.scrollTop = el.scrollHeight);\n   expect(await atBottom(list(b))).toBeTruthy();\n \n-  const msg = uniq('auto-bottom');\n+  const msg = uniq('AT: auto-bottom');\n   await input(a).fill(msg);\n-  await send.click();\n+  await send(a).click();\n+\n+  // Optional: wait for UI\n+  await b.waitForTimeout(500);\n \n-  await expect(list(b)).toContainText(msg, { timeout: 10000 });\n+  const text = await list(b).innerText();\n+  expect(text.includes(msg)).toBeTruthy(); \n   expect(await atBottom(list(b))).toBeTruthy();\n \n-  await Promise.all([ctxA.close(), ctxB.close()]);\n+  await ctxA.close();\n+  await ctxB.close();\n });\n \n-// AT-02: Viewer scrolled up, do not force-scroll \n test('AT-02: No jump when viewer scrolled up', async ({ browser }) => {\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-  await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n \n-  // seed some history so we can scroll\n-  for (let i = 0; i < 6; i++) {\n-    await input(a).fill(uniq('seed'));\n+  await login(a);\n+  await login(b);\n+\n+  const send = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n+\n+  // Seed multiple messages so B can scroll\n+  for (let i = 0; i < 10; i++) {\n+    const msg = uniq('seed');\n+    await input(a).fill(msg);\n+    await expect(send).toBeVisible();\n+    await send.waitFor({ state: 'attached' });\n     await send.click();\n+    await a.waitForTimeout(150); \n   }\n-  await expect(list(b)).toContainText('seed', { timeout: 10000 });\n \n-  // scroll B to the top (not at bottom)\n-  await list(b).evaluate((el:HTMLElement) => el.scrollTop = 0);\n-  expect(await atBottom(list(b))).toBeFalsy();\n+  // Wait until B sees all seeded messages\n+  await expect(list(b)).toContainText('seed', { timeout: 10000 });\n \n-  const msg = uniq('no-jump');\n-  await input(a).fill(msg);\n+  // Manually scroll B up — simulate user scrolling up to read older messages\n+  await list(b).evaluate((el: HTMLElement) => { el.scrollTop = 0 });\n+\n+  // Double check scroll position BEFORE new message\n+  const before = await list(b).evaluate(el => ({\n+    scrollTop: el.scrollTop,\n+    scrollHeight: el.scrollHeight,\n+    clientHeight: el.clientHeight,\n+    isAtBottom: Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 2,\n+  }));\n+  console.log('Before sending:', before);\n+  expect(before.isAtBottom).toBeFalsy(); // must NOT be at bottom\n+\n+  // Now send another message from A\n+  const newMsg = uniq('no-jump');\n+  await input(a).fill(newMsg);\n+  await expect(send).toBeVisible();\n+  await send.waitFor({ state: 'attached' });\n+  await a.waitForTimeout(150); // give DOM time to settle\n   await send.click();\n \n-  await expect(list(b)).toContainText(msg, { timeout: 10000 });\n-  expect(await atBottom(list(b))).toBeFalsy(); // still not at bottom\n+  // Wait until B receives the message\n+  await expect(list(b)).toContainText(newMsg, { timeout: 10000 });\n+\n+  // Check scroll state again — it should NOT have jumped\n+  const after = await list(b).evaluate(el => ({\n+    scrollTop: el.scrollTop,\n+    scrollHeight: el.scrollHeight,\n+    clientHeight: el.clientHeight,\n+    isAtBottom: Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 2,\n+  }));\n+  console.log('After receiving:', after);\n+  expect(after.isAtBottom).toBeFalsy(); // still not at bottom\n \n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n-// AT-03: Auto-scroll resumes after viewer returns to bottom\n test('AT-03: Auto-scroll resumes after viewer returns to bottom', async ({ browser }) => {\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-  await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n+  const send = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n \n-  const listB = b.locator('.messages-container');\n+  await login(a);\n+  await login(b);\n \n-  // Seed enough history so the list can scroll\n-  for (let i = 0; i < 15; i++) {\n+  const listB = list(b);\n+  // Seed enough messages to make it scrollable\n+  for (let i = 0; i < 20; i++) {\n     await a.getByPlaceholder('Type a message...').fill(`seed ${i}`);\n-    await send.click();\n+    await a.getByPlaceholder('Type a message...').press('Enter');\n   }\n+\n   await expect(listB).toContainText('seed 0', { timeout: 10_000 });\n \n-  // Scroll up, don't assert here to avoid flakiness\n-  await listB.evaluate(el => (el as HTMLElement).scrollTop = 0);\n-  await b.waitForTimeout(150);\n+  // Simulate user scrolling up\n+  await listB.evaluate(el => el.scrollTop = 0);\n+  await b.waitForTimeout(300);\n \n-  // Now explicitly return to bottom by scrolling the last item into view\n-  const lastItem = listB.locator(':scope > *').last();\n-  await lastItem.scrollIntoViewIfNeeded();\n+  // Simulate user manually scrolling back to bottom (like PageDown or scrollbar)\n+  await listB.evaluate(el => el.scrollTop = el.scrollHeight);\n+  await b.waitForTimeout(300);\n \n-  // Confirm we're at/near bottom\n-  await expect.poll(async () => {\n-    return await listB.evaluate((el: HTMLElement) => {\n-      const delta = Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight);\n-      return delta <= 20;\n-    });\n-  }, { timeout: 2000 }).toBeTruthy();\n+  // Confirm near-bottom (within 20px)\n+  const atBottom = await listB.evaluate(el => {\n+    return Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) <= 20;\n+  });\n+  expect(atBottom).toBeTruthy();\n \n-  // New message arrives, should still be at bottom\n-  const msg = `resume ${Date.now()}`;\n+  // Send new message from A\n+  const msg = `resume-${Date.now()}`;\n   await a.getByPlaceholder('Type a message...').fill(msg);\n-  await send.click();\n-\n-  await expect(listB).toContainText(msg, { timeout: 10_000 });\n-  await expect.poll(async () => {\n-    return await listB.evaluate((el: HTMLElement) => {\n-      const delta = Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight);\n-      return delta <= 20;\n-    });\n-  }, { timeout: 2000 }).toBeTruthy();\n+  await a.getByPlaceholder('Type a message...').press('Enter');\n+\n+  // Wait for message to appear\n+  const timeout = 10000;\n+  const start = Date.now();\n+  let found = false;\n+  while (Date.now() - start < timeout) {\n+    const text = await listB.innerText();\n+    if (text.includes(msg)) {\n+      found = true;\n+      break;\n+    }\n+    await b.waitForTimeout(200);\n+  }\n \n+  expect(found).toBeTruthy();\n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n // AT-04: Sending your own message keeps you at bottom \n test('AT-04: Sender stays at bottom after sending', async ({ page }) => {\n-  await page.goto(BASE_URL + '/');\n+  await login(page);\n   await list(page).evaluate((el:HTMLElement) => el.scrollTop = el.scrollHeight);\n   const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   expect(await atBottom(list(page))).toBeTruthy();\ndiff --git a/tests/e2e/chat-guest.spec.ts b/tests/e2e/chat-guest.spec.ts\nindex ae768fc..ff7307a 100644\n--- a/tests/e2e/chat-guest.spec.ts\n+++ b/tests/e2e/chat-guest.spec.ts\n@@ -1,4 +1,4 @@\n-/*\n+/* \n AI-generated-code: 15% (tool: Playwright, Used AI to help locate the elements on the app\n AI chat link: N/A this was generated before Iteration 1 submission)\n Human code: 85% (tool: Playwright, Tests: 1-10)\n@@ -7,200 +7,244 @@ Framework generated code: 0%\n import { test, expect } from '@playwright/test';\n import { login } from './helpers';\n \n+const uniq = (m: string) => `${m} ${Date.now()}`;\n+const BASE_PATH = '/community';\n \n-const uniq = (m:string)=> `${m} ${Date.now()}`;\n-const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n const selectors = {\n   input: (p: any) => p.getByPlaceholder('Type a message...'),\n-  send:  (p: any) => p.getByRole('button', { name: 'Send' }),\n-  list:  (p: any) => p.locator('.messages-container'),\n+  send: (p: any) => p.getByTestId('send-button'),\n+  list: (p: any) => p.getByTestId('message-list')\n };\n \n+async function stabilizePage(page: any) {\n+  const base = process.env.BASE_URL || 'http://localhost:8000';\n+  await page.goto(`${base}${BASE_PATH}`);\n \n-// AT-1: Guests can send a message\n-test('AT-1: Guest sends a message', async ({ page }) => {\n-  await login(page);\n-  //await page.goto(BASE_URL + '/');\n+  // Wait for chat UI to fully render before acting\n+  await page.waitForSelector('[data-testid=\"message-list\"]', { timeout: 10000 });\n+  await selectors.input(page).waitFor({ state: 'visible', timeout: 10000 });\n+  await selectors.send(page).waitFor({ state: 'visible', timeout: 10000 });\n \n-  const input = page.locator('input[type=\"text\"], textarea').first();\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n-  const messages = page.locator('.messages-container');\n+  // Ensure scroll is at bottom\n+  await selectors.list(page).evaluate((el: HTMLElement) => el.scrollTop = el.scrollHeight);\n+  }\n+\n+  test.afterEach(async ({ page }) => {\n+  try { await page.waitForTimeout(200); } catch {}\n+});\n \n+// AT-1: Guest sends a message\n+test('AT-1: Guest sends a message', async ({ page }) => {\n+  await login(page);\n+  await stabilizePage(page);\n \n   const msg = `hello world ${new Date().toISOString()}`;\n-  await input.fill(msg);\n-  await send.click();\n+  await selectors.input(page).fill(msg);\n+  await selectors.send(page).click();\n \n-  await expect(messages).toContainText(msg, { timeout: 3000 });\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(selectors.list(page)).toContainText(msg);\n });\n \n-// AT-2: Message received by another user \n+// AT-2: Real-time receive across two guests\n test('AT-2: Real-time receive across two guests', async ({ browser }) => {\n   test.setTimeout(65_000);\n-\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n+\n   await login(a);\n   await login(b);\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-\n-  //await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n+  await stabilizePage(a);\n+  await stabilizePage(b);\n \n   const ping = uniq('ping');\n   await selectors.input(a).fill(ping);\n-  await send.click();\n+  await selectors.send(a).click();\n \n-  await expect(selectors.list(b)).toContainText(ping, { timeout: 60_000 });\n+  const lastMessageB = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  await expect(selectors.list(b)).toContainText(ping);\n \n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n-// AT-3: Multiple messages preserve order\n+// AT-3: Messages preserve chronological order\n test('AT-3: Messages preserve chronological order', async ({ browser }) => {\n   test.setTimeout(65_000);\n-\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n+\n   await login(a);\n   await login(b);\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-\n-  //await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n+  await stabilizePage(a);\n+  await stabilizePage(b);\n \n   const m1 = uniq('msg1');\n   const m2 = uniq('msg2');\n   const m3 = uniq('msg3');\n \n-  for (const m of [m1, m2, m3]) {\n-    await selectors.input(a).fill(m);\n-    await send.click();\n-  }\n+  await selectors.input(a).fill(m1);\n+  await selectors.send(a).click();\n+  const last1 = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  //await expect(last1).toContainText(m1);\n \n-  // Read the full text in the messages container and compare indices.\n-  const text = await selectors.list(b).innerText({ timeout: 60_000 });\n-  const i1 = text.indexOf(m1), i2 = text.indexOf(m2), i3 = text.indexOf(m3);\n-  expect(i1).toBeGreaterThanOrEqual(0);\n-  expect(i2).toBeGreaterThan(i1);\n-  expect(i3).toBeGreaterThan(i2);\n+  await selectors.input(a).fill(m2);\n+  await selectors.send(a).click();\n+  const last2 = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  //await expect(last2).toContainText(m2);\n+\n+  await selectors.input(a).fill(m3);\n+  await selectors.send(a).click();\n+  const last3 = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  //await expect(last3).toContainText(m3);\n+\n+  const text = await selectors.list(b).innerText();\n+  expect(text.indexOf(m1)).toBeLessThan(text.indexOf(m2));\n+  expect(text.indexOf(m2)).toBeLessThan(text.indexOf(m3));\n \n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n-// AT-4: Real-time delivery performance\n+// AT-4: Delivery time under target\n test('AT-4: Delivery time under target', async ({ browser }) => {\n   test.setTimeout(65_000);\n-\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n+\n   await login(a);\n   await login(b);\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-\n-  //await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n+  await stabilizePage(a);\n+  await stabilizePage(b);\n \n   const payload = uniq('latency');\n   const t0 = Date.now();\n \n   await selectors.input(a).fill(payload);\n-  await send.click();\n+  await selectors.send(a).click();\n \n-  await expect(selectors.list(b)).toContainText(payload, { timeout: 60_000 });\n+  const lastMessageB = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  await expect(selectors.list(b)).toContainText(payload);\n \n   const dt = Date.now() - t0;\n-  expect(dt).toBeLessThanOrEqual(60_000);  // acceptance ceiling\n-  expect(dt).toBeLessThanOrEqual(3_000);   // performance target\n+  expect(dt).toBeLessThanOrEqual(60000);\n+  expect(dt).toBeLessThanOrEqual(5000);\n \n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n // AT-5: Guest session persists after reload\n test('AT-5: Guest can continue chatting after reload', async ({ page }) => {\n-  //await page.goto(BASE_URL + '/');\n   await login(page);\n-  const before = uniq('before-reload');\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n+  await stabilizePage(page);\n \n+  const before = uniq('before-reload');\n   await selectors.input(page).fill(before);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(before, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  let lastBefore = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastBefore).toContainText(before);\n \n   await page.reload();\n+  await stabilizePage(page);\n \n   const after = uniq('after-reload');\n   await selectors.input(page).fill(after);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(after, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  const lastAfter = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastAfter).toContainText(after);\n });\n \n // AT-6: Empty message is blocked\n test('AT-6: Empty message is blocked', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n-  await selectors.input(page).fill('');          \n-  await send.click();\n+  await stabilizePage(page);\n+\n+  // Capture last message BEFORE\n+  const lastBefore = await selectors.list(page).locator('div:has-text(\"You:\")').last().innerText();\n \n-  // Assert nothing new appeared by sending a unique marker next\n+  // Try to send an empty message\n+  await selectors.input(page).fill('');\n+  await selectors.send(page).click();\n+  await page.waitForTimeout(300); \n+\n+  // Capture last message AFTER attempting empty send\n+  const lastAfter = await selectors.list(page).locator('div:has-text(\"You:\")').last().innerText();\n+\n+  // Assert nothing changed\n+  expect(lastAfter).toBe(lastBefore);\n+\n+  // Now send a valid marker\n   const marker = uniq('marker');\n   await selectors.input(page).fill(marker);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(marker, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastMessage).toContainText(marker);\n });\n \n-// AT-7: Whitespace is blocked\n+// AT-7: Whitespace-only message is blocked\n test('AT-7: Whitespace-only message is blocked', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n+  await stabilizePage(page);\n+\n   await selectors.input(page).fill('   ');\n-  await send.click();\n+  await selectors.send(page).click();\n+\n   const marker = uniq('marker');\n   await selectors.input(page).fill(marker);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(marker, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(selectors.list(page)).toContainText(marker);\n });\n \n-// AT-8: Long word wraps\n+// AT-8: Long word wraps without breaking layout\n test('AT-8: Long word wraps without breaking layout', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n+  await stabilizePage(page);\n+\n   const long = 'a'.repeat(200);\n   await selectors.input(page).fill(long);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(long, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastMessage).toContainText(long);\n });\n \n-// AT-9: Simple autoscroll behavior\n+// AT-9: Autoscroll to bottom on send\n test('AT-9: Autoscroll to bottom on send', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n-  // Scroll top first if container is scrollable\n+  await stabilizePage(page);\n+\n   const list = selectors.list(page);\n-  await list.evaluate((el:HTMLElement) => el.scrollTop = 0);\n+  await list.evaluate((el: HTMLElement) => el.scrollTop = 0);\n+\n   const msg = uniq('scroll-check');\n   await selectors.input(page).fill(msg);\n-  await send.click();\n-  await expect(list).toContainText(msg, { timeout: 3000 });\n-  // Verify we ended near bottom\n-  const atBottom = await list.evaluate((el:any) => Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 4);\n+  await selectors.send(page).click();\n+\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastMessage).toContainText(msg);\n+\n+  const atBottom = await list.evaluate((el: any) =>\n+    Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 4\n+  );\n   expect(atBottom).toBeTruthy();\n });\n \n // AT-10: Clear the input after sending\n test('AT-10: Clears input after sending', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n+  await stabilizePage(page);\n+\n   await selectors.input(page).fill('clear me');\n-  await send.click();\n-  await expect(selectors.input(page)).toHaveValue('');           \n-});\n+  await selectors.send(page).click();\n \n+  await expect(selectors.input(page)).toHaveValue('');\n+});\n\\ No newline at end of file\ndiff --git a/tests/e2e/chat-history.spec.ts b/tests/e2e/chat-history.spec.ts\nindex f75d9e4..d6eb635 100644\n--- a/tests/e2e/chat-history.spec.ts\n+++ b/tests/e2e/chat-history.spec.ts\n@@ -2,44 +2,41 @@ import { test, expect } from '@playwright/test';\n import { Page } from '@playwright/test';\n import { login } from './helpers';\n \n+const selectors = {\n+    input: (p: any) => p.getByPlaceholder('Type a message...'),\n+    send: (p: any) => p.getByTestId('send-button'),\n+    list: (p: any) => p.getByTestId('message-list')\n+};\n \n-async function goToChat(page: Page) {\n-  //await page.goto('/');\n-  await page.reload();\n-  await page.waitForSelector('.messages-container');\n-}\n+const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n \n // AT-1: Persist single message after refresh\n test('AT-1: should persist a message after refresh', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msg = 'Test ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n-    await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n \n-    //await page.reload();\n-    await page.waitForSelector('.messages-container');\n-    await expect(page.locator('.messages-container')).toContainText(msg);\n+    const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+    await expect(selectors.list(page)).toContainText(msg);\n });\n \n // AT-2: Persist multiple messages in correct order\n test('AT-2: should persist multiple messages and keep order', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msgs = ['First ' + Date.now(), 'Second ' + Date.now(), 'Third ' + Date.now()];\n \n     for (const m of msgs) {\n-        await page.fill('input[placeholder=\"Type a message...\"]', m);\n-        await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(m);\n+    await selectors.send(page).click();\n     }\n \n     await page.reload();\n-    await page.waitForSelector('.messages-container');\n     for (const m of msgs) {\n-        await expect(page.locator('.messages-container')).toContainText(m);\n+    await expect(selectors.list(page)).toContainText(m);\n     }\n-    // verify order\n-    const allText = await page.locator('.messages-container').innerText();\n+\n+    const allText = await selectors.list(page).innerText();\n     const firstIdx = allText.indexOf(msgs[0]);\n     const secondIdx = allText.indexOf(msgs[1]);\n     const thirdIdx = allText.indexOf(msgs[2]);\n@@ -50,88 +47,100 @@ test('AT-2: should persist multiple messages and keep order', async ({ page }) =\n // AT-3: Large history persists\n test('AT-3: should persist a long history of messages', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msgs = Array.from({ length: 20 }, (_, i) => `Message ${i} - ${Date.now()}`);\n+\n     for (const m of msgs) {\n-        await page.fill('input[placeholder=\"Type a message...\"]', m);\n-        await page.keyboard.press('Enter');\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n     }\n \n     await page.reload();\n     for (const m of msgs) {\n-        await expect(page.locator('.messages-container')).toContainText(m);\n+        await expect(selectors.list(page)).toContainText(m);\n     }\n });\n \n // AT-4: Mixed send and refresh cycles\n test('AT-4: should keep messages across multiple send/refresh cycles', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n+\n     const first = 'First cycle ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', first);\n-    await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(first);\n+    await selectors.send(page).click();\n     await page.reload();\n \n     const second = 'Second cycle ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', second);\n-    await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(second);\n+    await selectors.send(page).click();\n     await page.reload();\n \n-    await expect(page.locator('.messages-container')).toContainText(first);\n-    await expect(page.locator('.messages-container')).toContainText(second);\n+    await expect(selectors.list(page)).toContainText(first);\n+    await expect(selectors.list(page)).toContainText(second);\n });\n \n-// AT-5: No duplicates after refresh\n test('AT-5: should not duplicate messages after refresh', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msg = 'Duplicate check ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n-    await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+\n+    // Confirm message shows before reload\n+    await expect(selectors.list(page)).toContainText(msg);\n \n     await page.reload();\n-    const occurrences = await page.locator('.messages-container', { hasText: msg }).count();\n-    expect(occurrences).toBe(1);\n+    const matching = selectors.list(page).locator(`div:has-text(\"${msg}\")`).last();\n+    await expect(matching).toBeVisible({ timeout: 5000 });\n });\n \n // AT-6: Messages stay in order after multiple refreshes\n test('AT-6: should keep order after multiple refreshes', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msgs = ['One ' + Date.now(), 'Two ' + Date.now()];\n \n     for (const m of msgs) {\n-        await page.fill('input[placeholder=\"Type a message...\"]', m);\n-        await page.keyboard.press('Enter');\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n     }\n \n+    // Simulate multiple refresh cycles\n     for (let i = 0; i < 3; i++) {\n         await page.reload();\n     }\n \n-    const allText = await page.locator('.messages-container').innerText();\n+    // Wait for both messages to appear\n+    const firstMessage = selectors.list(page).locator(`div:has-text(\"${msgs[0]}\")`).last();\n+    const secondMessage = selectors.list(page).locator(`div:has-text(\"${msgs[1]}\")`).last();\n+    await expect(firstMessage).toBeVisible({ timeout: 5000 });\n+    await expect(secondMessage).toBeVisible({ timeout: 5000 });\n+\n+    // Grab full list content to compare index\n+    const allText = await selectors.list(page).innerText();\n     const oneIdx = allText.indexOf(msgs[0]);\n     const twoIdx = allText.indexOf(msgs[1]);\n+\n+    console.log(`[AT-6] Index of \"${msgs[0]}\": ${oneIdx}, \"${msgs[1]}\": ${twoIdx}`);\n+    expect(oneIdx).toBeGreaterThanOrEqual(0);\n+    expect(twoIdx).toBeGreaterThanOrEqual(0);\n     expect(oneIdx).toBeLessThan(twoIdx);\n });\n \n // AT-7: Ghost messages should not appear\n test('AT-7: refresh should not create ghost messages', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     await page.reload();\n-    const ghostCount = await page.locator('.messages-container .message').count();\n+    const ghostCount = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(ghostCount).toBe(0);\n });\n \n // AT-8: New browser context starts clean\n test('AT-8: new session should start with empty history', async ({ browser }) => {\n-    const context = await browser.newContext(); // fresh context = no storage\n-    const page = await context.newPage();\n-    await login(page);\n-    await goToChat(page);\n-    const count = await page.locator('.messages-container .message').count();\n+    const context = await browser.newContext(); \n+    const page = await context.newPage(); \n+\n+    await login(page); \n+    const count = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(count).toBe(0);\n+\n     await context.close();\n });\n \n@@ -139,24 +148,194 @@ test('AT-8: new session should start with empty history', async ({ browser }) =>\n test('AT-9: multiple tabs should show same history', async ({ context }) => {\n     const page1 = await context.newPage();\n     await login(page1);\n-    await goToChat(page1);\n     const msg = 'Multi-tab ' + Date.now();\n-    await page1.fill('input[placeholder=\"Type a message...\"]', msg);\n-    await page1.keyboard.press('Enter');\n+    await selectors.input(page1).fill(msg);\n+    await selectors.send(page1).click();\n \n     const page2 = await context.newPage();\n     await login(page2);\n-    await goToChat(page2);\n-    await expect(page2.locator('.messages-container')).toContainText(msg);\n+    await expect(selectors.list(page2)).toContainText(msg);\n });\n \n // AT-10: Empty history stays empty after refresh\n test('AT-10: empty history stays empty after refresh', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     await page.reload();\n-    const count = await page.locator('.messages-container .message').count();\n+    const count = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    expect(count).toBe(0);\n+});\n+\n+// ============================== AI ==================================\n+\n+// AT-11: Persist single message after refresh\n+test('AT-11: should persist a message after refresh', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msg = 'Test ' + Date.now();\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+\n+    const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+    await expect(selectors.list(page)).toContainText(msg);\n+});\n+\n+// AT-12: Persist multiple messages in correct order\n+test('AT-12: should persist multiple messages and keep order', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msgs = ['First ' + Date.now(), 'Second ' + Date.now(), 'Third ' + Date.now()];\n+\n+    for (const m of msgs) {\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n+    }\n+\n+    await page.reload();\n+    for (const m of msgs) {\n+        await expect(selectors.list(page)).toContainText(m);\n+    }\n+\n+    const allText = await selectors.list(page).innerText();\n+    const firstIdx = allText.indexOf(msgs[0]);\n+    const secondIdx = allText.indexOf(msgs[1]);\n+    const thirdIdx = allText.indexOf(msgs[2]);\n+    expect(firstIdx).toBeLessThan(secondIdx);\n+    expect(secondIdx).toBeLessThan(thirdIdx);\n+});\n+\n+// AT-13: Large history persists\n+test('AT-13: should persist a long history of messages', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msgs = Array.from({ length: 20 }, (_, i) => `Message ${i} - ${Date.now()}`);\n+\n+    for (const m of msgs) {\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n+    }\n+\n+    await page.reload();\n+    for (const m of msgs) {\n+        await expect(selectors.list(page)).toContainText(m);\n+    }\n+});\n+\n+// AT-14: Mixed send and refresh cycles\n+test('AT-14: should keep messages across multiple send/refresh cycles', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const first = 'First cycle ' + Date.now();\n+    await selectors.input(page).fill(first);\n+    await selectors.send(page).click();\n+    await page.reload();\n+\n+    const second = 'Second cycle ' + Date.now();\n+    await selectors.input(page).fill(second);\n+    await selectors.send(page).click();\n+    await page.reload();\n+\n+    await expect(selectors.list(page)).toContainText(first);\n+    await expect(selectors.list(page)).toContainText(second);\n+});\n+\n+test('AT-15: should not duplicate messages after refresh', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msg = 'Duplicate check ' + Date.now();\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+\n+    // Confirm message shows before reload\n+    await expect(selectors.list(page)).toContainText(msg);\n+\n+    await page.reload();\n+    const matching = selectors.list(page).locator(`div:has-text(\"${msg}\")`).last();\n+    await expect(matching).toBeVisible({ timeout: 5000 });\n+});\n+\n+// AT-16: Messages stay in order after multiple refreshes\n+test('AT-16: should keep order after multiple refreshes', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msgs = ['One ' + Date.now(), 'Two ' + Date.now()];\n+\n+    for (const m of msgs) {\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n+    }\n+\n+    // Simulate multiple refresh cycles\n+    for (let i = 0; i < 3; i++) {\n+        await page.reload();\n+    }\n+\n+    // Wait for both messages to appear\n+    const firstMessage = selectors.list(page).locator(`div:has-text(\"${msgs[0]}\")`).last();\n+    const secondMessage = selectors.list(page).locator(`div:has-text(\"${msgs[1]}\")`).last();\n+    await expect(firstMessage).toBeVisible({ timeout: 5000 });\n+    await expect(secondMessage).toBeVisible({ timeout: 5000 });\n+\n+    // Grab full list content to compare index\n+    const allText = await selectors.list(page).innerText();\n+    const oneIdx = allText.indexOf(msgs[0]);\n+    const twoIdx = allText.indexOf(msgs[1]);\n+\n+    console.log(`[AT-6] Index of \"${msgs[0]}\": ${oneIdx}, \"${msgs[1]}\": ${twoIdx}`);\n+    expect(oneIdx).toBeGreaterThanOrEqual(0);\n+    expect(twoIdx).toBeGreaterThanOrEqual(0);\n+    expect(oneIdx).toBeLessThan(twoIdx);\n+});\n+\n+// AT-17: Ghost messages should not appear\n+test('AT-17: refresh should not create ghost messages', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    await page.reload();\n+    const ghostCount = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    expect(ghostCount).toBe(0);\n+});\n+\n+// AT-18: New browser context starts clean\n+test('AT-18: new session should start with empty history', async ({ browser }) => {\n+    const context = await browser.newContext(); \n+    const page = await context.newPage(); \n+\n+    await login(page); \n+    await page.goto(`${BASE_URL}/ai`);\n+    const count = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(count).toBe(0);\n+\n+    await context.close();\n });\n \n+// AT-19: Multiple tabs share history (if local storage is shared)\n+test('AT-19: multiple tabs should show same history', async ({ context }) => {\n+    const page1 = await context.newPage();\n+    await login(page1);\n+    await page1.goto(`${BASE_URL}/ai`);\n \n+    const msg = 'Multi-tab ' + Date.now();\n+    await selectors.input(page1).fill(msg);\n+    await selectors.send(page1).click();\n+\n+    const page2 = await context.newPage();\n+    await login(page2);\n+    await expect(selectors.list(page2)).toContainText(msg);\n+});\n+\n+// AT-20: Empty history stays empty after refresh\n+test('AT-20: empty history stays empty after refresh', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    await page.reload();\n+    const count = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    expect(count).toBe(0);\n+});\n\\ No newline at end of file\ndiff --git a/tests/e2e/enter-key.spec.ts b/tests/e2e/enter-key.spec.ts\nindex 004ef68..e84ad3d 100644\n--- a/tests/e2e/enter-key.spec.ts\n+++ b/tests/e2e/enter-key.spec.ts\n@@ -1,81 +1,67 @@\n import { test, expect } from '@playwright/test';\n import { login } from './helpers';\n-import { log } from 'console';\n \n-// AT-1: Send valid message with Enter\n-test('AT-1: should send a message when Enter is pressed', async ({ page }) => {\n-    await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', 'Test ' + Date.now());\n-    await page.keyboard.press('Enter');\n-    await expect(page.locator('.messages-container')).toContainText('Test');\n-});\n+const selectors = {\n+    input: (p: any) => p.getByPlaceholder('Type a message...'),\n+    send: (p: any) => p.getByTestId('send-button'),\n+    list: (p: any) => p.getByTestId('message-list')\n+    };\n+\n+const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n+\n \n // AT-2: Send valid message with Send button\n-test('AT-2:should send a message with Send button', async ({ page }) => {\n+test('AT-2: should send a message with Send button', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', 'Test ' + Date.now());\n-    await page.click('button:has-text(\"Send\")');\n-    await expect(page.locator('.messages-container')).toContainText('Test');\n+    const msg = 'Test ' + Date.now();\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(msg);\n });\n \n // AT-3: Leading/trailing spaces\n test('AT-3: should trim leading/trailing spaces', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', '   Test   ');\n+    await selectors.input(page).fill('   Test   ');\n     await page.keyboard.press('Enter');\n-    await expect(page.locator('.messages-container')).toContainText('Test');\n+    await expect(selectors.list(page)).toContainText('Test');\n });\n \n // AT-4: Long message\n test('AT-4: should send a long message up to limit', async ({ page }) => {\n     const longMessage = 'x'.repeat(500);\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', longMessage);\n+    await selectors.input(page).fill(longMessage);\n     await page.keyboard.press('Enter');\n-    await expect(page.locator('.messages-container')).toContainText(longMessage);\n+    await expect(selectors.list(page)).toContainText(longMessage);\n });\n \n // AT-5: Special characters\n test('AT-5: should support special characters', async ({ page }) => {\n     const msg = 'Test #@$%^&* ' + Date.now();\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n+    await selectors.input(page).fill(msg);\n     await page.keyboard.press('Enter');\n-    await expect(page.locator('.messages-container')).toContainText('Test #@$%^&*');\n+    await expect(selectors.list(page)).toContainText(msg);\n });\n \n // AT-6: Empty input\n test('AT-6: should not send an empty message', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');\n-    const countBefore = await page.locator('.messages-container > *').count();\n-\n-    await page.focus('input[placeholder=\"Type a message...\"]');\n+    const countBefore = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    await selectors.input(page).focus();\n     await page.keyboard.press('Enter');\n-\n-    const countAfter = await page.locator('.messages-container > *').count();\n+    const countAfter = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(countAfter).toBe(countBefore);\n });\n \n // AT-7: Whitespace-only input\n test('AT-7: should not send whitespace-only message', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');\n-    const countBefore = await page.locator('.messages-container > *').count();\n-\n-    await page.fill('input[placeholder=\"Type a message...\"]', '     ');\n+    const countBefore = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    await selectors.input(page).fill('     ');\n     await page.keyboard.press('Enter');\n-\n-    const countAfter = await page.locator('.messages-container > *').count();\n+    const countAfter = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(countAfter).toBe(countBefore);\n });\n \n@@ -83,56 +69,155 @@ test('AT-7: should not send whitespace-only message', async ({ page }) => {\n test('AT-8: should not duplicate message on rapid Enter presses', async ({ page }) => {\n     const msg = 'Test ' + Date.now();\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');      \n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n+    await selectors.input(page).fill(msg);\n     await page.keyboard.press('Enter');\n     await page.keyboard.press('Enter');\n     await page.keyboard.press('Enter');\n-    const occurrences = await page.locator('.messages-container', { hasText: msg }).count();\n+    const occurrences = await selectors.list(page).locator(`div:has-text(\"${msg}\")`).count();\n     expect(occurrences).toBe(1);\n });\n \n // AT-9: Shift+Enter creates newline (not send)\n-  test('AT-9: pressing Shift+Enter creates newline in input', async ({ page }) => {\n+test('AT-9: pressing Shift+Enter creates newline in input', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', 'Line1');\n+    await selectors.input(page).fill('Line1');\n     await page.keyboard.press('Shift+Enter');\n     await page.keyboard.type('Line2');\n-    const value = await page.inputValue('input[placeholder=\"Type a message...\"]');\n+    const value = await selectors.input(page).inputValue();\n     expect(value).toContain('Line1');\n     expect(value).toContain('Line2');\n-  });\n-\n+});\n \n-  // AT-10: Enter pressed when input not focused\n-  test('AT-10: pressing Enter outside input does nothing', async ({ page }) => {\n+// AT-10: Enter pressed when input not focused\n+test('AT-10: pressing Enter outside input does nothing', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');\n-    const countBefore = await page.locator('.messages-container > *').count();\n-    await page.click('body'); // click outside input\n+    const countBefore = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    await page.click('body'); // unfocus input\n     await page.keyboard.press('Enter');\n-    const countAfter = await page.locator('.messages-container > *').count();\n+    const countAfter = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(countAfter).toBe(countBefore);\n-  });\n+});\n \n-  // AT-11: Send, then Enter again with empty input\n-  test('AT-11: pressing Enter again immediately does nothing', async ({ page }) => {\n+// AT-11: Send, then Enter again with empty input\n+test('AT-11: pressing Enter again immediately does nothing', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');\n     const msg = 'Test ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n+    await selectors.input(page).fill(msg);\n     await page.keyboard.press('Enter');\n-    const countAfterFirst = await page.locator('.messages-container > *').count();\n-    await page.keyboard.press('Enter'); // input now empty\n-    const countAfterSecond = await page.locator('.messages-container > *').count();\n+    const countAfterFirst = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    await page.keyboard.press('Enter'); // now input is empty\n+    const countAfterSecond = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(countAfterSecond).toBe(countAfterFirst);\n-  });\n+});\n+\n+// ============================ AI =================================\n+\n+// AT-12: Send valid message with Send button\n+test('AT-12: should send a message with Send button', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const msg = 'Test ' + Date.now();\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(msg);\n+});\n+\n+// AT-13: Leading/trailing spaces\n+test('AT-13: should trim leading/trailing spaces', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await selectors.input(page).fill('   Test   ');\n+    await page.keyboard.press('Enter');\n+    await expect(selectors.list(page)).toContainText('Test');\n+});\n+\n+// AT-14: Long message\n+test('AT-14: should send a long message up to limit', async ({ page }) => {\n+    const longMessage = 'x'.repeat(500);\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await selectors.input(page).fill(longMessage);\n+    await page.keyboard.press('Enter');\n+    await expect(selectors.list(page)).toContainText(longMessage);\n+});\n+\n+// AT-15: Special characters\n+test('AT-15: should support special characters', async ({ page }) => {\n+    const msg = 'Test #@$%^&* ' + Date.now();\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await selectors.input(page).fill(msg);\n+    await page.keyboard.press('Enter');\n+    await expect(selectors.list(page)).toContainText(msg);\n+});\n \n+// AT-16: Empty input\n+test('AT-16: should not send an empty message', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const countBefore = await selectors.list(page).locator('div:has-text(\"You:\")').count",
      "actualWorkers": 2
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "list",
        null
      ],
      [
        "html",
        {
          "outputFolder": "playwright-report",
          "open": "never"
        }
      ],
      [
        "json",
        {
          "outputFile": "playwright-report/results.json"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "ci": {
            "commitHref": "https://github.com/BUMETCS673/cs673olf25project-cs673olf25_team1/commit/611f54bbe1bf496ec9e9316bfa3dde444bf88f0f",
            "commitHash": "611f54bbe1bf496ec9e9316bfa3dde444bf88f0f",
            "prHref": "https://github.com/BUMETCS673/cs673olf25project-cs673olf25_team1/pull/77",
            "prTitle": "Bug/71",
            "prBaseHash": "a2edf720af75620098c3b6d37a6a2e3f7202f362",
            "buildHref": "https://github.com/BUMETCS673/cs673olf25project-cs673olf25_team1/actions/runs/18478059837"
          },
          "gitCommit": {
            "shortHash": "611f54b",
            "hash": "611f54bbe1bf496ec9e9316bfa3dde444bf88f0f",
            "subject": "Merge 131970e77de6e79262af93487be195c6fca44f94 into 106ce557e7964a950d8879e5f915798a3fc31baa",
            "body": "Merge 131970e77de6e79262af93487be195c6fca44f94 into 106ce557e7964a950d8879e5f915798a3fc31baa\n",
            "author": {
              "name": "dlittl02",
              "email": "dlittl02@bu.edu",
              "time": 1760389143000
            },
            "committer": {
              "name": "GitHub",
              "email": "noreply@github.com",
              "time": 1760389143000
            },
            "branch": "HEAD"
          },
          "gitDiff": "diff --git a/.DS_Store b/.DS_Store\ndeleted file mode 100644\nindex 783595e..0000000\nBinary files a/.DS_Store and /dev/null differ\ndiff --git a/.github/scripts/create-defects.cjs b/.github/scripts/create-defects.cjs\nindex b6cdfe1..7270626 100644\n--- a/.github/scripts/create-defects.cjs\n+++ b/.github/scripts/create-defects.cjs\n@@ -7,7 +7,7 @@ const fs = require('fs');\n const path = require('path');\n const { execSync } = require('child_process');\n \n-const reportPath = 'playwright-report/results.json'; \n+const reportPath = './tests/e2e/playwright-report/results.json'; \n \n if (!fs.existsSync(reportPath)) {\n   console.error('Playwright JSON report not found.');\ndiff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nindex 5e7977a..ea8a4e6 100644\n--- a/.github/workflows/ci.yml\n+++ b/.github/workflows/ci.yml\n@@ -122,6 +122,11 @@ jobs:\n       run: |\n         timeout 240 bash -c 'until curl -s http://localhost:3000/health || curl -s http://localhost:3000; do echo \"Waiting for backend...\"; sleep 2; done'\n \n+    - name: Install pg module for seed script\n+      run: npm install pg\n+\n+    - name: Seed test user into Postgres inside Docker\n+      run: docker exec api npx ts-node scripts/seedUser.ts\n     # - name: Wait for Frontend\n     #   run: |\n     #     until curl -s http://localhost:8000; do echo \"Waiting for frontend...\"; sleep 2; done\n@@ -146,35 +151,63 @@ jobs:\n         npx playwright install --with-deps\n       working-directory: ./tests/e2e\n \n-    # - name: Run Playwright E2E Tests\n-    #   run: npx playwright test --config=playwright.config.ts    \n-    #   working-directory: ./tests/e2e\n-\n-    # - name: Generate readable summary\n-    #   if: always()\n-    #   run: node scripts/generateReadableReport.js\n-\n-    # - name: Upload Playwright HTML + JSON + summary\n-    #   if: always()\n-    #   uses: actions/upload-artifact@v4\n-    #   with:\n-    #     name: playwright-report\n-    #     path: |\n-    #       playwright-report/**\n-    #       test-results/**\n-\n-    # - name: Upload Playwright test artifacts (screenshots, videos, traces)\n-    #   if: always()\n-    #   uses: actions/upload-artifact@v4\n-    #   with:\n-    #     name: playwright-test-results\n-    #     path: test-results/\n-\n-    # - name: Create GitHub Issues from Failed Tests\n-    #   if: failure() \n-    #   env:\n-    #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-    #   run: node .github/scripts/create-defects.cjs ${{ github.run_id }}\n+    - name: Run Playwright E2E Tests with Full Reporters\n+      id: e2e\n+      run: |\n+        npx playwright test \n+      working-directory: ./tests/e2e\n+      continue-on-error: true\n+\n+    - name: Debug Report Directory Contents\n+      run: |\n+        echo \"Checking test output directory\"\n+        ls -R ./tests/e2e/playwright-report || echo \"Directory not found\"\n+        ls -R ./tests/e2e || true\n+\n+    # - name: Move JSON report to root-level playwright-report\n+    #   run: |\n+    #     mkdir -p playwright-report\n+    #     cp tests/e2e/playwright-report/results.json playwright-report/results.json\n+            \n+    - name: Generate readable summary\n+      if: always()\n+      run: |\n+        if [ -f ./tests/e2e/playwright-report/results.json ]; then\n+          node scripts/generateReadableReport.cjs\n+        else\n+          echo \"Skipping summary generation: results.json not found\"\n+        fi\n+\n+    - name: Upload Playwright HTML + JSON + summary\n+      if: always()\n+      uses: actions/upload-artifact@v4\n+      with:\n+        name: playwright-report\n+        path: |\n+          tests/e2e/playwright-report/**\n+          test-results/**\n+\n+    - name: Upload Summary Files\n+      if: always()\n+      uses: actions/upload-artifact@v4\n+      with:\n+        name: readable-playwright-summary\n+        path: |\n+          tests/e2e/playwright-report/summary.md\n+          tests/e2e/playwright-report/summary.html\n+\n+    - name: Upload Playwright test artifacts (screenshots, videos, traces)\n+      if: always()\n+      uses: actions/upload-artifact@v4\n+      with:\n+        name: playwright-test-results\n+        path: test-results/\n+\n+    - name: Create GitHub Issues from Failed Tests\n+      if: steps.e2e.outcome == 'failure'\n+      env:\n+        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      run: node .github/scripts/create-defects.cjs ${{ github.run_id }}\n \n     # Clean Up\n     - name: Stop Containers\ndiff --git a/api/package-lock.json b/api/package-lock.json\nindex ad6da98..22eb426 100644\n--- a/api/package-lock.json\n+++ b/api/package-lock.json\n@@ -2120,6 +2120,128 @@\n         }\n       }\n     },\n+    \"node_modules/@nestjs/cli/node_modules/ajv\": {\n+      \"version\": \"8.17.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz\",\n+      \"integrity\": \"sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fast-deep-equal\": \"^3.1.3\",\n+        \"fast-uri\": \"^3.0.1\",\n+        \"json-schema-traverse\": \"^1.0.0\",\n+        \"require-from-string\": \"^2.0.2\"\n+      },\n+      \"funding\": {\n+        \"type\": \"github\",\n+        \"url\": \"https://github.com/sponsors/epoberezkin\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/ajv-formats\": {\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n+      \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"ajv\": \"^8.0.0\"\n+      },\n+      \"peerDependencies\": {\n+        \"ajv\": \"^8.0.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"ajv\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/ajv-keywords\": {\n+      \"version\": \"5.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz\",\n+      \"integrity\": \"sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"fast-deep-equal\": \"^3.1.3\"\n+      },\n+      \"peerDependencies\": {\n+        \"ajv\": \"^8.8.2\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/eslint-scope\": {\n+      \"version\": \"5.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n+      \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"dependencies\": {\n+        \"esrecurse\": \"^4.3.0\",\n+        \"estraverse\": \"^4.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8.0.0\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/estraverse\": {\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n+      \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n+      \"dev\": true,\n+      \"license\": \"BSD-2-Clause\",\n+      \"engines\": {\n+        \"node\": \">=4.0\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/json-schema-traverse\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n+      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/mime-db\": {\n+      \"version\": \"1.52.0\",\n+      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n+      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">= 0.6\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/mime-types\": {\n+      \"version\": \"2.1.35\",\n+      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n+      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"mime-db\": \"1.52.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.6\"\n+      }\n+    },\n+    \"node_modules/@nestjs/cli/node_modules/schema-utils\": {\n+      \"version\": \"4.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-4.3.3.tgz\",\n+      \"integrity\": \"sha512-eflK8wEtyOE6+hsaRVPxvUKYCpRgzLqDTb8krvAsRIwOGlHoSgYLgBXoubGgLd2fT41/OUYdb48v4k4WWHQurA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/json-schema\": \"^7.0.9\",\n+        \"ajv\": \"^8.9.0\",\n+        \"ajv-formats\": \"^2.1.1\",\n+        \"ajv-keywords\": \"^5.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 10.13.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/webpack\"\n+      }\n+    },\n     \"node_modules/@nestjs/cli/node_modules/typescript\": {\n       \"version\": \"5.8.3\",\n       \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\",\n@@ -2134,6 +2256,55 @@\n         \"node\": \">=14.17\"\n       }\n     },\n+    \"node_modules/@nestjs/cli/node_modules/webpack\": {\n+      \"version\": \"5.100.2\",\n+      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.100.2.tgz\",\n+      \"integrity\": \"sha512-QaNKAvGCDRh3wW1dsDjeMdDXwZm2vqq3zn6Pvq4rHOEOGSaUMgOOjG2Y9ZbIGzpfkJk9ZYTHpDqgDfeBDcnLaw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"@types/eslint-scope\": \"^3.7.7\",\n+        \"@types/estree\": \"^1.0.8\",\n+        \"@types/json-schema\": \"^7.0.15\",\n+        \"@webassemblyjs/ast\": \"^1.14.1\",\n+        \"@webassemblyjs/wasm-edit\": \"^1.14.1\",\n+        \"@webassemblyjs/wasm-parser\": \"^1.14.1\",\n+        \"acorn\": \"^8.15.0\",\n+        \"acorn-import-phases\": \"^1.0.3\",\n+        \"browserslist\": \"^4.24.0\",\n+        \"chrome-trace-event\": \"^1.0.2\",\n+        \"enhanced-resolve\": \"^5.17.2\",\n+        \"es-module-lexer\": \"^1.2.1\",\n+        \"eslint-scope\": \"5.1.1\",\n+        \"events\": \"^3.2.0\",\n+        \"glob-to-regexp\": \"^0.4.1\",\n+        \"graceful-fs\": \"^4.2.11\",\n+        \"json-parse-even-better-errors\": \"^2.3.1\",\n+        \"loader-runner\": \"^4.2.0\",\n+        \"mime-types\": \"^2.1.27\",\n+        \"neo-async\": \"^2.6.2\",\n+        \"schema-utils\": \"^4.3.2\",\n+        \"tapable\": \"^2.1.1\",\n+        \"terser-webpack-plugin\": \"^5.3.11\",\n+        \"watchpack\": \"^2.4.1\",\n+        \"webpack-sources\": \"^3.3.3\"\n+      },\n+      \"bin\": {\n+        \"webpack\": \"bin/webpack.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10.13.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/webpack\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"webpack-cli\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n     \"node_modules/@nestjs/common\": {\n       \"version\": \"11.1.6\",\n       \"resolved\": \"https://registry.npmjs.org/@nestjs/common/-/common-11.1.6.tgz\",\n@@ -11000,55 +11171,6 @@\n       \"integrity\": \"sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==\",\n       \"license\": \"BSD-2-Clause\"\n     },\n-    \"node_modules/webpack\": {\n-      \"version\": \"5.100.2\",\n-      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.100.2.tgz\",\n-      \"integrity\": \"sha512-QaNKAvGCDRh3wW1dsDjeMdDXwZm2vqq3zn6Pvq4rHOEOGSaUMgOOjG2Y9ZbIGzpfkJk9ZYTHpDqgDfeBDcnLaw==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"@types/eslint-scope\": \"^3.7.7\",\n-        \"@types/estree\": \"^1.0.8\",\n-        \"@types/json-schema\": \"^7.0.15\",\n-        \"@webassemblyjs/ast\": \"^1.14.1\",\n-        \"@webassemblyjs/wasm-edit\": \"^1.14.1\",\n-        \"@webassemblyjs/wasm-parser\": \"^1.14.1\",\n-        \"acorn\": \"^8.15.0\",\n-        \"acorn-import-phases\": \"^1.0.3\",\n-        \"browserslist\": \"^4.24.0\",\n-        \"chrome-trace-event\": \"^1.0.2\",\n-        \"enhanced-resolve\": \"^5.17.2\",\n-        \"es-module-lexer\": \"^1.2.1\",\n-        \"eslint-scope\": \"5.1.1\",\n-        \"events\": \"^3.2.0\",\n-        \"glob-to-regexp\": \"^0.4.1\",\n-        \"graceful-fs\": \"^4.2.11\",\n-        \"json-parse-even-better-errors\": \"^2.3.1\",\n-        \"loader-runner\": \"^4.2.0\",\n-        \"mime-types\": \"^2.1.27\",\n-        \"neo-async\": \"^2.6.2\",\n-        \"schema-utils\": \"^4.3.2\",\n-        \"tapable\": \"^2.1.1\",\n-        \"terser-webpack-plugin\": \"^5.3.11\",\n-        \"watchpack\": \"^2.4.1\",\n-        \"webpack-sources\": \"^3.3.3\"\n-      },\n-      \"bin\": {\n-        \"webpack\": \"bin/webpack.js\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10.13.0\"\n-      },\n-      \"funding\": {\n-        \"type\": \"opencollective\",\n-        \"url\": \"https://opencollective.com/webpack\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"webpack-cli\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n     \"node_modules/webpack-node-externals\": {\n       \"version\": \"3.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/webpack-node-externals/-/webpack-node-externals-3.0.0.tgz\",\n@@ -11069,128 +11191,6 @@\n         \"node\": \">=10.13.0\"\n       }\n     },\n-    \"node_modules/webpack/node_modules/ajv\": {\n-      \"version\": \"8.17.1\",\n-      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz\",\n-      \"integrity\": \"sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"fast-deep-equal\": \"^3.1.3\",\n-        \"fast-uri\": \"^3.0.1\",\n-        \"json-schema-traverse\": \"^1.0.0\",\n-        \"require-from-string\": \"^2.0.2\"\n-      },\n-      \"funding\": {\n-        \"type\": \"github\",\n-        \"url\": \"https://github.com/sponsors/epoberezkin\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/ajv-formats\": {\n-      \"version\": \"2.1.1\",\n-      \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n-      \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"ajv\": \"^8.0.0\"\n-      },\n-      \"peerDependencies\": {\n-        \"ajv\": \"^8.0.0\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"ajv\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/ajv-keywords\": {\n-      \"version\": \"5.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz\",\n-      \"integrity\": \"sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"fast-deep-equal\": \"^3.1.3\"\n-      },\n-      \"peerDependencies\": {\n-        \"ajv\": \"^8.8.2\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/eslint-scope\": {\n-      \"version\": \"5.1.1\",\n-      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n-      \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n-      \"dev\": true,\n-      \"license\": \"BSD-2-Clause\",\n-      \"dependencies\": {\n-        \"esrecurse\": \"^4.3.0\",\n-        \"estraverse\": \"^4.1.1\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8.0.0\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/estraverse\": {\n-      \"version\": \"4.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n-      \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n-      \"dev\": true,\n-      \"license\": \"BSD-2-Clause\",\n-      \"engines\": {\n-        \"node\": \">=4.0\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/json-schema-traverse\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n-      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\"\n-    },\n-    \"node_modules/webpack/node_modules/mime-db\": {\n-      \"version\": \"1.52.0\",\n-      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n-      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"engines\": {\n-        \"node\": \">= 0.6\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/mime-types\": {\n-      \"version\": \"2.1.35\",\n-      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n-      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"mime-db\": \"1.52.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 0.6\"\n-      }\n-    },\n-    \"node_modules/webpack/node_modules/schema-utils\": {\n-      \"version\": \"4.3.3\",\n-      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-4.3.3.tgz\",\n-      \"integrity\": \"sha512-eflK8wEtyOE6+hsaRVPxvUKYCpRgzLqDTb8krvAsRIwOGlHoSgYLgBXoubGgLd2fT41/OUYdb48v4k4WWHQurA==\",\n-      \"dev\": true,\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"@types/json-schema\": \"^7.0.9\",\n-        \"ajv\": \"^8.9.0\",\n-        \"ajv-formats\": \"^2.1.1\",\n-        \"ajv-keywords\": \"^5.1.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 10.13.0\"\n-      },\n-      \"funding\": {\n-        \"type\": \"opencollective\",\n-        \"url\": \"https://opencollective.com/webpack\"\n-      }\n-    },\n     \"node_modules/whatwg-url\": {\n       \"version\": \"5.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz\",\ndiff --git a/chit-chat-ui/src/components/Sidebar.tsx b/chit-chat-ui/src/components/Sidebar.tsx\nindex c451b1b..70421e0 100644\n--- a/chit-chat-ui/src/components/Sidebar.tsx\n+++ b/chit-chat-ui/src/components/Sidebar.tsx\n@@ -71,25 +71,24 @@ const ResponsiveSidebar: React.FC<ResponsiveSidebarProps> = ({ children, onLogou\n       <Divider sx={{ borderColor: \"rgba(255,255,255,0.1)\" }} />\n \n       <Stack sx={{ flexGrow: 1, p: 1, justifyContent: \"space-between\" }}>\n-        <List dense>\n-          {navItems.map((item) => (\n-            <ListItem key={item.text} disablePadding sx={{ display: \"block\" }}>\n-              <ListItemButton\n-                selected={location.pathname === item.path}\n-                component={Link}\n-                to={item.path}\n-                sx={{ borderRadius: 2 }}\n-                data-testid={\n-                  item.text === \"Community\" ? \"nav-community\" : \"nav-ai\"\n-                }\n-              >\n-                <ListItemIcon>{item.icon}</ListItemIcon>\n-                <ListItemText primary={item.text} sx={{ color: \"black\" }} />\n-              </ListItemButton>\n-              )\n-            </ListItem>\n-          ))}\n-        </List>\n+       <List dense>\n+  {navItems.map((item) => (\n+    <ListItem key={item.text} disablePadding sx={{ display: \"block\" }}>\n+      <ListItemButton\n+        selected={location.pathname === item.path}\n+        component={Link}\n+        to={item.path}\n+        sx={{ borderRadius: 2 }}\n+        data-testid={\n+          item.text === \"Community\" ? \"nav-community\" : item.text === \"AI Chat\" ? \"nav-ai\" : undefined\n+        }\n+      >\n+        <ListItemIcon>{item.icon}</ListItemIcon>\n+        <ListItemText primary={item.text} sx={{ color: \"black\" }} />\n+      </ListItemButton>\n+    </ListItem>\n+  ))}\n+</List>\n       </Stack>\n     </Box>\n   );\ndiff --git a/chit-chat-ui/src/pages/Login.tsx b/chit-chat-ui/src/pages/Login.tsx\nindex ace1087..421e6a8 100644\n--- a/chit-chat-ui/src/pages/Login.tsx\n+++ b/chit-chat-ui/src/pages/Login.tsx\n@@ -28,6 +28,7 @@ export default function Login({ onLogin }: LoginProps) {\n   const [username, setUsername] = useState(\"\");\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n+\n   const navigate = useNavigate();\n \n   const toggleMode = () => {\n@@ -179,7 +180,7 @@ export default function Login({ onLogin }: LoginProps) {\n                 <Link\n                   component=\"button\"\n                   variant=\"body2\"\n-                  onClick={toggleMode}\n+                  onClick={() => navigate(\"/register\")}\n                   sx={{ fontWeight: 600 }}\n                 >\n                   Register here\ndiff --git a/package-lock.json b/package-lock.json\nindex de6ef61..420bb9b 100644\n--- a/package-lock.json\n+++ b/package-lock.json\n@@ -23,9 +23,10 @@\n         \"eslint\": \"^9.36.0\",\n         \"eslint-plugin-react-hooks\": \"^5.2.0\",\n         \"eslint-plugin-react-refresh\": \"^0.4.21\",\n+        \"pg\": \"^8.16.3\",\n         \"ts-morph\": \"^27.0.0\",\n         \"ts-node\": \"^10.9.2\",\n-        \"typescript\": \"^5.9.2\",\n+        \"typescript\": \"^5.9.3\",\n         \"typescript-eslint\": \"^8.45.0\",\n         \"wait-on\": \"^9.0.1\"\n       }\n@@ -2380,6 +2381,103 @@\n       \"resolved\": \"https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\",\n       \"integrity\": \"sha512-KG8UEiEVkR3wGEb4m5yZkVCzigAD+cVEJck2CzYZO37ZGJfctvVptVO192MwrtPhzONn6go8ylnOdMhKqi4nfg==\"\n     },\n+    \"node_modules/pg\": {\n+      \"version\": \"8.16.3\",\n+      \"resolved\": \"https://registry.npmjs.org/pg/-/pg-8.16.3.tgz\",\n+      \"integrity\": \"sha512-enxc1h0jA/aq5oSDMvqyW3q89ra6XIIDZgCX9vkMrnz5DFTw/Ny3Li2lFQ+pt3L6MCgm/5o2o8HW9hiJji+xvw==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"pg-connection-string\": \"^2.9.1\",\n+        \"pg-pool\": \"^3.10.1\",\n+        \"pg-protocol\": \"^1.10.3\",\n+        \"pg-types\": \"2.2.0\",\n+        \"pgpass\": \"1.0.5\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 16.0.0\"\n+      },\n+      \"optionalDependencies\": {\n+        \"pg-cloudflare\": \"^1.2.7\"\n+      },\n+      \"peerDependencies\": {\n+        \"pg-native\": \">=3.0.1\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"pg-native\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n+    \"node_modules/pg-cloudflare\": {\n+      \"version\": \"1.2.7\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.2.7.tgz\",\n+      \"integrity\": \"sha512-YgCtzMH0ptvZJslLM1ffsY4EuGaU0cx4XSdXLRFae8bPP4dS5xL1tNB3k2o/N64cHJpwU7dxKli/nZ2lUa5fLg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"optional\": true\n+    },\n+    \"node_modules/pg-connection-string\": {\n+      \"version\": \"2.9.1\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.9.1.tgz\",\n+      \"integrity\": \"sha512-nkc6NpDcvPVpZXxrreI/FOtX3XemeLl8E0qFr6F2Lrm/I8WOnaWNhIPK2Z7OHpw7gh5XJThi6j6ppgNoaT1w4w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/pg-int8\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz\",\n+      \"integrity\": \"sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \">=4.0.0\"\n+      }\n+    },\n+    \"node_modules/pg-pool\": {\n+      \"version\": \"3.10.1\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-pool/-/pg-pool-3.10.1.tgz\",\n+      \"integrity\": \"sha512-Tu8jMlcX+9d8+QVzKIvM/uJtp07PKr82IUOYEphaWcoBhIYkoHpLXN3qO59nAI11ripznDsEzEv8nUxBVWajGg==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"peerDependencies\": {\n+        \"pg\": \">=8.0\"\n+      }\n+    },\n+    \"node_modules/pg-protocol\": {\n+      \"version\": \"1.10.3\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.10.3.tgz\",\n+      \"integrity\": \"sha512-6DIBgBQaTKDJyxnXaLiLR8wBpQQcGWuAESkRBX/t6OwA8YsqP+iVSiond2EDy6Y/dsGk8rh/jtax3js5NeV7JQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\"\n+    },\n+    \"node_modules/pg-types\": {\n+      \"version\": \"2.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz\",\n+      \"integrity\": \"sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"pg-int8\": \"1.0.1\",\n+        \"postgres-array\": \"~2.0.0\",\n+        \"postgres-bytea\": \"~1.0.0\",\n+        \"postgres-date\": \"~1.0.4\",\n+        \"postgres-interval\": \"^1.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/pgpass\": {\n+      \"version\": \"1.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz\",\n+      \"integrity\": \"sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"split2\": \"^4.1.0\"\n+      }\n+    },\n     \"node_modules/picomatch\": {\n       \"version\": \"2.3.1\",\n       \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n@@ -2425,6 +2523,49 @@\n         \"node\": \">=18\"\n       }\n     },\n+    \"node_modules/postgres-array\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz\",\n+      \"integrity\": \"sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules/postgres-bytea\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz\",\n+      \"integrity\": \"sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/postgres-date\": {\n+      \"version\": \"1.0.7\",\n+      \"resolved\": \"https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz\",\n+      \"integrity\": \"sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n+    \"node_modules/postgres-interval\": {\n+      \"version\": \"1.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz\",\n+      \"integrity\": \"sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"dependencies\": {\n+        \"xtend\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n     \"node_modules/prelude-ls\": {\n       \"version\": \"1.2.1\",\n       \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n@@ -2570,6 +2711,16 @@\n         \"node\": \">=8\"\n       }\n     },\n+    \"node_modules/split2\": {\n+      \"version\": \"4.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/split2/-/split2-4.2.0.tgz\",\n+      \"integrity\": \"sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==\",\n+      \"dev\": true,\n+      \"license\": \"ISC\",\n+      \"engines\": {\n+        \"node\": \">= 10.x\"\n+      }\n+    },\n     \"node_modules/strip-json-comments\": {\n       \"version\": \"3.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n@@ -2781,9 +2932,9 @@\n       }\n     },\n     \"node_modules/typescript\": {\n-      \"version\": \"5.9.2\",\n-      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz\",\n-      \"integrity\": \"sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==\",\n+      \"version\": \"5.9.3\",\n+      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.9.3.tgz\",\n+      \"integrity\": \"sha512-jl1vZzPDinLr9eUt3J/t7V6FgNEw9QjvBPdysz9KfQDD41fQrC2Y4vKQdiaUpFT4bXlb1RHhLpp8wtm6M5TgSw==\",\n       \"dev\": true,\n       \"license\": \"Apache-2.0\",\n       \"bin\": {\n@@ -2923,6 +3074,16 @@\n         \"node\": \">=0.10.0\"\n       }\n     },\n+    \"node_modules/xtend\": {\n+      \"version\": \"4.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz\",\n+      \"integrity\": \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\",\n+      \"dev\": true,\n+      \"license\": \"MIT\",\n+      \"engines\": {\n+        \"node\": \">=0.4\"\n+      }\n+    },\n     \"node_modules/yn\": {\n       \"version\": \"3.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/yn/-/yn-3.1.1.tgz\",\ndiff --git a/package.json b/package.json\nindex 88ef7b8..da2250a 100644\n--- a/package.json\n+++ b/package.json\n@@ -13,9 +13,10 @@\n     \"eslint\": \"^9.36.0\",\n     \"eslint-plugin-react-hooks\": \"^5.2.0\",\n     \"eslint-plugin-react-refresh\": \"^0.4.21\",\n+    \"pg\": \"^8.16.3\",\n     \"ts-morph\": \"^27.0.0\",\n     \"ts-node\": \"^10.9.2\",\n-    \"typescript\": \"^5.9.2\",\n+    \"typescript\": \"^5.9.3\",\n     \"typescript-eslint\": \"^8.45.0\",\n     \"wait-on\": \"^9.0.1\"\n   },\n@@ -27,7 +28,7 @@\n     \"codegen\": \"playwright codegen -c tests/e2e/playwright.config.ts\",\n     \"test:headless\": \"playwright test -c tests/e2e/playwright.config.ts\",\n     \"lint\": \"eslint . --ext .ts,.tsx,.js,.jsx --fix\",\n-    \"report:readable\": \"node scripts/generateReadableReport.js\",\n+    \"report:readable\": \"node scripts/generateReadableReport.cjs\",\n     \"test:report\": \"npm run test:e2e && npm run report:readable\"\n   },\n   \"dependencies\": {\ndiff --git a/scripts/generateReadableReport.cjs b/scripts/generateReadableReport.cjs\nindex 7913f7e..cb96ab4 100755\n--- a/scripts/generateReadableReport.cjs\n+++ b/scripts/generateReadableReport.cjs\n@@ -2,6 +2,7 @@ const fs = require(\"fs\");\n const path = require(\"path\");\n \n const reportDir = path.join(\"tests\", \"e2e\", \"playwright-report\");\n+//const reportDir = path.resolve(__dirname, \"..\", \"playwright-report\");\n const jsonPath = path.join(reportDir, \"results.json\");\n const mdPath = path.join(reportDir, \"summary.md\");\n const htmlPath = path.join(reportDir, \"summary.html\");\ndiff --git a/tests/e2e/ai-chat.spec.ts b/tests/e2e/ai-chat.spec.ts\nnew file mode 100644\nindex 0000000..de7fd0c\n--- /dev/null\n+++ b/tests/e2e/ai-chat.spec.ts\n@@ -0,0 +1,209 @@\n+import { test, expect } from '@playwright/test';\n+import { login } from './helpers';\n+\n+\n+const selectors = {\n+input: (p: any) => p.getByPlaceholder('Type a message...'),\n+send: (p: any) => p.getByTestId('send-button'),\n+list: (p: any) => p.getByTestId('message-list'),\n+};\n+\n+const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n+\n+// AT-1: AI Chat page loads and UI is visible\n+test('AT-1: /ai loads and UI is visible', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await expect(selectors.input(page)).toBeVisible();\n+    await expect(selectors.send(page)).toBeVisible();\n+});\n+\n+// AT-2: Can send a message and see it in the chat list\n+test('AT-2: Sending a message shows it in the chat list', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const message = 'What is the capital of the United States of America?';\n+    await selectors.input(page).fill(message);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(message);\n+});\n+\n+// AT-3: LLM response appears after sending message\n+test('AT-3: LLM response appears after sending a message', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const message = 'What is 2 + 2?';\n+    await selectors.input(page).fill(message);\n+    await selectors.send(page).click();\n+\n+    // Wait for response from the LLM\n+    await expect(selectors.list(page)).toContainText('2 + 2');\n+    await expect(selectors.list(page)).toContainText('4'); \n+});\n+\n+// AT-4: Socket emits LLM response without reload\n+test('AT-4: LLM response is delivered via socket in real-time', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const message = 'Tell me a fun fact.';\n+    await selectors.input(page).fill(message);\n+    await selectors.send(page).click();\n+\n+    // Wait for backend socket-delivered response\n+    await expect(selectors.list(page)).toContainText(/fun fact/i, { timeout: 5000 });\n+});\n+\n+// AT-5: Input clears after sending\n+test('AT-5: Input field clears after sending a message', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await selectors.input(page).fill('Clear me');\n+    await selectors.send(page).click();\n+    await expect(selectors.input(page)).toHaveValue('');\n+});\n+\n+// AT-6: Send button should be disabled or no action on empty message\n+test('AT-6: Send button should be disabled or no action on empty message', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    // Make sure input is empty\n+    await selectors.input(page).fill('');\n+    await expect(selectors.send(page)).toBeDisabled();\n+\n+    const prevCount = await selectors.list(page).locator('div').count();\n+    await page.keyboard.press('Enter');\n+    const postCount = await selectors.list(page).locator('div').count();\n+    expect(postCount).toBe(prevCount);\n+});\n+\n+// AT-7: Multiple messages should appear in correct order\n+test('AT-7: Multiple exchanges show in correct order', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const messages = ['Hi', 'What day is it?', 'Give me a quote'];\n+\n+    for (const msg of messages) {\n+        await selectors.input(page).fill(msg);\n+        await selectors.send(page).click();\n+        await expect(selectors.list(page)).toContainText(msg);\n+    }\n+\n+    const listText = await selectors.list(page).allTextContents();\n+    messages.forEach(msg => expect(listText.join()).toContain(msg));\n+});\n+\n+// AT-8: Long response from LLM is handled properly\n+test('AT-8: LLM long response does not break UI', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const message = 'Explain the theory of relativity in detail.';\n+    await selectors.input(page).fill(message);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(/relativity/i, { timeout: 7000 });\n+});\n+\n+// AT-9: Handles special characters or code input\n+test('AT-9: Can send code or special character input', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const code = 'const x = 5;';\n+    await selectors.input(page).fill(code);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(code);\n+});\n+\n+// AT-10: Handles network/server error (manual simulation or test stub needed)\n+test.skip('AT-10: Gracefully handles LLM/server error', async ({ page }) => {\n+    // Simulate by shutting down backend or mocking error socket event\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const msg = 'Trigger server error';\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page).locator(`text=${msg}`)).toBeVisible();\n+});\n+\n+// AT-11: LLM handles extremely long input gracefully\n+test('AT-11: LLM handles extremely long input gracefully', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const longMessage = 'word '.repeat(500); // ~2,500 characters\n+    await selectors.input(page).fill(longMessage);\n+    await selectors.send(page).click();\n+\n+    // Should still show original input\n+    await expect(selectors.list(page)).toContainText(longMessage.slice(0, 50));\n+\n+    // Should show some kind of response — even if it's a fallback\n+    await expect(selectors.list(page)).not.toHaveText(/error/i); \n+    await expect(selectors.list(page)).not.toHaveText(''); \n+});\n+\n+// AT-12: Sending a new message before previous LLM response finishes\n+test('AT-12: Sending a new message before previous LLM response finishes', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    await selectors.input(page).fill('Start a long explanation about the solar system...');\n+    await selectors.send(page).click();\n+\n+    // Send another message immediately\n+    await selectors.input(page).fill('What’s the hottest planet?');\n+    await selectors.send(page).click();\n+\n+    // Assert both questions and at least one response appear\n+    await expect(selectors.list(page)).toContainText('solar system');\n+    await expect(selectors.list(page)).toContainText('hottest planet');\n+    await expect(selectors.list(page)).toContainText(/Mercury|Venus/i, { timeout: 7000 });\n+});\n+\n+// AT-13: LLM can return formatted/code responses\n+test('AT-13: LLM can return formatted/code responses', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    await selectors.input(page).fill('Show me a JavaScript function that reverses a string');\n+    await selectors.send(page).click();\n+\n+    await expect(selectors.list(page)).toContainText('function');\n+    await expect(selectors.list(page)).toContainText('reverse');\n+    await expect(selectors.list(page)).toContainText('{', { timeout: 5000 }); \n+});\n+\n+// AT-14: Shows fallback when backend/LLM fails (simulated by aborting socket route)\n+test('AT-14: Shows fallback when backend/LLM fails', async ({ page }) => {\n+    await login(page);\n+\n+    // Intercept the LLM response route and simulate server error\n+    await page.route('**/socket.io/**', route => route.abort());\n+\n+    await page.goto(`${BASE_URL}/ai`);\n+    const failMessage = 'What’s the meaning of life?';\n+    await selectors.input(page).fill(failMessage);\n+    await selectors.send(page).click();\n+\n+    await expect(selectors.list(page)).toContainText(failMessage);\n+\n+    // Since no LLM response will arrive, verify it doesn't freeze or duplicate\n+    await expect(selectors.list(page)).not.toContainText(/Philosophical|Religious|Scientific|Personal/i);\n+});\n+\n+// AT-15: Consecutive messages do not overwrite each other\n+test('AT-15: Consecutive messages do not overwrite each other', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const messages = ['What is 5 + 5?', 'Define AI.', 'How tall is Mount Everest?'];\n+\n+    for (const msg of messages) {\n+        await selectors.input(page).fill(msg);\n+        await selectors.send(page).click();\n+    }\n+\n+    for (const msg of messages) {\n+        await expect(selectors.list(page)).toContainText(msg, { timeout: 5000 });\n+    }\n+});\n\\ No newline at end of file\ndiff --git a/tests/e2e/auth-login.spec.ts b/tests/e2e/auth-login.spec.ts\nindex 4e3b5b3..8bfca6f 100644\n--- a/tests/e2e/auth-login.spec.ts\n+++ b/tests/e2e/auth-login.spec.ts\n@@ -8,130 +8,177 @@ import { test, expect } from '@playwright/test';\n \n const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n \n+// AT-1: Successful registration\n+test('AT-1: Register new user successfully', async ({ page }) => {\n+  const user = `user${Date.now()}`;\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+\n+  await page.getByTestId('login-username').locator('input').fill(user);\n+  await page.getByTestId('login-password').locator('input').fill('password123');\n+  await page.getByTestId('register-button').click();\n+\n+  await expect(page).toHaveURL(/\\/community|\\/login|\\/dashboard/i);\n+});\n+\n+// AT-2: Register with an existing username\n+test('AT-2: Registration fails when username already exists', async ({ page }) => {\n+  const user = `user${Date.now()}`;\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+\n+  await page.getByRole('textbox', { name: 'Full Name' }).click();\n+  await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n+  await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n+  await page.getByTestId('login-username').locator('input').fill(user);\n+  await page.getByTestId('login-password').locator('input').fill('password123');\n+  await page.getByTestId('register-button').click();\n+\n+  // Try to register same user again\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+\n+  await page.getByRole('textbox', { name: 'Full Name' }).click();\n+  await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n+  await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n+  await page.getByTestId('login-username').locator('input').fill(user);\n+  await page.getByTestId('login-password').locator('input').fill('password123');\n+  await page.getByTestId('register-button').click();\n+\n+  // Assert error message appears\n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n+  await expect(errorMsg).toBeVisible();\n+  await expect(errorMsg).toHaveText(/invalid credentials/i);\n+});\n+\n+// AT-3: Registration with empty fields\n+test('AT-3: Registration fails when fields are empty', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+  await page.getByTestId('register-button').click();\n+\n+  // HTML5 validation may block this automatically\n+  const usernameValid = await page.getByTestId('login-username').locator('input').evaluate(\n+    el => (el as HTMLInputElement).checkValidity()\n+  );\n+  const passwordValid = await page.getByTestId('login-password').locator('input').evaluate(\n+    el => (el as HTMLInputElement).checkValidity()\n+  );\n+\n+  expect(usernameValid).toBeFalsy();\n+  expect(passwordValid).toBeFalsy();\n+});\n+\n+// AT-4: Password too short\n+test('AT-4: Registration fails when password is too short', async ({ page }) => {\n+  const user = `short${Date.now()}`;\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+\n+  await page.getByRole('textbox', { name: 'Full Name' }).click();\n+  await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n+  await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n+  await page.getByTestId('login-username').locator('input').fill(user);\n+  await page.getByTestId('login-password').locator('input').fill('123'); // too short\n+  await page.getByTestId('register-button').click();\n+\n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n+  await expect(errorMsg).toBeVisible();\n+  await expect(errorMsg).toContainText(/Password must be at least|\\/characters|\\/uppercase|\\/lowercase|\\/special/i);\n+});\n+\n+// AT-5: Valid login\n+test('AT-5: Login with valid credentials redirects to community', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByTestId('login-username').locator('input').fill('AT');\n+  await page.getByTestId('login-password').locator('input').fill('automatedtests');\n+  await page.getByTestId('login-button').click();\n+\n+  await expect(page).toHaveURL(/\\/community|\\/dashboard/i);\n+  await expect(page.locator('text=Talk to the Community')).toBeVisible({ timeout: 10000 });\n+});\n+\n+// AT-6: Invalid password\n+test('AT-6: Login fails with invalid password', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByTestId('login-username').locator('input').fill('AT');\n+  await page.getByTestId('login-password').locator('input').fill('wrong');\n+  await page.getByTestId('login-button').click();\n+\n+  // Assert error message appears\n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n+  await expect(errorMsg).toBeVisible();\n+  await expect(errorMsg).toHaveText(/invalid credentials/i);\n+});\n+\n+// AT-7: Empty login fields\n+test('AT-7: Login fails when fields are empty', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByTestId('login-button').click();\n+\n+  const usernameValid = await page.getByTestId('login-username').locator('input').evaluate(\n+    el => (el as HTMLInputElement).checkValidity()\n+  );\n+  const passwordValid = await page.getByTestId('login-password').locator('input').evaluate(\n+    el => (el as HTMLInputElement).checkValidity()\n+  );\n+\n+  expect(usernameValid).toBeFalsy();\n+  expect(passwordValid).toBeFalsy();\n+});\n+\n+// AT-8: Username case sensitivity\n+test('AT-8: Login fails if username case does not match', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByTestId('login-username').locator('input').fill('at'); // lowercase\n+  await page.getByTestId('login-password').locator('input').fill('automatedtests');\n+  await page.getByTestId('login-button').click();\n+\n+  // Assert error message appears\n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n+  await expect(errorMsg).toBeVisible();\n+  await expect(errorMsg).toHaveText(/invalid credentials/i);\n+});\n+\n+// AT-9: Register ↔ Login navigation works\n+test('AT-9: Navigation between login and register pages works', async ({ page }) => {\n+  await page.goto(`${BASE_URL}/login`);\n+  await page.getByText(/register here/i).click();\n+  await expect(page).toHaveURL(/\\/register$/);\n+\n+  await page.getByText(/login here/i).click();\n+  await expect(page).toHaveURL(/\\/login$/);\n+});\n+\n+test('AT-10: Registration fails when password boundaries are not met', async ({ page }) => {\n+  const user = `short${Date.now()}`;\n+  const weakPasswords = [\n+    '123567',     // too short\n+    'uwyehd1@',   // no uppercase\n+    'BDHEIS1@',   // no lowercase\n+    '12345678',   // numbers only\n+    'uwyehdwe',   // lowercase only\n+    'JDHCBWIR',   // uppercase only\n+    '!@#$%^&*',   // special characters only\n+    'uwyehdH@',   // no number\n+    'uwyehd1C',   // no special character\n+  ];\n+\n+  const registerWithPassword = async (password: string) => {\n+    await page.goto(`${BASE_URL}/login`);\n+    await page.getByText(/register here/i).click();\n+    await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n+    await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n+    await page.getByTestId('login-username').locator('input').fill(user);\n+    await page.getByTestId('login-password').locator('input').fill(password);\n+    await page.getByTestId('register-button').click();\n+  };\n \n+  const errorMsg = page.locator('[data-testid=\"auth-error\"]');\n \n-  // AT-1: Successful registration\n-  test('AT-1: Register new user successfully', async ({ page }) => {\n-    const user = `user${Date.now()}`;\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text \n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByPlaceholder('Full Name').fill('Test User');\n-    await page.getByPlaceholder('Username').fill(user);\n-    await page.getByPlaceholder('Password').fill('password123');\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    await expect(page).toHaveURL(/\\/community|\\/login|\\/dashboard/i);\n-  });\n-\n-  // AT-2: Register with an existing username\n-  test('AT-2: Registration fails when username already exists', async ({ page }) => {\n-    const user = `user${Date.now()}`;\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text \n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByPlaceholder('Full Name').fill('Test User');\n-    await page.getByPlaceholder('Username').fill(user);\n-    await page.getByPlaceholder('Password').fill('password123');\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text \n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByPlaceholder('Full Name').fill('Test User');\n-    await page.getByPlaceholder('Username').fill(user);\n-    await page.getByPlaceholder('Password').fill('password123');\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    const errorMsg = page.locator('.error');\n-    await expect(errorMsg).toBeVisible({ timeout: 5000 });\n-    await expect(errorMsg).toHaveText(/already exists|username taken|duplicate/i);\n-  });\n-\n-  // AT-3: Registration with empty fields\n-  test('AT-3: Registration fails when fields are empty', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text\n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    // Expect required validation\n-    await expect(page.locator('input[placeholder=\"Full Name\"]:invalid')).toBeVisible();\n-    await expect(page.locator('input[placeholder=\"Username\"]:invalid')).toBeVisible();\n-    await expect(page.locator('input[placeholder=\"Password\"]:invalid')).toBeVisible();\n-  });\n-\n-  // AT-4: Password too short\n-  test('AT-4: Registration fails when password is too short', async ({ page }) => {\n-    const user = `shortpass${Date.now()}`;\n-    await page.goto(BASE_URL + '/login');\n-    // Click the register text\n-    await page.getByText(\"Don't have an account? Register here\").click();\n-    await page.getByPlaceholder('Full Name').fill('Short Pass');\n-    await page.getByPlaceholder('Username').fill(user);\n-    await page.getByPlaceholder('Password').fill('123');\n-    await page.getByRole('button', { name: 'Register' }).click();\n-\n-    const errorMsg = page.locator('.error');\n-    await expect(errorMsg).toBeVisible({ timeout: 5000 });\n-    await expect(errorMsg).toContainText(/password.*too short|minimum/i);\n-  });\n-\n-  // AT-5: Successful login with valid credentials\n-  test('AT-5: Login with valid credentials redirects to community', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByPlaceholder('Username').fill('AT');\n-    await page.getByPlaceholder('Password').fill('automatedtests');\n-    await page.getByRole('button', { name: 'Login' }).click();\n-\n-    await expect(page).toHaveURL(/\\/community|\\/dashboard/i);\n-    await expect(page.locator('text=Talk to the Community')).toBeVisible({ timeout: 10000 });\n-  });\n-\n-  // AT-6: Invalid login (wrong password)\n-  test('AT-06: Login fails with invalid password', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByPlaceholder('Username').fill('AT');\n-    await page.getByPlaceholder('Password').fill('wrong');\n-    await page.getByRole('button', { name: 'Login' }).click();\n-\n-    const errorMsg = page.locator('.error');\n-    await expect(errorMsg).toBeVisible({ timeout: 5000 });\n-    await expect(errorMsg).toHaveText(/invalid credentials/i);\n-  });\n-\n-  // AT-7: Login with empty fields\n-  test('AT-07: Login fails when username or password is missing', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByPlaceholder('Username').fill('');\n-    await page.getByPlaceholder('Password').fill('');\n-    await page.getByRole('button', { name: 'Login' }).click();\n-\n-    // Expect built-in HTML5 validation to prevent submission\n-    const usernameValid = await page.getByPlaceholder('Username').evaluate(el => (el as HTMLInputElement).checkValidity());\n-    const passwordValid = await page.getByPlaceholder('Password').evaluate(el => (el as HTMLInputElement).checkValidity());\n-    expect(usernameValid).toBeFalsy();\n-    expect(passwordValid).toBeFalsy();\n-  });\n-\n-  // AT-8: Case sensitivity check for login\n-  test('AT-8: Login fails if username case does not match', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByPlaceholder('Username').fill('at');\n-    await page.getByPlaceholder('Password').fill('automatedtests');\n-    await page.getByRole('button', { name: 'Login' }).click();\n-\n-    const errorMsg = page.locator('.error');\n+  for (const password of weakPasswords) {\n+    await registerWithPassword(password);\n     await expect(errorMsg).toBeVisible({ timeout: 5000 });\n-    await expect(errorMsg).toHaveText(/invalid credentials/i);\n-  });\n-\n-  // AT-9: Navigation between login and register\n-  test('AT-9: Navigation between login and register pages works', async ({ page }) => {\n-    await page.goto(BASE_URL + '/login');\n-    await page.getByText(/register here/i).click();\n-    await expect(page).toHaveURL(/\\/register$/);\n-\n-    await page.getByText(/login here/i).click();\n-    await expect(page).toHaveURL(/\\/login$/);\n-  });\n+    await expect(errorMsg).toContainText(/Password must be at least|characters|uppercase|lowercase|special/i);\n+  }\n+});\n\\ No newline at end of file\ndiff --git a/tests/e2e/autoscroll.spec.ts b/tests/e2e/autoscroll.spec.ts\nindex daa609f..11def0d 100644\n--- a/tests/e2e/autoscroll.spec.ts\n+++ b/tests/e2e/autoscroll.spec.ts\n@@ -5,127 +5,192 @@ Human code: 85% (tool: Playwright, Tests: 1-4)\n Framework generated code: 0%\n */\n \n-import { test, expect } from '@playwright/test';\n+import { test, expect, Page, Locator } from '@playwright/test';\n+import { login } from './helpers';\n \n // selectors used everywhere\n const input = (p:any) => p.getByPlaceholder('Type a message...');\n-const list  = (p:any) => p.locator('.messages-container');\n+const list = (p: Page) => p.locator('[data-testid=\"message-list\"]');\n const uniq  = (s:string) => `${s} ${Date.now()}`;\n+\n const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n \n-// Helper function for scrolling\n-async function atBottom(l:any) {\n-  return l.evaluate((el:HTMLElement) =>\n-    Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) <= 4\n-  );\n+// Accepts a locator and checks if the scroll is near the bottom\n+export async function atBottom(locator: Locator): Promise<boolean> {\n+  return await locator.evaluate((el) => {\n+    const threshold = 5; // px — allow minor diff due to rounding\n+    return el.scrollHeight - el.scrollTop - el.clientHeight < threshold;\n+  });\n+  }\n+\n+  export const send = (page: Page) =>\n+  page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n+\n+  async function stabilize(page: Page) {\n+  await login(page);\n+\n+  // Wait for list to be visible\n+  await expect(list(page)).toBeVisible({ timeout: 10000 });\n+\n+  // Scroll to bottom\n+  await list(page).evaluate((el: HTMLElement) => {\n+    el.scrollTop = el.scrollHeight;\n+  });\n+\n+  // Ensure input and send button are also visible\n+  await input(page).waitFor({ state: 'visible', timeout: 10000 });\n+  await send(page).waitFor({ state: 'visible', timeout: 10000 });\n }\n \n-// AT-01: Viewer is at bottom, auto-scroll to see new message \n test('AT-01: Auto-scroll when viewer is at bottom', async ({ browser }) => {\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-  await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n \n-  // make sure user B is at bottom now\n-  await list(b).evaluate((el:HTMLElement) => el.scrollTop = el.scrollHeight);\n+  await login(a);\n+  await login(b);\n+\n+  await expect(list(b)).toBeVisible();\n+\n+  // Scroll B to bottom\n+  await list(b).evaluate((el: HTMLElement) => el.scrollTop = el.scrollHeight);\n   expect(await atBottom(list(b))).toBeTruthy();\n \n-  const msg = uniq('auto-bottom');\n+  const msg = uniq('AT: auto-bottom');\n   await input(a).fill(msg);\n-  await send.click();\n+  await send(a).click();\n+\n+  // Optional: wait for UI\n+  await b.waitForTimeout(500);\n \n-  await expect(list(b)).toContainText(msg, { timeout: 10000 });\n+  const text = await list(b).innerText();\n+  expect(text.includes(msg)).toBeTruthy(); \n   expect(await atBottom(list(b))).toBeTruthy();\n \n-  await Promise.all([ctxA.close(), ctxB.close()]);\n+  await ctxA.close();\n+  await ctxB.close();\n });\n \n-// AT-02: Viewer scrolled up, do not force-scroll \n test('AT-02: No jump when viewer scrolled up', async ({ browser }) => {\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-  await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n \n-  // seed some history so we can scroll\n-  for (let i = 0; i < 6; i++) {\n-    await input(a).fill(uniq('seed'));\n+  await login(a);\n+  await login(b);\n+\n+  const send = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n+\n+  // Seed multiple messages so B can scroll\n+  for (let i = 0; i < 10; i++) {\n+    const msg = uniq('seed');\n+    await input(a).fill(msg);\n+    await expect(send).toBeVisible();\n+    await send.waitFor({ state: 'attached' });\n     await send.click();\n+    await a.waitForTimeout(150); \n   }\n-  await expect(list(b)).toContainText('seed', { timeout: 10000 });\n \n-  // scroll B to the top (not at bottom)\n-  await list(b).evaluate((el:HTMLElement) => el.scrollTop = 0);\n-  expect(await atBottom(list(b))).toBeFalsy();\n+  // Wait until B sees all seeded messages\n+  await expect(list(b)).toContainText('seed', { timeout: 10000 });\n \n-  const msg = uniq('no-jump');\n-  await input(a).fill(msg);\n+  // Manually scroll B up — simulate user scrolling up to read older messages\n+  await list(b).evaluate((el: HTMLElement) => { el.scrollTop = 0 });\n+\n+  // Double check scroll position BEFORE new message\n+  const before = await list(b).evaluate(el => ({\n+    scrollTop: el.scrollTop,\n+    scrollHeight: el.scrollHeight,\n+    clientHeight: el.clientHeight,\n+    isAtBottom: Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 2,\n+  }));\n+  console.log('Before sending:', before);\n+  expect(before.isAtBottom).toBeFalsy(); // must NOT be at bottom\n+\n+  // Now send another message from A\n+  const newMsg = uniq('no-jump');\n+  await input(a).fill(newMsg);\n+  await expect(send).toBeVisible();\n+  await send.waitFor({ state: 'attached' });\n+  await a.waitForTimeout(150); // give DOM time to settle\n   await send.click();\n \n-  await expect(list(b)).toContainText(msg, { timeout: 10000 });\n-  expect(await atBottom(list(b))).toBeFalsy(); // still not at bottom\n+  // Wait until B receives the message\n+  await expect(list(b)).toContainText(newMsg, { timeout: 10000 });\n+\n+  // Check scroll state again — it should NOT have jumped\n+  const after = await list(b).evaluate(el => ({\n+    scrollTop: el.scrollTop,\n+    scrollHeight: el.scrollHeight,\n+    clientHeight: el.clientHeight,\n+    isAtBottom: Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 2,\n+  }));\n+  console.log('After receiving:', after);\n+  expect(after.isAtBottom).toBeFalsy(); // still not at bottom\n \n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n-// AT-03: Auto-scroll resumes after viewer returns to bottom\n test('AT-03: Auto-scroll resumes after viewer returns to bottom', async ({ browser }) => {\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-  await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n+  const send = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n \n-  const listB = b.locator('.messages-container');\n+  await login(a);\n+  await login(b);\n \n-  // Seed enough history so the list can scroll\n-  for (let i = 0; i < 15; i++) {\n+  const listB = list(b);\n+  // Seed enough messages to make it scrollable\n+  for (let i = 0; i < 20; i++) {\n     await a.getByPlaceholder('Type a message...').fill(`seed ${i}`);\n-    await send.click();\n+    await a.getByPlaceholder('Type a message...').press('Enter');\n   }\n+\n   await expect(listB).toContainText('seed 0', { timeout: 10_000 });\n \n-  // Scroll up, don't assert here to avoid flakiness\n-  await listB.evaluate(el => (el as HTMLElement).scrollTop = 0);\n-  await b.waitForTimeout(150);\n+  // Simulate user scrolling up\n+  await listB.evaluate(el => el.scrollTop = 0);\n+  await b.waitForTimeout(300);\n \n-  // Now explicitly return to bottom by scrolling the last item into view\n-  const lastItem = listB.locator(':scope > *').last();\n-  await lastItem.scrollIntoViewIfNeeded();\n+  // Simulate user manually scrolling back to bottom (like PageDown or scrollbar)\n+  await listB.evaluate(el => el.scrollTop = el.scrollHeight);\n+  await b.waitForTimeout(300);\n \n-  // Confirm we're at/near bottom\n-  await expect.poll(async () => {\n-    return await listB.evaluate((el: HTMLElement) => {\n-      const delta = Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight);\n-      return delta <= 20;\n-    });\n-  }, { timeout: 2000 }).toBeTruthy();\n+  // Confirm near-bottom (within 20px)\n+  const atBottom = await listB.evaluate(el => {\n+    return Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) <= 20;\n+  });\n+  expect(atBottom).toBeTruthy();\n \n-  // New message arrives, should still be at bottom\n-  const msg = `resume ${Date.now()}`;\n+  // Send new message from A\n+  const msg = `resume-${Date.now()}`;\n   await a.getByPlaceholder('Type a message...').fill(msg);\n-  await send.click();\n-\n-  await expect(listB).toContainText(msg, { timeout: 10_000 });\n-  await expect.poll(async () => {\n-    return await listB.evaluate((el: HTMLElement) => {\n-      const delta = Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight);\n-      return delta <= 20;\n-    });\n-  }, { timeout: 2000 }).toBeTruthy();\n+  await a.getByPlaceholder('Type a message...').press('Enter');\n+\n+  // Wait for message to appear\n+  const timeout = 10000;\n+  const start = Date.now();\n+  let found = false;\n+  while (Date.now() - start < timeout) {\n+    const text = await listB.innerText();\n+    if (text.includes(msg)) {\n+      found = true;\n+      break;\n+    }\n+    await b.waitForTimeout(200);\n+  }\n \n+  expect(found).toBeTruthy();\n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n // AT-04: Sending your own message keeps you at bottom \n test('AT-04: Sender stays at bottom after sending', async ({ page }) => {\n-  await page.goto(BASE_URL + '/');\n+  await login(page);\n   await list(page).evaluate((el:HTMLElement) => el.scrollTop = el.scrollHeight);\n   const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   expect(await atBottom(list(page))).toBeTruthy();\ndiff --git a/tests/e2e/chat-guest.spec.ts b/tests/e2e/chat-guest.spec.ts\nindex ae768fc..ff7307a 100644\n--- a/tests/e2e/chat-guest.spec.ts\n+++ b/tests/e2e/chat-guest.spec.ts\n@@ -1,4 +1,4 @@\n-/*\n+/* \n AI-generated-code: 15% (tool: Playwright, Used AI to help locate the elements on the app\n AI chat link: N/A this was generated before Iteration 1 submission)\n Human code: 85% (tool: Playwright, Tests: 1-10)\n@@ -7,200 +7,244 @@ Framework generated code: 0%\n import { test, expect } from '@playwright/test';\n import { login } from './helpers';\n \n+const uniq = (m: string) => `${m} ${Date.now()}`;\n+const BASE_PATH = '/community';\n \n-const uniq = (m:string)=> `${m} ${Date.now()}`;\n-const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n const selectors = {\n   input: (p: any) => p.getByPlaceholder('Type a message...'),\n-  send:  (p: any) => p.getByRole('button', { name: 'Send' }),\n-  list:  (p: any) => p.locator('.messages-container'),\n+  send: (p: any) => p.getByTestId('send-button'),\n+  list: (p: any) => p.getByTestId('message-list')\n };\n \n+async function stabilizePage(page: any) {\n+  const base = process.env.BASE_URL || 'http://localhost:8000';\n+  await page.goto(`${base}${BASE_PATH}`);\n \n-// AT-1: Guests can send a message\n-test('AT-1: Guest sends a message', async ({ page }) => {\n-  await login(page);\n-  //await page.goto(BASE_URL + '/');\n+  // Wait for chat UI to fully render before acting\n+  await page.waitForSelector('[data-testid=\"message-list\"]', { timeout: 10000 });\n+  await selectors.input(page).waitFor({ state: 'visible', timeout: 10000 });\n+  await selectors.send(page).waitFor({ state: 'visible', timeout: 10000 });\n \n-  const input = page.locator('input[type=\"text\"], textarea').first();\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n-  const messages = page.locator('.messages-container');\n+  // Ensure scroll is at bottom\n+  await selectors.list(page).evaluate((el: HTMLElement) => el.scrollTop = el.scrollHeight);\n+  }\n+\n+  test.afterEach(async ({ page }) => {\n+  try { await page.waitForTimeout(200); } catch {}\n+});\n \n+// AT-1: Guest sends a message\n+test('AT-1: Guest sends a message', async ({ page }) => {\n+  await login(page);\n+  await stabilizePage(page);\n \n   const msg = `hello world ${new Date().toISOString()}`;\n-  await input.fill(msg);\n-  await send.click();\n+  await selectors.input(page).fill(msg);\n+  await selectors.send(page).click();\n \n-  await expect(messages).toContainText(msg, { timeout: 3000 });\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(selectors.list(page)).toContainText(msg);\n });\n \n-// AT-2: Message received by another user \n+// AT-2: Real-time receive across two guests\n test('AT-2: Real-time receive across two guests', async ({ browser }) => {\n   test.setTimeout(65_000);\n-\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n+\n   await login(a);\n   await login(b);\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-\n-  //await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n+  await stabilizePage(a);\n+  await stabilizePage(b);\n \n   const ping = uniq('ping');\n   await selectors.input(a).fill(ping);\n-  await send.click();\n+  await selectors.send(a).click();\n \n-  await expect(selectors.list(b)).toContainText(ping, { timeout: 60_000 });\n+  const lastMessageB = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  await expect(selectors.list(b)).toContainText(ping);\n \n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n-// AT-3: Multiple messages preserve order\n+// AT-3: Messages preserve chronological order\n test('AT-3: Messages preserve chronological order', async ({ browser }) => {\n   test.setTimeout(65_000);\n-\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n+\n   await login(a);\n   await login(b);\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-\n-  //await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n+  await stabilizePage(a);\n+  await stabilizePage(b);\n \n   const m1 = uniq('msg1');\n   const m2 = uniq('msg2');\n   const m3 = uniq('msg3');\n \n-  for (const m of [m1, m2, m3]) {\n-    await selectors.input(a).fill(m);\n-    await send.click();\n-  }\n+  await selectors.input(a).fill(m1);\n+  await selectors.send(a).click();\n+  const last1 = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  //await expect(last1).toContainText(m1);\n \n-  // Read the full text in the messages container and compare indices.\n-  const text = await selectors.list(b).innerText({ timeout: 60_000 });\n-  const i1 = text.indexOf(m1), i2 = text.indexOf(m2), i3 = text.indexOf(m3);\n-  expect(i1).toBeGreaterThanOrEqual(0);\n-  expect(i2).toBeGreaterThan(i1);\n-  expect(i3).toBeGreaterThan(i2);\n+  await selectors.input(a).fill(m2);\n+  await selectors.send(a).click();\n+  const last2 = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  //await expect(last2).toContainText(m2);\n+\n+  await selectors.input(a).fill(m3);\n+  await selectors.send(a).click();\n+  const last3 = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  //await expect(last3).toContainText(m3);\n+\n+  const text = await selectors.list(b).innerText();\n+  expect(text.indexOf(m1)).toBeLessThan(text.indexOf(m2));\n+  expect(text.indexOf(m2)).toBeLessThan(text.indexOf(m3));\n \n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n-// AT-4: Real-time delivery performance\n+// AT-4: Delivery time under target\n test('AT-4: Delivery time under target', async ({ browser }) => {\n   test.setTimeout(65_000);\n-\n   const ctxA = await browser.newContext();\n   const ctxB = await browser.newContext();\n   const a = await ctxA.newPage();\n   const b = await ctxB.newPage();\n+\n   await login(a);\n   await login(b);\n-  const send  = a.getByRole('button', { name: 'Send' }).or(a.locator('button').first());\n-\n-  //await Promise.all([a.goto(BASE_URL + '/'), b.goto(BASE_URL + '/')]);\n+  await stabilizePage(a);\n+  await stabilizePage(b);\n \n   const payload = uniq('latency');\n   const t0 = Date.now();\n \n   await selectors.input(a).fill(payload);\n-  await send.click();\n+  await selectors.send(a).click();\n \n-  await expect(selectors.list(b)).toContainText(payload, { timeout: 60_000 });\n+  const lastMessageB = selectors.list(b).locator('div:has-text(\"You:\")').last();\n+  await expect(selectors.list(b)).toContainText(payload);\n \n   const dt = Date.now() - t0;\n-  expect(dt).toBeLessThanOrEqual(60_000);  // acceptance ceiling\n-  expect(dt).toBeLessThanOrEqual(3_000);   // performance target\n+  expect(dt).toBeLessThanOrEqual(60000);\n+  expect(dt).toBeLessThanOrEqual(5000);\n \n   await Promise.all([ctxA.close(), ctxB.close()]);\n });\n \n // AT-5: Guest session persists after reload\n test('AT-5: Guest can continue chatting after reload', async ({ page }) => {\n-  //await page.goto(BASE_URL + '/');\n   await login(page);\n-  const before = uniq('before-reload');\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n+  await stabilizePage(page);\n \n+  const before = uniq('before-reload');\n   await selectors.input(page).fill(before);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(before, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  let lastBefore = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastBefore).toContainText(before);\n \n   await page.reload();\n+  await stabilizePage(page);\n \n   const after = uniq('after-reload');\n   await selectors.input(page).fill(after);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(after, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  const lastAfter = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastAfter).toContainText(after);\n });\n \n // AT-6: Empty message is blocked\n test('AT-6: Empty message is blocked', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n-  await selectors.input(page).fill('');          \n-  await send.click();\n+  await stabilizePage(page);\n+\n+  // Capture last message BEFORE\n+  const lastBefore = await selectors.list(page).locator('div:has-text(\"You:\")').last().innerText();\n \n-  // Assert nothing new appeared by sending a unique marker next\n+  // Try to send an empty message\n+  await selectors.input(page).fill('');\n+  await selectors.send(page).click();\n+  await page.waitForTimeout(300); \n+\n+  // Capture last message AFTER attempting empty send\n+  const lastAfter = await selectors.list(page).locator('div:has-text(\"You:\")').last().innerText();\n+\n+  // Assert nothing changed\n+  expect(lastAfter).toBe(lastBefore);\n+\n+  // Now send a valid marker\n   const marker = uniq('marker');\n   await selectors.input(page).fill(marker);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(marker, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastMessage).toContainText(marker);\n });\n \n-// AT-7: Whitespace is blocked\n+// AT-7: Whitespace-only message is blocked\n test('AT-7: Whitespace-only message is blocked', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n+  await stabilizePage(page);\n+\n   await selectors.input(page).fill('   ');\n-  await send.click();\n+  await selectors.send(page).click();\n+\n   const marker = uniq('marker');\n   await selectors.input(page).fill(marker);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(marker, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(selectors.list(page)).toContainText(marker);\n });\n \n-// AT-8: Long word wraps\n+// AT-8: Long word wraps without breaking layout\n test('AT-8: Long word wraps without breaking layout', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n+  await stabilizePage(page);\n+\n   const long = 'a'.repeat(200);\n   await selectors.input(page).fill(long);\n-  await send.click();\n-  await expect(selectors.list(page)).toContainText(long, { timeout: 3000 });\n+  await selectors.send(page).click();\n+\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastMessage).toContainText(long);\n });\n \n-// AT-9: Simple autoscroll behavior\n+// AT-9: Autoscroll to bottom on send\n test('AT-9: Autoscroll to bottom on send', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n-  // Scroll top first if container is scrollable\n+  await stabilizePage(page);\n+\n   const list = selectors.list(page);\n-  await list.evaluate((el:HTMLElement) => el.scrollTop = 0);\n+  await list.evaluate((el: HTMLElement) => el.scrollTop = 0);\n+\n   const msg = uniq('scroll-check');\n   await selectors.input(page).fill(msg);\n-  await send.click();\n-  await expect(list).toContainText(msg, { timeout: 3000 });\n-  // Verify we ended near bottom\n-  const atBottom = await list.evaluate((el:any) => Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 4);\n+  await selectors.send(page).click();\n+\n+  const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+  await expect(lastMessage).toContainText(msg);\n+\n+  const atBottom = await list.evaluate((el: any) =>\n+    Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 4\n+  );\n   expect(atBottom).toBeTruthy();\n });\n \n // AT-10: Clear the input after sending\n test('AT-10: Clears input after sending', async ({ page }) => {\n-  const send  = page.getByRole('button', { name: 'Send' }).or(page.locator('button').first());\n   await login(page);\n-  //await page.goto(BASE_URL + '/');\n+  await stabilizePage(page);\n+\n   await selectors.input(page).fill('clear me');\n-  await send.click();\n-  await expect(selectors.input(page)).toHaveValue('');           \n-});\n+  await selectors.send(page).click();\n \n+  await expect(selectors.input(page)).toHaveValue('');\n+});\n\\ No newline at end of file\ndiff --git a/tests/e2e/chat-history.spec.ts b/tests/e2e/chat-history.spec.ts\nindex f75d9e4..d6eb635 100644\n--- a/tests/e2e/chat-history.spec.ts\n+++ b/tests/e2e/chat-history.spec.ts\n@@ -2,44 +2,41 @@ import { test, expect } from '@playwright/test';\n import { Page } from '@playwright/test';\n import { login } from './helpers';\n \n+const selectors = {\n+    input: (p: any) => p.getByPlaceholder('Type a message...'),\n+    send: (p: any) => p.getByTestId('send-button'),\n+    list: (p: any) => p.getByTestId('message-list')\n+};\n \n-async function goToChat(page: Page) {\n-  //await page.goto('/');\n-  await page.reload();\n-  await page.waitForSelector('.messages-container');\n-}\n+const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n \n // AT-1: Persist single message after refresh\n test('AT-1: should persist a message after refresh', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msg = 'Test ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n-    await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n \n-    //await page.reload();\n-    await page.waitForSelector('.messages-container');\n-    await expect(page.locator('.messages-container')).toContainText(msg);\n+    const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+    await expect(selectors.list(page)).toContainText(msg);\n });\n \n // AT-2: Persist multiple messages in correct order\n test('AT-2: should persist multiple messages and keep order', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msgs = ['First ' + Date.now(), 'Second ' + Date.now(), 'Third ' + Date.now()];\n \n     for (const m of msgs) {\n-        await page.fill('input[placeholder=\"Type a message...\"]', m);\n-        await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(m);\n+    await selectors.send(page).click();\n     }\n \n     await page.reload();\n-    await page.waitForSelector('.messages-container');\n     for (const m of msgs) {\n-        await expect(page.locator('.messages-container')).toContainText(m);\n+    await expect(selectors.list(page)).toContainText(m);\n     }\n-    // verify order\n-    const allText = await page.locator('.messages-container').innerText();\n+\n+    const allText = await selectors.list(page).innerText();\n     const firstIdx = allText.indexOf(msgs[0]);\n     const secondIdx = allText.indexOf(msgs[1]);\n     const thirdIdx = allText.indexOf(msgs[2]);\n@@ -50,88 +47,100 @@ test('AT-2: should persist multiple messages and keep order', async ({ page }) =\n // AT-3: Large history persists\n test('AT-3: should persist a long history of messages', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msgs = Array.from({ length: 20 }, (_, i) => `Message ${i} - ${Date.now()}`);\n+\n     for (const m of msgs) {\n-        await page.fill('input[placeholder=\"Type a message...\"]', m);\n-        await page.keyboard.press('Enter');\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n     }\n \n     await page.reload();\n     for (const m of msgs) {\n-        await expect(page.locator('.messages-container')).toContainText(m);\n+        await expect(selectors.list(page)).toContainText(m);\n     }\n });\n \n // AT-4: Mixed send and refresh cycles\n test('AT-4: should keep messages across multiple send/refresh cycles', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n+\n     const first = 'First cycle ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', first);\n-    await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(first);\n+    await selectors.send(page).click();\n     await page.reload();\n \n     const second = 'Second cycle ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', second);\n-    await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(second);\n+    await selectors.send(page).click();\n     await page.reload();\n \n-    await expect(page.locator('.messages-container')).toContainText(first);\n-    await expect(page.locator('.messages-container')).toContainText(second);\n+    await expect(selectors.list(page)).toContainText(first);\n+    await expect(selectors.list(page)).toContainText(second);\n });\n \n-// AT-5: No duplicates after refresh\n test('AT-5: should not duplicate messages after refresh', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msg = 'Duplicate check ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n-    await page.keyboard.press('Enter');\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+\n+    // Confirm message shows before reload\n+    await expect(selectors.list(page)).toContainText(msg);\n \n     await page.reload();\n-    const occurrences = await page.locator('.messages-container', { hasText: msg }).count();\n-    expect(occurrences).toBe(1);\n+    const matching = selectors.list(page).locator(`div:has-text(\"${msg}\")`).last();\n+    await expect(matching).toBeVisible({ timeout: 5000 });\n });\n \n // AT-6: Messages stay in order after multiple refreshes\n test('AT-6: should keep order after multiple refreshes', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     const msgs = ['One ' + Date.now(), 'Two ' + Date.now()];\n \n     for (const m of msgs) {\n-        await page.fill('input[placeholder=\"Type a message...\"]', m);\n-        await page.keyboard.press('Enter');\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n     }\n \n+    // Simulate multiple refresh cycles\n     for (let i = 0; i < 3; i++) {\n         await page.reload();\n     }\n \n-    const allText = await page.locator('.messages-container').innerText();\n+    // Wait for both messages to appear\n+    const firstMessage = selectors.list(page).locator(`div:has-text(\"${msgs[0]}\")`).last();\n+    const secondMessage = selectors.list(page).locator(`div:has-text(\"${msgs[1]}\")`).last();\n+    await expect(firstMessage).toBeVisible({ timeout: 5000 });\n+    await expect(secondMessage).toBeVisible({ timeout: 5000 });\n+\n+    // Grab full list content to compare index\n+    const allText = await selectors.list(page).innerText();\n     const oneIdx = allText.indexOf(msgs[0]);\n     const twoIdx = allText.indexOf(msgs[1]);\n+\n+    console.log(`[AT-6] Index of \"${msgs[0]}\": ${oneIdx}, \"${msgs[1]}\": ${twoIdx}`);\n+    expect(oneIdx).toBeGreaterThanOrEqual(0);\n+    expect(twoIdx).toBeGreaterThanOrEqual(0);\n     expect(oneIdx).toBeLessThan(twoIdx);\n });\n \n // AT-7: Ghost messages should not appear\n test('AT-7: refresh should not create ghost messages', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     await page.reload();\n-    const ghostCount = await page.locator('.messages-container .message').count();\n+    const ghostCount = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(ghostCount).toBe(0);\n });\n \n // AT-8: New browser context starts clean\n test('AT-8: new session should start with empty history', async ({ browser }) => {\n-    const context = await browser.newContext(); // fresh context = no storage\n-    const page = await context.newPage();\n-    await login(page);\n-    await goToChat(page);\n-    const count = await page.locator('.messages-container .message').count();\n+    const context = await browser.newContext(); \n+    const page = await context.newPage(); \n+\n+    await login(page); \n+    const count = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(count).toBe(0);\n+\n     await context.close();\n });\n \n@@ -139,24 +148,194 @@ test('AT-8: new session should start with empty history', async ({ browser }) =>\n test('AT-9: multiple tabs should show same history', async ({ context }) => {\n     const page1 = await context.newPage();\n     await login(page1);\n-    await goToChat(page1);\n     const msg = 'Multi-tab ' + Date.now();\n-    await page1.fill('input[placeholder=\"Type a message...\"]', msg);\n-    await page1.keyboard.press('Enter');\n+    await selectors.input(page1).fill(msg);\n+    await selectors.send(page1).click();\n \n     const page2 = await context.newPage();\n     await login(page2);\n-    await goToChat(page2);\n-    await expect(page2.locator('.messages-container')).toContainText(msg);\n+    await expect(selectors.list(page2)).toContainText(msg);\n });\n \n // AT-10: Empty history stays empty after refresh\n test('AT-10: empty history stays empty after refresh', async ({ page }) => {\n     await login(page);\n-    await goToChat(page);\n     await page.reload();\n-    const count = await page.locator('.messages-container .message').count();\n+    const count = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    expect(count).toBe(0);\n+});\n+\n+// ============================== AI ==================================\n+\n+// AT-11: Persist single message after refresh\n+test('AT-11: should persist a message after refresh', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msg = 'Test ' + Date.now();\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+\n+    const lastMessage = selectors.list(page).locator('div:has-text(\"You:\")').last();\n+    await expect(selectors.list(page)).toContainText(msg);\n+});\n+\n+// AT-12: Persist multiple messages in correct order\n+test('AT-12: should persist multiple messages and keep order', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msgs = ['First ' + Date.now(), 'Second ' + Date.now(), 'Third ' + Date.now()];\n+\n+    for (const m of msgs) {\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n+    }\n+\n+    await page.reload();\n+    for (const m of msgs) {\n+        await expect(selectors.list(page)).toContainText(m);\n+    }\n+\n+    const allText = await selectors.list(page).innerText();\n+    const firstIdx = allText.indexOf(msgs[0]);\n+    const secondIdx = allText.indexOf(msgs[1]);\n+    const thirdIdx = allText.indexOf(msgs[2]);\n+    expect(firstIdx).toBeLessThan(secondIdx);\n+    expect(secondIdx).toBeLessThan(thirdIdx);\n+});\n+\n+// AT-13: Large history persists\n+test('AT-13: should persist a long history of messages', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msgs = Array.from({ length: 20 }, (_, i) => `Message ${i} - ${Date.now()}`);\n+\n+    for (const m of msgs) {\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n+    }\n+\n+    await page.reload();\n+    for (const m of msgs) {\n+        await expect(selectors.list(page)).toContainText(m);\n+    }\n+});\n+\n+// AT-14: Mixed send and refresh cycles\n+test('AT-14: should keep messages across multiple send/refresh cycles', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const first = 'First cycle ' + Date.now();\n+    await selectors.input(page).fill(first);\n+    await selectors.send(page).click();\n+    await page.reload();\n+\n+    const second = 'Second cycle ' + Date.now();\n+    await selectors.input(page).fill(second);\n+    await selectors.send(page).click();\n+    await page.reload();\n+\n+    await expect(selectors.list(page)).toContainText(first);\n+    await expect(selectors.list(page)).toContainText(second);\n+});\n+\n+test('AT-15: should not duplicate messages after refresh', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msg = 'Duplicate check ' + Date.now();\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+\n+    // Confirm message shows before reload\n+    await expect(selectors.list(page)).toContainText(msg);\n+\n+    await page.reload();\n+    const matching = selectors.list(page).locator(`div:has-text(\"${msg}\")`).last();\n+    await expect(matching).toBeVisible({ timeout: 5000 });\n+});\n+\n+// AT-16: Messages stay in order after multiple refreshes\n+test('AT-16: should keep order after multiple refreshes', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    const msgs = ['One ' + Date.now(), 'Two ' + Date.now()];\n+\n+    for (const m of msgs) {\n+        await selectors.input(page).fill(m);\n+        await selectors.send(page).click();\n+    }\n+\n+    // Simulate multiple refresh cycles\n+    for (let i = 0; i < 3; i++) {\n+        await page.reload();\n+    }\n+\n+    // Wait for both messages to appear\n+    const firstMessage = selectors.list(page).locator(`div:has-text(\"${msgs[0]}\")`).last();\n+    const secondMessage = selectors.list(page).locator(`div:has-text(\"${msgs[1]}\")`).last();\n+    await expect(firstMessage).toBeVisible({ timeout: 5000 });\n+    await expect(secondMessage).toBeVisible({ timeout: 5000 });\n+\n+    // Grab full list content to compare index\n+    const allText = await selectors.list(page).innerText();\n+    const oneIdx = allText.indexOf(msgs[0]);\n+    const twoIdx = allText.indexOf(msgs[1]);\n+\n+    console.log(`[AT-6] Index of \"${msgs[0]}\": ${oneIdx}, \"${msgs[1]}\": ${twoIdx}`);\n+    expect(oneIdx).toBeGreaterThanOrEqual(0);\n+    expect(twoIdx).toBeGreaterThanOrEqual(0);\n+    expect(oneIdx).toBeLessThan(twoIdx);\n+});\n+\n+// AT-17: Ghost messages should not appear\n+test('AT-17: refresh should not create ghost messages', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    await page.reload();\n+    const ghostCount = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    expect(ghostCount).toBe(0);\n+});\n+\n+// AT-18: New browser context starts clean\n+test('AT-18: new session should start with empty history', async ({ browser }) => {\n+    const context = await browser.newContext(); \n+    const page = await context.newPage(); \n+\n+    await login(page); \n+    await page.goto(`${BASE_URL}/ai`);\n+    const count = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(count).toBe(0);\n+\n+    await context.close();\n });\n \n+// AT-19: Multiple tabs share history (if local storage is shared)\n+test('AT-19: multiple tabs should show same history', async ({ context }) => {\n+    const page1 = await context.newPage();\n+    await login(page1);\n+    await page1.goto(`${BASE_URL}/ai`);\n \n+    const msg = 'Multi-tab ' + Date.now();\n+    await selectors.input(page1).fill(msg);\n+    await selectors.send(page1).click();\n+\n+    const page2 = await context.newPage();\n+    await login(page2);\n+    await expect(selectors.list(page2)).toContainText(msg);\n+});\n+\n+// AT-20: Empty history stays empty after refresh\n+test('AT-20: empty history stays empty after refresh', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+\n+    await page.reload();\n+    const count = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    expect(count).toBe(0);\n+});\n\\ No newline at end of file\ndiff --git a/tests/e2e/enter-key.spec.ts b/tests/e2e/enter-key.spec.ts\nindex 004ef68..e84ad3d 100644\n--- a/tests/e2e/enter-key.spec.ts\n+++ b/tests/e2e/enter-key.spec.ts\n@@ -1,81 +1,67 @@\n import { test, expect } from '@playwright/test';\n import { login } from './helpers';\n-import { log } from 'console';\n \n-// AT-1: Send valid message with Enter\n-test('AT-1: should send a message when Enter is pressed', async ({ page }) => {\n-    await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', 'Test ' + Date.now());\n-    await page.keyboard.press('Enter');\n-    await expect(page.locator('.messages-container')).toContainText('Test');\n-});\n+const selectors = {\n+    input: (p: any) => p.getByPlaceholder('Type a message...'),\n+    send: (p: any) => p.getByTestId('send-button'),\n+    list: (p: any) => p.getByTestId('message-list')\n+    };\n+\n+const BASE_URL = process.env.BASE_URL || 'http://localhost:8000';\n+\n \n // AT-2: Send valid message with Send button\n-test('AT-2:should send a message with Send button', async ({ page }) => {\n+test('AT-2: should send a message with Send button', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', 'Test ' + Date.now());\n-    await page.click('button:has-text(\"Send\")');\n-    await expect(page.locator('.messages-container')).toContainText('Test');\n+    const msg = 'Test ' + Date.now();\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(msg);\n });\n \n // AT-3: Leading/trailing spaces\n test('AT-3: should trim leading/trailing spaces', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', '   Test   ');\n+    await selectors.input(page).fill('   Test   ');\n     await page.keyboard.press('Enter');\n-    await expect(page.locator('.messages-container')).toContainText('Test');\n+    await expect(selectors.list(page)).toContainText('Test');\n });\n \n // AT-4: Long message\n test('AT-4: should send a long message up to limit', async ({ page }) => {\n     const longMessage = 'x'.repeat(500);\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', longMessage);\n+    await selectors.input(page).fill(longMessage);\n     await page.keyboard.press('Enter');\n-    await expect(page.locator('.messages-container')).toContainText(longMessage);\n+    await expect(selectors.list(page)).toContainText(longMessage);\n });\n \n // AT-5: Special characters\n test('AT-5: should support special characters', async ({ page }) => {\n     const msg = 'Test #@$%^&* ' + Date.now();\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n+    await selectors.input(page).fill(msg);\n     await page.keyboard.press('Enter');\n-    await expect(page.locator('.messages-container')).toContainText('Test #@$%^&*');\n+    await expect(selectors.list(page)).toContainText(msg);\n });\n \n // AT-6: Empty input\n test('AT-6: should not send an empty message', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');\n-    const countBefore = await page.locator('.messages-container > *').count();\n-\n-    await page.focus('input[placeholder=\"Type a message...\"]');\n+    const countBefore = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    await selectors.input(page).focus();\n     await page.keyboard.press('Enter');\n-\n-    const countAfter = await page.locator('.messages-container > *').count();\n+    const countAfter = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(countAfter).toBe(countBefore);\n });\n \n // AT-7: Whitespace-only input\n test('AT-7: should not send whitespace-only message', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');\n-    const countBefore = await page.locator('.messages-container > *').count();\n-\n-    await page.fill('input[placeholder=\"Type a message...\"]', '     ');\n+    const countBefore = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    await selectors.input(page).fill('     ');\n     await page.keyboard.press('Enter');\n-\n-    const countAfter = await page.locator('.messages-container > *').count();\n+    const countAfter = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(countAfter).toBe(countBefore);\n });\n \n@@ -83,56 +69,155 @@ test('AT-7: should not send whitespace-only message', async ({ page }) => {\n test('AT-8: should not duplicate message on rapid Enter presses', async ({ page }) => {\n     const msg = 'Test ' + Date.now();\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');      \n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n+    await selectors.input(page).fill(msg);\n     await page.keyboard.press('Enter');\n     await page.keyboard.press('Enter');\n     await page.keyboard.press('Enter');\n-    const occurrences = await page.locator('.messages-container', { hasText: msg }).count();\n+    const occurrences = await selectors.list(page).locator(`div:has-text(\"${msg}\")`).count();\n     expect(occurrences).toBe(1);\n });\n \n // AT-9: Shift+Enter creates newline (not send)\n-  test('AT-9: pressing Shift+Enter creates newline in input', async ({ page }) => {\n+test('AT-9: pressing Shift+Enter creates newline in input', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.fill('input[placeholder=\"Type a message...\"]', 'Line1');\n+    await selectors.input(page).fill('Line1');\n     await page.keyboard.press('Shift+Enter');\n     await page.keyboard.type('Line2');\n-    const value = await page.inputValue('input[placeholder=\"Type a message...\"]');\n+    const value = await selectors.input(page).inputValue();\n     expect(value).toContain('Line1');\n     expect(value).toContain('Line2');\n-  });\n-\n+});\n \n-  // AT-10: Enter pressed when input not focused\n-  test('AT-10: pressing Enter outside input does nothing', async ({ page }) => {\n+// AT-10: Enter pressed when input not focused\n+test('AT-10: pressing Enter outside input does nothing', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');\n-    const countBefore = await page.locator('.messages-container > *').count();\n-    await page.click('body'); // click outside input\n+    const countBefore = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    await page.click('body'); // unfocus input\n     await page.keyboard.press('Enter');\n-    const countAfter = await page.locator('.messages-container > *').count();\n+    const countAfter = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(countAfter).toBe(countBefore);\n-  });\n+});\n \n-  // AT-11: Send, then Enter again with empty input\n-  test('AT-11: pressing Enter again immediately does nothing', async ({ page }) => {\n+// AT-11: Send, then Enter again with empty input\n+test('AT-11: pressing Enter again immediately does nothing', async ({ page }) => {\n     await login(page);\n-    //await page.goto('/');\n-    await page.reload();\n-    await page.waitForSelector('.messages-container');\n     const msg = 'Test ' + Date.now();\n-    await page.fill('input[placeholder=\"Type a message...\"]', msg);\n+    await selectors.input(page).fill(msg);\n     await page.keyboard.press('Enter');\n-    const countAfterFirst = await page.locator('.messages-container > *').count();\n-    await page.keyboard.press('Enter'); // input now empty\n-    const countAfterSecond = await page.locator('.messages-container > *').count();\n+    const countAfterFirst = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n+    await page.keyboard.press('Enter'); // now input is empty\n+    const countAfterSecond = await selectors.list(page).locator('div:has-text(\"You:\")').count();\n     expect(countAfterSecond).toBe(countAfterFirst);\n-  });\n+});\n+\n+// ============================ AI =================================\n+\n+// AT-12: Send valid message with Send button\n+test('AT-12: should send a message with Send button', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const msg = 'Test ' + Date.now();\n+    await selectors.input(page).fill(msg);\n+    await selectors.send(page).click();\n+    await expect(selectors.list(page)).toContainText(msg);\n+});\n+\n+// AT-13: Leading/trailing spaces\n+test('AT-13: should trim leading/trailing spaces', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await selectors.input(page).fill('   Test   ');\n+    await page.keyboard.press('Enter');\n+    await expect(selectors.list(page)).toContainText('Test');\n+});\n+\n+// AT-14: Long message\n+test('AT-14: should send a long message up to limit', async ({ page }) => {\n+    const longMessage = 'x'.repeat(500);\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await selectors.input(page).fill(longMessage);\n+    await page.keyboard.press('Enter');\n+    await expect(selectors.list(page)).toContainText(longMessage);\n+});\n+\n+// AT-15: Special characters\n+test('AT-15: should support special characters', async ({ page }) => {\n+    const msg = 'Test #@$%^&* ' + Date.now();\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    await selectors.input(page).fill(msg);\n+    await page.keyboard.press('Enter');\n+    await expect(selectors.list(page)).toContainText(msg);\n+});\n \n+// AT-16: Empty input\n+test('AT-16: should not send an empty message', async ({ page }) => {\n+    await login(page);\n+    await page.goto(`${BASE_URL}/ai`);\n+    const countBefore = await selectors.list(page).locator('div:has-text(\"You:\")').count",
          "actualWorkers": 2
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e",
        "testIgnore": [
          "**/node_modules/**",
          "**/api/**",
          "**/chit-chat-ui/**"
        ],
        "testMatch": [
          "/.*\\.spec\\.ts/"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.1",
    "workers": 2,
    "webServer": null
  },
  "suites": [
    {
      "title": "ai-chat.spec.ts",
      "file": "ai-chat.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: /ai loads and UI is visible",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5226,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:28.067Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-70fb3c7298d8115dbade",
          "file": "ai-chat.spec.ts",
          "line": 14,
          "column": 1
        },
        {
          "title": "AT-2: Sending a message shows it in the chat list",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5466,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:28.070Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-ca6d6ca6803378f49ec6",
          "file": "ai-chat.spec.ts",
          "line": 22,
          "column": 1
        },
        {
          "title": "AT-3: LLM response appears after sending a message",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 10555,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"4\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"4\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts:41:40",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                      "column": 40,
                      "line": 41
                    },
                    "snippet": "\u001b[0m \u001b[90m 39 |\u001b[39m     \u001b[90m// Wait for response from the LLM\u001b[39m\n \u001b[90m 40 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(\u001b[32m'2 + 2'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 41 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(\u001b[32m'4'\u001b[39m)\u001b[33m;\u001b[39m \n \u001b[90m    |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 42 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 43 |\u001b[39m\n \u001b[90m 44 |\u001b[39m \u001b[90m// AT-4: Socket emits LLM response without reload\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                        "column": 40,
                        "line": 41
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"4\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[22m\n\n\n  39 |     // Wait for response from the LLM\n  40 |     await expect(selectors.list(page)).toContainText('2 + 2');\n> 41 |     await expect(selectors.list(page)).toContainText('4'); \n     |                                        ^\n  42 | });\n  43 |\n  44 | // AT-4: Socket emits LLM response without reload\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts:41:40"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:33.722Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                    "column": 40,
                    "line": 41
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-d58f072ffafeb513f16e",
          "file": "ai-chat.spec.ts",
          "line": 32,
          "column": 1
        },
        {
          "title": "AT-4: LLM response is delivered via socket in real-time",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5164,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:33.972Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-7c79c43d30ceb236d8bb",
          "file": "ai-chat.spec.ts",
          "line": 45,
          "column": 1
        },
        {
          "title": "AT-5: Input field clears after sending a message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4498,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:39.164Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-6b11f42d6600426d7b90",
          "file": "ai-chat.spec.ts",
          "line": 57,
          "column": 1
        },
        {
          "title": "AT-6: Send button should be disabled or no action on empty message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 6556,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:43.681Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-859146d90f1dc4b1207e",
          "file": "ai-chat.spec.ts",
          "line": 66,
          "column": 1
        },
        {
          "title": "AT-7: Multiple exchanges show in correct order",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 7335,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:44.973Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-45b0c47efc015cc50b8c",
          "file": "ai-chat.spec.ts",
          "line": 81,
          "column": 1
        },
        {
          "title": "AT-8: LLM long response does not break UI",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5487,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:50.251Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-c6a01d97033e30a64d61",
          "file": "ai-chat.spec.ts",
          "line": 98,
          "column": 1
        },
        {
          "title": "AT-9: Can send code or special character input",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5165,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:52.421Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-cb4a34787c6647fe2f3a",
          "file": "ai-chat.spec.ts",
          "line": 108,
          "column": 1
        },
        {
          "title": "AT-10: Gracefully handles LLM/server error",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [
                {
                  "type": "skip",
                  "location": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                    "line": 118,
                    "column": 6
                  }
                }
              ],
              "expectedStatus": "skipped",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": -1,
                  "parallelIndex": -1,
                  "status": "skipped",
                  "duration": 0,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:55.752Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "skipped"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-7ef6e1801d2bd2cfbd95",
          "file": "ai-chat.spec.ts",
          "line": 118,
          "column": 6
        },
        {
          "title": "AT-11: LLM handles extremely long input gracefully",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5153,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:55.754Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-ecd8f143d1c668262974",
          "file": "ai-chat.spec.ts",
          "line": 129,
          "column": 1
        },
        {
          "title": "AT-12: Sending a new message before previous LLM response finishes",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 12660,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected pattern: \u001b[32m/Mercury|Venus/i\u001b[39m\nReceived string:  \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 7000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 7000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?\"\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected pattern: \u001b[32m/Mercury|Venus/i\u001b[39m\nReceived string:  \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 7000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 7000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?\"\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts:160:40",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                      "column": 40,
                      "line": 160
                    },
                    "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(\u001b[32m'solar system'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(\u001b[32m'hottest planet'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(\u001b[35m/Mercury|Venus/i\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m7000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m\n \u001b[90m 163 |\u001b[39m \u001b[90m// AT-13: LLM can return formatted/code responses\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                        "column": 40,
                        "line": 160
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected pattern: \u001b[32m/Mercury|Venus/i\u001b[39m\nReceived string:  \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 7000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 7000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?\"\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[22m\n\n\n  158 |     await expect(selectors.list(page)).toContainText('solar system');\n  159 |     await expect(selectors.list(page)).toContainText('hottest planet');\n> 160 |     await expect(selectors.list(page)).toContainText(/Mercury|Venus/i, { timeout: 7000 });\n      |                                        ^\n  161 | });\n  162 |\n  163 | // AT-13: LLM can return formatted/code responses\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts:160:40"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:03:57.603Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                    "column": 40,
                    "line": 160
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-33864d9490063e16f0a0",
          "file": "ai-chat.spec.ts",
          "line": 146,
          "column": 1
        },
        {
          "title": "AT-13: LLM can return formatted/code responses",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 9921,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"{\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a string\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"{\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a string\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts:173:40",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                      "column": 40,
                      "line": 173
                    },
                    "snippet": "\u001b[0m \u001b[90m 171 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(\u001b[32m'function'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 172 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(\u001b[32m'reverse'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 173 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(\u001b[32m'{'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m;\u001b[39m \n \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 174 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 175 |\u001b[39m\n \u001b[90m 176 |\u001b[39m \u001b[90m// AT-14: Shows fallback when backend/LLM fails (simulated by aborting socket route)\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                        "column": 40,
                        "line": 173
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"{\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a string\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[22m\n\n\n  171 |     await expect(selectors.list(page)).toContainText('function');\n  172 |     await expect(selectors.list(page)).toContainText('reverse');\n> 173 |     await expect(selectors.list(page)).toContainText('{', { timeout: 5000 }); \n      |                                        ^\n  174 | });\n  175 |\n  176 | // AT-14: Shows fallback when backend/LLM fails (simulated by aborting socket route)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts:173:40"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:04:00.920Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/ai-chat.spec.ts",
                    "column": 40,
                    "line": 173
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-80375116c30a52cff0fc",
          "file": "ai-chat.spec.ts",
          "line": 164,
          "column": 1
        },
        {
          "title": "AT-14: Shows fallback when backend/LLM fails",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 3,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5055,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:04:10.951Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-794fcac9d0422d69bf6f",
          "file": "ai-chat.spec.ts",
          "line": 177,
          "column": 1
        },
        {
          "title": "AT-15: Consecutive messages do not overwrite each other",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 4,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5546,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:04:11.596Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1f1ef7bcd9eb87d7ff46-493bde722a19a995d5b5",
          "file": "ai-chat.spec.ts",
          "line": 195,
          "column": 1
        }
      ]
    },
    {
      "title": "auth-login.spec.ts",
      "file": "auth-login.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: Register new user successfully",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 3,
                  "parallelIndex": 0,
                  "status": "timedOut",
                  "duration": 64015,
                  "error": {
                    "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                    "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                  },
                  "errors": [
                    {
                      "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                    },
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts",
                        "column": 45,
                        "line": 19
                      },
                      "message": "Error: locator.click: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for getByTestId('register-button')\u001b[22m\n\n\n  17 |   await page.getByTestId('login-username').locator('input').fill(user);\n  18 |   await page.getByTestId('login-password').locator('input').fill('password123');\n> 19 |   await page.getByTestId('register-button').click();\n     |                                             ^\n  20 |\n  21 |   await expect(page).toHaveURL(/\\/community|\\/login|\\/dashboard/i);\n  22 | });\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts:19:45"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:04:16.129Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-1-Register-new-user-successfully-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-1-Register-new-user-successfully-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-1-Register-new-user-successfully-chromium/error-context.md"
                    }
                  ]
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "99bb4746d1640918adf9-63c420d949a39a2b035d",
          "file": "auth-login.spec.ts",
          "line": 12,
          "column": 1
        },
        {
          "title": "AT-2: Registration fails when username already exists",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 4,
                  "parallelIndex": 1,
                  "status": "timedOut",
                  "duration": 60207,
                  "error": {
                    "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                    "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                  },
                  "errors": [
                    {
                      "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                    },
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts",
                        "column": 61,
                        "line": 33
                      },
                      "message": "Error: locator.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for getByTestId('login-username').locator('input')\u001b[22m\n\n\n  31 |   await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n  32 |   await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n> 33 |   await page.getByTestId('login-username').locator('input').fill(user);\n     |                                                             ^\n  34 |   await page.getByTestId('login-password').locator('input').fill('password123');\n  35 |   await page.getByTestId('register-button').click();\n  36 |\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts:33:61"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:04:17.249Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-2-Registrati-7dad1-hen-username-already-exists-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-2-Registrati-7dad1-hen-username-already-exists-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-2-Registrati-7dad1-hen-username-already-exists-chromium/error-context.md"
                    }
                  ]
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "99bb4746d1640918adf9-6ba8daecb791b4f6414f",
          "file": "auth-login.spec.ts",
          "line": 25,
          "column": 1
        },
        {
          "title": "AT-3: Registration fails when fields are empty",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 5,
                  "parallelIndex": 1,
                  "status": "timedOut",
                  "duration": 64004,
                  "error": {
                    "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                    "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                  },
                  "errors": [
                    {
                      "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                    },
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts",
                        "column": 45,
                        "line": 58
                      },
                      "message": "Error: locator.click: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for getByTestId('register-button')\u001b[22m\n\n\n  56 |   await page.goto(`${BASE_URL}/login`);\n  57 |   await page.getByText(/register here/i).click();\n> 58 |   await page.getByTestId('register-button').click();\n     |                                             ^\n  59 |\n  60 |   // HTML5 validation may block this automatically\n  61 |   const usernameValid = await page.getByTestId('login-username').locator('input').evaluate(\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts:58:45"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:05:18.211Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-3-Registration-fails-when-fields-are-empty-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-3-Registration-fails-when-fields-are-empty-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-3-Registration-fails-when-fields-are-empty-chromium/error-context.md"
                    }
                  ]
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "99bb4746d1640918adf9-78337fc4992d2a07ae05",
          "file": "auth-login.spec.ts",
          "line": 55,
          "column": 1
        },
        {
          "title": "AT-4: Registration fails when password is too short",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 6,
                  "parallelIndex": 0,
                  "status": "timedOut",
                  "duration": 60166,
                  "error": {
                    "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                    "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                  },
                  "errors": [
                    {
                      "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                    },
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts",
                        "column": 61,
                        "line": 81
                      },
                      "message": "Error: locator.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for getByTestId('login-username').locator('input')\u001b[22m\n\n\n  79 |   await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n  80 |   await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n> 81 |   await page.getByTestId('login-username').locator('input').fill(user);\n     |                                                             ^\n  82 |   await page.getByTestId('login-password').locator('input').fill('123'); // too short\n  83 |   await page.getByTestId('register-button').click();\n  84 |\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts:81:61"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:05:20.778Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-4-Registrati-eb283--when-password-is-too-short-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-4-Registrati-eb283--when-password-is-too-short-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-4-Registrati-eb283--when-password-is-too-short-chromium/error-context.md"
                    }
                  ]
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "99bb4746d1640918adf9-46e2f475ddb9170645c5",
          "file": "auth-login.spec.ts",
          "line": 73,
          "column": 1
        },
        {
          "title": "AT-5: Login with valid credentials redirects to community",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 7,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 8059,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/community|\\/dashboard/i\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/login\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"http://localhost:8000/login\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/community|\\/dashboard/i\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/login\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"http://localhost:8000/login\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts:97:22",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts",
                      "column": 22,
                      "line": 97
                    },
                    "snippet": "\u001b[0m \u001b[90m  95 |\u001b[39m   \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgetByTestId(\u001b[32m'login-button'\u001b[39m)\u001b[33m.\u001b[39mclick()\u001b[33m;\u001b[39m\n \u001b[90m  96 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  97 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveURL(\u001b[35m/\\/community|\\/dashboard/i\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  98 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=Talk to the Community'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m  99 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 100 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts",
                        "column": 22,
                        "line": 97
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/community|\\/dashboard/i\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/login\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"http://localhost:8000/login\"\u001b[22m\n\n\n   95 |   await page.getByTestId('login-button').click();\n   96 |\n>  97 |   await expect(page).toHaveURL(/\\/community|\\/dashboard/i);\n      |                      ^\n   98 |   await expect(page.locator('text=Talk to the Community')).toBeVisible({ timeout: 10000 });\n   99 | });\n  100 |\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts:97:22"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:21.810Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts",
                    "column": 22,
                    "line": 97
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "99bb4746d1640918adf9-cbf72332b70b7d6f27ae",
          "file": "auth-login.spec.ts",
          "line": 91,
          "column": 1
        },
        {
          "title": "AT-6: Login fails with invalid password",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 8,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2711,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:22.908Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "99bb4746d1640918adf9-286212f1d9eaee22d7f4",
          "file": "auth-login.spec.ts",
          "line": 102,
          "column": 1
        },
        {
          "title": "AT-7: Login fails when fields are empty",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 8,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2279,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:25.722Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "99bb4746d1640918adf9-28cb029ba3a2fefb1f4b",
          "file": "auth-login.spec.ts",
          "line": 115,
          "column": 1
        },
        {
          "title": "AT-8: Login fails if username case does not match",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 8,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2553,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:28.014Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "99bb4746d1640918adf9-a2064004977d3473c4ea",
          "file": "auth-login.spec.ts",
          "line": 131,
          "column": 1
        },
        {
          "title": "AT-9: Navigation between login and register pages works",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 9,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2663,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:30.855Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "99bb4746d1640918adf9-e985ab05a742aeadeeed",
          "file": "auth-login.spec.ts",
          "line": 144,
          "column": 1
        },
        {
          "title": "AT-10: Registration fails when password boundaries are not met",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 8,
                  "parallelIndex": 1,
                  "status": "timedOut",
                  "duration": 60143,
                  "error": {
                    "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                    "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                  },
                  "errors": [
                    {
                      "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                    },
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts",
                        "column": 63,
                        "line": 172
                      },
                      "message": "Error: locator.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for getByTestId('login-username').locator('input')\u001b[22m\n\n\n  170 |     await page.getByRole('textbox', { name: 'Full Name' }).fill('Test User');\n  171 |     await page.getByRole('textbox', { name: 'Full Name' }).press('Enter');\n> 172 |     await page.getByTestId('login-username').locator('input').fill(user);\n      |                                                               ^\n  173 |     await page.getByTestId('login-password').locator('input').fill(password);\n  174 |     await page.getByTestId('register-button').click();\n  175 |   };\n    at registerWithPassword (/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts:172:63)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/auth-login.spec.ts:180:5"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:30.582Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-10-Registrat-bea51-word-boundaries-are-not-met-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-10-Registrat-bea51-word-boundaries-are-not-met-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/auth-login-AT-10-Registrat-bea51-word-boundaries-are-not-met-chromium/error-context.md"
                    }
                  ]
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "99bb4746d1640918adf9-cca82a2acec4e82e653c",
          "file": "auth-login.spec.ts",
          "line": 153,
          "column": 1
        }
      ]
    },
    {
      "title": "autoscroll.spec.ts",
      "file": "autoscroll.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-01: Auto-scroll when viewer is at bottom",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 9,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6269,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:33.632Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "18ce31338e577b85d445-8cf4689752b3fb6fa9f3",
          "file": "autoscroll.spec.ts",
          "line": 45,
          "column": 1
        },
        {
          "title": "AT-02: No jump when viewer scrolled up",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 9,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 8488,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts:110:29",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts",
                      "column": 29,
                      "line": 110
                    },
                    "snippet": "\u001b[0m \u001b[90m 108 |\u001b[39m   }))\u001b[33m;\u001b[39m\n \u001b[90m 109 |\u001b[39m   console\u001b[33m.\u001b[39mlog(\u001b[32m'Before sending:'\u001b[39m\u001b[33m,\u001b[39m before)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 110 |\u001b[39m   expect(before\u001b[33m.\u001b[39misAtBottom)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[33m;\u001b[39m \u001b[90m// must NOT be at bottom\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 111 |\u001b[39m\n \u001b[90m 112 |\u001b[39m   \u001b[90m// Now send another message from A\u001b[39m\n \u001b[90m 113 |\u001b[39m   \u001b[36mconst\u001b[39m newMsg \u001b[33m=\u001b[39m uniq(\u001b[32m'no-jump'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts",
                        "column": 29,
                        "line": 110
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n\n  108 |   }));\n  109 |   console.log('Before sending:', before);\n> 110 |   expect(before.isAtBottom).toBeFalsy(); // must NOT be at bottom\n      |                             ^\n  111 |\n  112 |   // Now send another message from A\n  113 |   const newMsg = uniq('no-jump');\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts:110:29"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "Before sending: {\n  scrollTop: \u001b[33m0\u001b[39m,\n  scrollHeight: \u001b[33m648\u001b[39m,\n  clientHeight: \u001b[33m648\u001b[39m,\n  isAtBottom: \u001b[33mtrue\u001b[39m\n}\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:39.923Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/test-failed-2.png"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/test-failed-1.png"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts",
                    "column": 29,
                    "line": 110
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "18ce31338e577b85d445-7365861bbaab96ba723d",
          "file": "autoscroll.spec.ts",
          "line": 75,
          "column": 1
        },
        {
          "title": "AT-03: Auto-scroll resumes after viewer returns to bottom",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 10,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 17791,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[data-testid=\"message-list\"]')\nExpected string: \u001b[32m\"seed 0\"\u001b[39m\nReceived string: \u001b[31m\"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[39m\nTimeout: 10000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"message-list\"]')\u001b[22m\n\u001b[2m    3 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16👍❤️😂😮🎉testuser: seed 17testuser: seed 18testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[data-testid=\"message-list\"]')\nExpected string: \u001b[32m\"seed 0\"\u001b[39m\nReceived string: \u001b[31m\"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[39m\nTimeout: 10000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"message-list\"]')\u001b[22m\n\u001b[2m    3 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16👍❤️😂😮🎉testuser: seed 17testuser: seed 18testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts:153:23",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts",
                      "column": 23,
                      "line": 153
                    },
                    "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m   }\n \u001b[90m 152 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m   \u001b[36mawait\u001b[39m expect(listB)\u001b[33m.\u001b[39mtoContainText(\u001b[32m'seed 0'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10\u001b[39m_000 })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m\n \u001b[90m 155 |\u001b[39m   \u001b[90m// Simulate user scrolling up\u001b[39m\n \u001b[90m 156 |\u001b[39m   \u001b[36mawait\u001b[39m listB\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m el\u001b[33m.\u001b[39mscrollTop \u001b[33m=\u001b[39m \u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts",
                        "column": 23,
                        "line": 153
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[data-testid=\"message-list\"]')\nExpected string: \u001b[32m\"seed 0\"\u001b[39m\nReceived string: \u001b[31m\"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[39m\nTimeout: 10000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"message-list\"]')\u001b[22m\n\u001b[2m    3 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16👍❤️😂😮🎉testuser: seed 17testuser: seed 18testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[22m\n\n\n  151 |   }\n  152 |\n> 153 |   await expect(listB).toContainText('seed 0', { timeout: 10_000 });\n      |                       ^\n  154 |\n  155 |   // Simulate user scrolling up\n  156 |   await listB.evaluate(el => el.scrollTop = 0);\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts:153:23"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:06:49.107Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/test-failed-1.png"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/test-failed-2.png"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/autoscroll.spec.ts",
                    "column": 23,
                    "line": 153
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "18ce31338e577b85d445-ba9705e5542124ee73fd",
          "file": "autoscroll.spec.ts",
          "line": 136,
          "column": 1
        },
        {
          "title": "AT-04: Sender stays at bottom after sending",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3316,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:07.698Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "18ce31338e577b85d445-effb30550a4bbba36e00",
          "file": "autoscroll.spec.ts",
          "line": 192,
          "column": 1
        }
      ]
    },
    {
      "title": "chat-guest.spec.ts",
      "file": "chat-guest.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: Guest sends a message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6563,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:11.131Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-67af29777a4f30a0d73b",
          "file": "chat-guest.spec.ts",
          "line": 37,
          "column": 1
        },
        {
          "title": "AT-2: Real-time receive across two guests",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 65000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 11185,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:17.710Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-c5e69345b2f2556ad3c4",
          "file": "chat-guest.spec.ts",
          "line": 50,
          "column": 1
        },
        {
          "title": "AT-3: Messages preserve chronological order",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 65000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 11748,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:28.909Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-d569d341008046a9befc",
          "file": "chat-guest.spec.ts",
          "line": 73,
          "column": 1
        },
        {
          "title": "AT-4: Delivery time under target",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 65000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 11219,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:31.382Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-bb62cc9e92ee4b53e37e",
          "file": "chat-guest.spec.ts",
          "line": 112,
          "column": 1
        },
        {
          "title": "AT-5: Guest can continue chatting after reload",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 10950,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:40.673Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-29fe8b8a5437865f4577",
          "file": "chat-guest.spec.ts",
          "line": 141,
          "column": 1
        },
        {
          "title": "AT-6: Empty message is blocked",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 6897,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:42.703Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-df98bbd821d21b9203e6",
          "file": "chat-guest.spec.ts",
          "line": 164,
          "column": 1
        },
        {
          "title": "AT-7: Whitespace-only message is blocked",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 6648,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:49.618Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-aef96550a07a19d45fcb",
          "file": "chat-guest.spec.ts",
          "line": 192,
          "column": 1
        },
        {
          "title": "AT-8: Long word wraps without breaking layout",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6800,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:51.636Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-e6def05f71f3631964d3",
          "file": "chat-guest.spec.ts",
          "line": 208,
          "column": 1
        },
        {
          "title": "AT-9: Autoscroll to bottom on send",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 6539,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:56.280Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-a4966f432dc36a4d44b0",
          "file": "chat-guest.spec.ts",
          "line": 221,
          "column": 1
        },
        {
          "title": "AT-10: Clears input after sending",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6545,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:07:58.450Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7946dbf1602e8c791a94-a6d85af7caae929b33e1",
          "file": "chat-guest.spec.ts",
          "line": 242,
          "column": 1
        }
      ]
    },
    {
      "title": "chat-history.spec.ts",
      "file": "chat-history.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: should persist a message after refresh",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3319,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:02.846Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-e00666fa68656e20e05d",
          "file": "chat-history.spec.ts",
          "line": 14,
          "column": 1
        },
        {
          "title": "AT-2: should persist multiple messages and keep order",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 7204,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:05.020Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-78e851b3f764989eb7e1",
          "file": "chat-history.spec.ts",
          "line": 25,
          "column": 1
        },
        {
          "title": "AT-3: should persist a long history of messages",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 8237,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:06.180Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-ee5cb7b999af8691c74e",
          "file": "chat-history.spec.ts",
          "line": 48,
          "column": 1
        },
        {
          "title": "AT-4: should keep messages across multiple send/refresh cycles",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 8499,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:12.249Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-eb9957cdcc4b27a76ea2",
          "file": "chat-history.spec.ts",
          "line": 64,
          "column": 1
        },
        {
          "title": "AT-5: should not duplicate messages after refresh",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5718,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:14.430Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-fbaba543621e4a0a5a59",
          "file": "chat-history.spec.ts",
          "line": 81,
          "column": 1
        },
        {
          "title": "AT-6: should keep order after multiple refreshes",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 9505,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[AT-6] Index of \"One 1760389702853\": 1988, \"Two 1760389702853\": 2012\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:20.167Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-d7d809113d89d6373b73",
          "file": "chat-history.spec.ts",
          "line": 96,
          "column": 1
        },
        {
          "title": "AT-7: refresh should not create ghost messages",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5369,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:20.763Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-9de3dd7e48879677605b",
          "file": "chat-history.spec.ts",
          "line": 128,
          "column": 1
        },
        {
          "title": "AT-8: new session should start with empty history",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2548,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:26.144Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-2ca41d86a0a7a571d4b7",
          "file": "chat-history.spec.ts",
          "line": 136,
          "column": 1
        },
        {
          "title": "AT-9: multiple tabs should show same history",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 11440,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389711447\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389711447\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:157:41",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                      "column": 41,
                      "line": 157
                    },
                    "snippet": "\u001b[0m \u001b[90m 155 |\u001b[39m     \u001b[36mconst\u001b[39m page2 \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m context\u001b[33m.\u001b[39mnewPage()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m     \u001b[36mawait\u001b[39m login(page2)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 157 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page2))\u001b[33m.\u001b[39mtoContainText(msg)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 158 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n \u001b[90m 160 |\u001b[39m \u001b[90m// AT-10: Empty history stays empty after refresh\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                        "column": 41,
                        "line": 157
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389711447\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n\n\n  155 |     const page2 = await context.newPage();\n  156 |     await login(page2);\n> 157 |     await expect(selectors.list(page2)).toContainText(msg);\n      |                                         ^\n  158 | });\n  159 |\n  160 | // AT-10: Empty history stays empty after refresh\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:157:41"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:28.710Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/test-failed-2.png"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/video.webm"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/video-1.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                    "column": 41,
                    "line": 157
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-f7cd90624f3aa02f90db",
          "file": "chat-history.spec.ts",
          "line": 148,
          "column": 1
        },
        {
          "title": "AT-10: empty history stays empty after refresh",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5371,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:29.689Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-49a51131d2e10edb4bac",
          "file": "chat-history.spec.ts",
          "line": 161,
          "column": 1
        },
        {
          "title": "AT-11: should persist a message after refresh",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4223,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:35.077Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-fcca6fdf8bfc8b5fe9c1",
          "file": "chat-history.spec.ts",
          "line": 171,
          "column": 1
        },
        {
          "title": "AT-12: should persist multiple messages and keep order",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 12615,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First 1760389724028\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First 1760389724028\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:197:44",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                      "column": 44,
                      "line": 197
                    },
                    "snippet": "\u001b[0m \u001b[90m 195 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mreload()\u001b[33m;\u001b[39m\n \u001b[90m 196 |\u001b[39m     \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m m \u001b[36mof\u001b[39m msgs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 197 |\u001b[39m         \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 198 |\u001b[39m     }\n \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     \u001b[36mconst\u001b[39m allText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m selectors\u001b[33m.\u001b[39mlist(page)\u001b[33m.\u001b[39minnerText()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                        "column": 44,
                        "line": 197
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First 1760389724028\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n\n\n  195 |     await page.reload();\n  196 |     for (const m of msgs) {\n> 197 |         await expect(selectors.list(page)).toContainText(m);\n      |                                            ^\n  198 |     }\n  199 |\n  200 |     const allText = await selectors.list(page).innerText();\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:197:44"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:39.311Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                    "column": 44,
                    "line": 197
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-663a0accf95670b7c1c8",
          "file": "chat-history.spec.ts",
          "line": 184,
          "column": 1
        },
        {
          "title": "AT-13: should persist a long history of messages",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 13,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 15414,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Message 0 - 1760389725428\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Message 0 - 1760389725428\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:222:44",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                      "column": 44,
                      "line": 222
                    },
                    "snippet": "\u001b[0m \u001b[90m 220 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mreload()\u001b[33m;\u001b[39m\n \u001b[90m 221 |\u001b[39m     \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m m \u001b[36mof\u001b[39m msgs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 222 |\u001b[39m         \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 223 |\u001b[39m     }\n \u001b[90m 224 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 225 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                        "column": 44,
                        "line": 222
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Message 0 - 1760389725428\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n\n\n  220 |     await page.reload();\n  221 |     for (const m of msgs) {\n> 222 |         await expect(selectors.list(page)).toContainText(m);\n      |                                            ^\n  223 |     }\n  224 | });\n  225 |\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:222:44"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:40.764Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                    "column": 44,
                    "line": 222
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-940f80bca406ea409d63",
          "file": "chat-history.spec.ts",
          "line": 209,
          "column": 1
        },
        {
          "title": "AT-14: should keep messages across multiple send/refresh cycles",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 14,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 13521,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First cycle 1760389736684\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First cycle 1760389736684\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:241:40",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                      "column": 40,
                      "line": 241
                    },
                    "snippet": "\u001b[0m \u001b[90m 239 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mreload()\u001b[33m;\u001b[39m\n \u001b[90m 240 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 241 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(first)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 242 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page))\u001b[33m.\u001b[39mtoContainText(second)\u001b[33m;\u001b[39m\n \u001b[90m 243 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 244 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                        "column": 40,
                        "line": 241
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First cycle 1760389736684\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n\n\n  239 |     await page.reload();\n  240 |\n> 241 |     await expect(selectors.list(page)).toContainText(first);\n      |                                        ^\n  242 |     await expect(selectors.list(page)).toContainText(second);\n  243 | });\n  244 |\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:241:40"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:52.518Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                    "column": 40,
                    "line": 241
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-1f2abc9311bc50439777",
          "file": "chat-history.spec.ts",
          "line": 227,
          "column": 1
        },
        {
          "title": "AT-15: should not duplicate messages after refresh",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 11540,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:258:28",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                      "column": 28,
                      "line": 258
                    },
                    "snippet": "\u001b[0m \u001b[90m 256 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mreload()\u001b[33m;\u001b[39m\n \u001b[90m 257 |\u001b[39m     \u001b[36mconst\u001b[39m matching \u001b[33m=\u001b[39m selectors\u001b[33m.\u001b[39mlist(page)\u001b[33m.\u001b[39mlocator(\u001b[32m`div:has-text(\"${msg}\")`\u001b[39m)\u001b[33m.\u001b[39mlast()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 258 |\u001b[39m     \u001b[36mawait\u001b[39m expect(matching)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 259 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 260 |\u001b[39m\n \u001b[90m 261 |\u001b[39m \u001b[90m// AT-16: Messages stay in order after multiple refreshes\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                        "column": 28,
                        "line": 258
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\u001b[22m\n\n\n  256 |     await page.reload();\n  257 |     const matching = selectors.list(page).locator(`div:has-text(\"${msg}\")`).last();\n> 258 |     await expect(matching).toBeVisible({ timeout: 5000 });\n      |                            ^\n  259 | });\n  260 |\n  261 | // AT-16: Messages stay in order after multiple refreshes\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:258:28"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:08:56.980Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                    "column": 28,
                    "line": 258
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-e845f8b97e8d3bf99862",
          "file": "chat-history.spec.ts",
          "line": 245,
          "column": 1
        },
        {
          "title": "AT-16: should keep order after multiple refreshes",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 16,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 15632,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:281:32",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                      "column": 32,
                      "line": 281
                    },
                    "snippet": "\u001b[0m \u001b[90m 279 |\u001b[39m     \u001b[36mconst\u001b[39m firstMessage \u001b[33m=\u001b[39m selectors\u001b[33m.\u001b[39mlist(page)\u001b[33m.\u001b[39mlocator(\u001b[32m`div:has-text(\"${msgs[0]}\")`\u001b[39m)\u001b[33m.\u001b[39mlast()\u001b[33m;\u001b[39m\n \u001b[90m 280 |\u001b[39m     \u001b[36mconst\u001b[39m secondMessage \u001b[33m=\u001b[39m selectors\u001b[33m.\u001b[39mlist(page)\u001b[33m.\u001b[39mlocator(\u001b[32m`div:has-text(\"${msgs[1]}\")`\u001b[39m)\u001b[33m.\u001b[39mlast()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 281 |\u001b[39m     \u001b[36mawait\u001b[39m expect(firstMessage)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 282 |\u001b[39m     \u001b[36mawait\u001b[39m expect(secondMessage)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 283 |\u001b[39m\n \u001b[90m 284 |\u001b[39m     \u001b[90m// Grab full list content to compare index\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                        "column": 32,
                        "line": 281
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\u001b[22m\n\n\n  279 |     const firstMessage = selectors.list(page).locator(`div:has-text(\"${msgs[0]}\")`).last();\n  280 |     const secondMessage = selectors.list(page).locator(`div:has-text(\"${msgs[1]}\")`).last();\n> 281 |     await expect(firstMessage).toBeVisible({ timeout: 5000 });\n      |                                ^\n  282 |     await expect(secondMessage).toBeVisible({ timeout: 5000 });\n  283 |\n  284 |     // Grab full list content to compare index\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:281:32"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:06.687Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                    "column": 32,
                    "line": 281
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-e371b93a185f10d4f5d0",
          "file": "chat-history.spec.ts",
          "line": 262,
          "column": 1
        },
        {
          "title": "AT-17: refresh should not create ghost messages",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6566,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:09.454Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-27917f455a2458d852b6",
          "file": "chat-history.spec.ts",
          "line": 296,
          "column": 1
        },
        {
          "title": "AT-18: new session should start with empty history",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 4167,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:16.123Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-d1a94ce81f6c65171894",
          "file": "chat-history.spec.ts",
          "line": 306,
          "column": 1
        },
        {
          "title": "AT-19: multiple tabs should show same history",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 12803,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389764568\"\u001b[39m\nReceived string: \u001b[31m\"testuser: Test 1760389772015User is typing...\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    6 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: Test 1760389772015User is typing...\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389764568\"\u001b[39m\nReceived string: \u001b[31m\"testuser: Test 1760389772015User is typing...\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    6 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: Test 1760389772015User is typing...\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:330:41",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                      "column": 41,
                      "line": 330
                    },
                    "snippet": "\u001b[0m \u001b[90m 328 |\u001b[39m     \u001b[36mconst\u001b[39m page2 \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m context\u001b[33m.\u001b[39mnewPage()\u001b[33m;\u001b[39m\n \u001b[90m 329 |\u001b[39m     \u001b[36mawait\u001b[39m login(page2)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 330 |\u001b[39m     \u001b[36mawait\u001b[39m expect(selectors\u001b[33m.\u001b[39mlist(page2))\u001b[33m.\u001b[39mtoContainText(msg)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 331 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 332 |\u001b[39m\n \u001b[90m 333 |\u001b[39m \u001b[90m// AT-20: Empty history stays empty after refresh\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                        "column": 41,
                        "line": 330
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389764568\"\u001b[39m\nReceived string: \u001b[31m\"testuser: Test 1760389772015User is typing...\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    6 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: Test 1760389772015User is typing...\"\u001b[22m\n\n\n  328 |     const page2 = await context.newPage();\n  329 |     await login(page2);\n> 330 |     await expect(selectors.list(page2)).toContainText(msg);\n      |                                         ^\n  331 | });\n  332 |\n  333 | // AT-20: Empty history stays empty after refresh\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts:330:41"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:20.307Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/test-failed-2.png"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/video-1.webm"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/chat-history.spec.ts",
                    "column": 41,
                    "line": 330
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-91749824afb3e22ed5c6",
          "file": "chat-history.spec.ts",
          "line": 319,
          "column": 1
        },
        {
          "title": "AT-20: empty history stays empty after refresh",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 6379,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:23.218Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cd86e16f0c4ce20a906b-3abc4082f14291b67a34",
          "file": "chat-history.spec.ts",
          "line": 334,
          "column": 1
        }
      ]
    },
    {
      "title": "enter-key.spec.ts",
      "file": "enter-key.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-2: should send a message with Send button",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2666,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:29.699Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-4a79d9999e6bdecce976",
          "file": "enter-key.spec.ts",
          "line": 14,
          "column": 1
        },
        {
          "title": "AT-3: should trim leading/trailing spaces",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3011,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:32.382Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-75fa93357951890e2d37",
          "file": "enter-key.spec.ts",
          "line": 23,
          "column": 1
        },
        {
          "title": "AT-4: should send a long message up to limit",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 19,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3120,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:33.727Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-b2c2cd820b55e3ead235",
          "file": "enter-key.spec.ts",
          "line": 31,
          "column": 1
        },
        {
          "title": "AT-5: should support special characters",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3015,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:35.409Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-871acf08ef1b62c01341",
          "file": "enter-key.spec.ts",
          "line": 40,
          "column": 1
        },
        {
          "title": "AT-6: should not send an empty message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 19,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3092,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:36.947Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-d80fd6a8cc0b1e7e2f7f",
          "file": "enter-key.spec.ts",
          "line": 49,
          "column": 1
        },
        {
          "title": "AT-7: should not send whitespace-only message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3010,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:38.437Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-b386bce431e76071acc0",
          "file": "enter-key.spec.ts",
          "line": 59,
          "column": 1
        },
        {
          "title": "AT-8: should not duplicate message on rapid Enter presses",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 19,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 3072,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts:77:25",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts",
                      "column": 25,
                      "line": 77
                    },
                    "snippet": "\u001b[0m \u001b[90m 75 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mkeyboard\u001b[33m.\u001b[39mpress(\u001b[32m'Enter'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 76 |\u001b[39m     \u001b[36mconst\u001b[39m occurrences \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m selectors\u001b[33m.\u001b[39mlist(page)\u001b[33m.\u001b[39mlocator(\u001b[32m`div:has-text(\"${msg}\")`\u001b[39m)\u001b[33m.\u001b[39mcount()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m     expect(occurrences)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 78 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 79 |\u001b[39m\n \u001b[90m 80 |\u001b[39m \u001b[90m// AT-9: Shift+Enter creates newline (not send)\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts",
                        "column": 25,
                        "line": 77
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n\n  75 |     await page.keyboard.press('Enter');\n  76 |     const occurrences = await selectors.list(page).locator(`div:has-text(\"${msg}\")`).count();\n> 77 |     expect(occurrences).toBe(1);\n     |                         ^\n  78 | });\n  79 |\n  80 | // AT-9: Shift+Enter creates newline (not send)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts:77:25"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:40.059Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts",
                    "column": 25,
                    "line": 77
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "593de1d0333873cfed74-1f98c08aa97789d9b3a8",
          "file": "enter-key.spec.ts",
          "line": 69,
          "column": 1
        },
        {
          "title": "AT-9: pressing Shift+Enter creates newline in input",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3253,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:41.459Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-4131d06e6d42cf5385bd",
          "file": "enter-key.spec.ts",
          "line": 81,
          "column": 1
        },
        {
          "title": "AT-10: pressing Enter outside input does nothing",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 20,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3134,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:43.740Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-d3268e09312fc120148a",
          "file": "enter-key.spec.ts",
          "line": 92,
          "column": 1
        },
        {
          "title": "AT-11: pressing Enter again immediately does nothing",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3031,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:44.725Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-cecbff444dabad2a4288",
          "file": "enter-key.spec.ts",
          "line": 102,
          "column": 1
        },
        {
          "title": "AT-12: should send a message with Send button",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 20,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5122,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:46.994Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-0f0a272df3fcd012bde6",
          "file": "enter-key.spec.ts",
          "line": 116,
          "column": 1
        },
        {
          "title": "AT-13: should trim leading/trailing spaces",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4938,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:47.772Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-f18141413509773b1d4a",
          "file": "enter-key.spec.ts",
          "line": 126,
          "column": 1
        },
        {
          "title": "AT-14: should send a long message up to limit",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 20,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 4865,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:52.136Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-15a595d3103e9c931ae5",
          "file": "enter-key.spec.ts",
          "line": 135,
          "column": 1
        },
        {
          "title": "AT-15: should support special characters",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4887,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:52.725Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-4804ebf0bbe8358ba1e8",
          "file": "enter-key.spec.ts",
          "line": 145,
          "column": 1
        },
        {
          "title": "AT-16: should not send an empty message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 20,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 4941,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:57.013Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-480866e463be2aa628b0",
          "file": "enter-key.spec.ts",
          "line": 155,
          "column": 1
        },
        {
          "title": "AT-17: should not send whitespace-only message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4877,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:09:57.628Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-def5b7656a4b1d6cb89a",
          "file": "enter-key.spec.ts",
          "line": 166,
          "column": 1
        },
        {
          "title": "AT-18: should not duplicate message on rapid Enter presses",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 20,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 4956,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts:186:25",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts",
                      "column": 25,
                      "line": 186
                    },
                    "snippet": "\u001b[0m \u001b[90m 184 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mkeyboard\u001b[33m.\u001b[39mpress(\u001b[32m'Enter'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 185 |\u001b[39m     \u001b[36mconst\u001b[39m occurrences \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m selectors\u001b[33m.\u001b[39mlist(page)\u001b[33m.\u001b[39mlocator(\u001b[32m`div:has-text(\"${msg}\")`\u001b[39m)\u001b[33m.\u001b[39mcount()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 186 |\u001b[39m     expect(occurrences)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 187 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 188 |\u001b[39m\n \u001b[90m 189 |\u001b[39m \u001b[90m// AT-19: Shift+Enter creates newline (not send)\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts",
                        "column": 25,
                        "line": 186
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n\n  184 |     await page.keyboard.press('Enter');\n  185 |     const occurrences = await selectors.list(page).locator(`div:has-text(\"${msg}\")`).count();\n> 186 |     expect(occurrences).toBe(1);\n      |                         ^\n  187 | });\n  188 |\n  189 | // AT-19: Shift+Enter creates newline (not send)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts:186:25"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:01.968Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/enter-key.spec.ts",
                    "column": 25,
                    "line": 186
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "593de1d0333873cfed74-3d53bd09c5733ea6c37e",
          "file": "enter-key.spec.ts",
          "line": 177,
          "column": 1
        },
        {
          "title": "AT-19: pressing Shift+Enter creates newline in input",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4986,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:02.518Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-b43c90ddad5ca42d65c5",
          "file": "enter-key.spec.ts",
          "line": 190,
          "column": 1
        },
        {
          "title": "AT-20: pressing Enter outside input does nothing",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 21,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 4996,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:07.808Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-638c6c8a70c337538b8f",
          "file": "enter-key.spec.ts",
          "line": 202,
          "column": 1
        },
        {
          "title": "AT-21: pressing Enter again immediately does nothing",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4841,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:07.523Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "593de1d0333873cfed74-ab5a3995d93e01efff52",
          "file": "enter-key.spec.ts",
          "line": 213,
          "column": 1
        }
      ]
    },
    {
      "title": "hello.spec.ts",
      "file": "hello.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "app loads at base URL and backend is alive",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2501,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:12.384Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "ad9612254cf525ed3707-cfb6485caee07cef4861",
          "file": "hello.spec.ts",
          "line": 6,
          "column": 1
        }
      ]
    },
    {
      "title": "help-ai.spec.ts",
      "file": "help-ai.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: Help dialog opens when clicking Help button",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 21,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5114,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:12.917Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-da6c00275bf25b4c6a16",
          "file": "help-ai.spec.ts",
          "line": 57,
          "column": 1
        },
        {
          "title": "AT-2: FAQ content loads in dialog",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5131,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:14.911Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-ff15526ff867fe6e5485",
          "file": "help-ai.spec.ts",
          "line": 64,
          "column": 1
        },
        {
          "title": "AT-3: Search filters FAQ content",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 21,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5181,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:18.050Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-eef1b95ac3ae2d28900c",
          "file": "help-ai.spec.ts",
          "line": 75,
          "column": 1
        },
        {
          "title": "AT-4: Search case insensitive",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5078,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:20.055Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-6bb716c91f9b18603314",
          "file": "help-ai.spec.ts",
          "line": 88,
          "column": 1
        },
        {
          "title": "AT-5: Close button hides FAQ dialog",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 21,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5495,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:23.245Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-3251048708dfb74e3e93",
          "file": "help-ai.spec.ts",
          "line": 99,
          "column": 1
        },
        {
          "title": "AT-6: Pressing ESC closes FAQ dialog",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5473,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:25.147Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-8b67cee08808a32ed490",
          "file": "help-ai.spec.ts",
          "line": 111,
          "column": 1
        },
        {
          "title": "AT-7: Re-open works after closing",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 21,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 4930,
                  "error": {
                    "message": "Error: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m\n",
                    "stack": "Error: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m\n\n    at openHelp (/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts:43:37)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts:125:5",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts",
                      "column": 37,
                      "line": 43
                    },
                    "snippet": "\u001b[0m \u001b[90m 41 |\u001b[39m         \u001b[36mawait\u001b[39m helpButton\u001b[33m.\u001b[39mclick({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 42 |\u001b[39m     } \u001b[36mcatch\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m         \u001b[36mconst\u001b[39m el \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m helpButton\u001b[33m.\u001b[39melementHandle()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 44 |\u001b[39m         \u001b[36mif\u001b[39m (el) \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mevaluate((e) \u001b[33m=>\u001b[39m (e \u001b[36mas\u001b[39m \u001b[33mHTMLElement\u001b[39m)\u001b[33m.\u001b[39mclick()\u001b[33m,\u001b[39m el)\u001b[33m;\u001b[39m\n \u001b[90m 45 |\u001b[39m         \u001b[36melse\u001b[39m \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Help button click failed — element handle missing.'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 46 |\u001b[39m     }\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts",
                        "column": 37,
                        "line": 43
                      },
                      "message": "Error: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m\n\n\n  41 |         await helpButton.click({ timeout: 5000 });\n  42 |     } catch {\n> 43 |         const el = await helpButton.elementHandle();\n     |                                     ^\n  44 |         if (el) await page.evaluate((e) => (e as HTMLElement).click(), el);\n  45 |         else throw new Error('Help button click failed — element handle missing.');\n  46 |     }\n    at openHelp (/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts:43:37)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts:125:5"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:28.753Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts",
                    "column": 37,
                    "line": 43
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-84adf26589a4703e86c2",
          "file": "help-ai.spec.ts",
          "line": 121,
          "column": 1
        },
        {
          "title": "AT-8: Search yields no results message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5160,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:30.631Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-ab1f61931c6b541e45fe",
          "file": "help-ai.spec.ts",
          "line": 134,
          "column": 1
        },
        {
          "title": "AT-9: Dialog is usable on mobile viewport",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 5009,
                  "error": {
                    "message": "Error: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m\n",
                    "stack": "Error: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m\n\n    at openHelp (/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts:43:37)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts:149:5",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts",
                      "column": 37,
                      "line": 43
                    },
                    "snippet": "\u001b[0m \u001b[90m 41 |\u001b[39m         \u001b[36mawait\u001b[39m helpButton\u001b[33m.\u001b[39mclick({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 42 |\u001b[39m     } \u001b[36mcatch\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m         \u001b[36mconst\u001b[39m el \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m helpButton\u001b[33m.\u001b[39melementHandle()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 44 |\u001b[39m         \u001b[36mif\u001b[39m (el) \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mevaluate((e) \u001b[33m=>\u001b[39m (e \u001b[36mas\u001b[39m \u001b[33mHTMLElement\u001b[39m)\u001b[33m.\u001b[39mclick()\u001b[33m,\u001b[39m el)\u001b[33m;\u001b[39m\n \u001b[90m 45 |\u001b[39m         \u001b[36melse\u001b[39m \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Help button click failed — element handle missing.'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 46 |\u001b[39m     }\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts",
                        "column": 37,
                        "line": 43
                      },
                      "message": "Error: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m\n\n\n  41 |         await helpButton.click({ timeout: 5000 });\n  42 |     } catch {\n> 43 |         const el = await helpButton.elementHandle();\n     |                                     ^\n  44 |         if (el) await page.evaluate((e) => (e as HTMLElement).click(), el);\n  45 |         else throw new Error('Help button click failed — element handle missing.');\n  46 |     }\n    at openHelp (/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts:43:37)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts:149:5"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:34.289Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-ai.spec.ts",
                    "column": 37,
                    "line": 43
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "f8c376264bc71b7c07c5-56ff0133c8dc515f8103",
          "file": "help-ai.spec.ts",
          "line": 145,
          "column": 1
        }
      ]
    },
    {
      "title": "help-community.spec.ts",
      "file": "help-community.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: Help dialog opens when clicking Help button",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5804,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:35.816Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-0b7825082c380a937380",
          "file": "help-community.spec.ts",
          "line": 59,
          "column": 1
        },
        {
          "title": "AT-2: FAQ content loads in dialog",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6069,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:39.996Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-14a098ed09c53afdd5c6",
          "file": "help-community.spec.ts",
          "line": 65,
          "column": 1
        },
        {
          "title": "AT-3: Search filters FAQ content",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 6254,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:41.635Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-a7a10229d60eda01f889",
          "file": "help-community.spec.ts",
          "line": 74,
          "column": 1
        },
        {
          "title": "AT-4: Search case insensitive",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6195,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:46.164Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-5a8362d7a0c1ca6ec401",
          "file": "help-community.spec.ts",
          "line": 85,
          "column": 1
        },
        {
          "title": "AT-5: Close button hides FAQ dialog",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 6830,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:47.904Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-ee3c09f369ef15fabbe8",
          "file": "help-community.spec.ts",
          "line": 94,
          "column": 1
        },
        {
          "title": "AT-6: Pressing ESC closes FAQ dialog",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6763,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:52.374Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-112a32ee3db4c71156fb",
          "file": "help-community.spec.ts",
          "line": 105,
          "column": 1
        },
        {
          "title": "AT-7: Re-open works after closing",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 10055,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:54.749Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-d93274bbd16c13298065",
          "file": "help-community.spec.ts",
          "line": 113,
          "column": 1
        },
        {
          "title": "AT-8: Search yields no results message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 6687,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:10:59.153Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-a8c2e8ff634e74674c7d",
          "file": "help-community.spec.ts",
          "line": 125,
          "column": 1
        },
        {
          "title": "AT-9: Dialog is usable on mobile viewport",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 2607,
                  "error": {
                    "message": "Error: Help button not found on page.",
                    "stack": "Error: Help button not found on page.\n    at openHelp (/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-community.spec.ts:30:21)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-community.spec.ts:137:3",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-community.spec.ts",
                      "column": 21,
                      "line": 30
                    },
                    "snippet": "\u001b[0m \u001b[90m 28 |\u001b[39m   }\n \u001b[90m 29 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m   \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mfound) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Help button not found on page.'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m\n \u001b[90m 32 |\u001b[39m   \u001b[90m// Scroll to ensure visibility\u001b[39m\n \u001b[90m 33 |\u001b[39m   \u001b[36mtry\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-community.spec.ts",
                        "column": 21,
                        "line": 30
                      },
                      "message": "Error: Help button not found on page.\n\n  28 |   }\n  29 |\n> 30 |   if (!found) throw new Error('Help button not found on page.');\n     |                     ^\n  31 |\n  32 |   // Scroll to ensure visibility\n  33 |   try {\n    at openHelp (/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-community.spec.ts:30:21)\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-community.spec.ts:137:3"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:04.819Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/help-community.spec.ts",
                    "column": 21,
                    "line": 30
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc1416c9c2ccd6e0ed36-320ab226af8b3f74ea4a",
          "file": "help-community.spec.ts",
          "line": 134,
          "column": 1
        }
      ]
    },
    {
      "title": "profile.spec.ts",
      "file": "profile.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: Profile page loads and customization UI is visible",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3136,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:05.858Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e8b79b4ee550a37632f1-25fa4b9d9a507dbd246d",
          "file": "profile.spec.ts",
          "line": 5,
          "column": 1
        },
        {
          "title": "AT-2: Selecting avatar and saving updates profile",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 24,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 8938,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts:24:69",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                      "column": 69,
                      "line": 24
                    },
                    "snippet": "\u001b[0m \u001b[90m 22 |\u001b[39m\n \u001b[90m 23 |\u001b[39m     \u001b[90m// TODO: Replace with success toast or dialog once implemented\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=Profile updated successfully'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 26 |\u001b[39m\n \u001b[90m 27 |\u001b[39m test(\u001b[32m'AT-3: Selecting theme color and saving updates profile'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                        "column": 69,
                        "line": 24
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m\n\n\n  22 |\n  23 |     // TODO: Replace with success toast or dialog once implemented\n> 24 |     await expect(page.locator('text=Profile updated successfully')).toBeVisible();\n     |                                                                     ^\n  25 | });\n  26 |\n  27 | test('AT-3: Selecting theme color and saving updates profile', async ({ page }) => {\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts:24:69"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:08.094Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                    "column": 69,
                    "line": 24
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "e8b79b4ee550a37632f1-e11779b28028312bbab0",
          "file": "profile.spec.ts",
          "line": 13,
          "column": 1
        },
        {
          "title": "AT-3: Selecting theme color and saving updates profile",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 8689,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts:38:69",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                      "column": 69,
                      "line": 38
                    },
                    "snippet": "\u001b[0m \u001b[90m 36 |\u001b[39m\n \u001b[90m 37 |\u001b[39m     \u001b[90m// TODO: Assert on visible change or success message\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 38 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=Profile updated successfully'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 39 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 40 |\u001b[39m\n \u001b[90m 41 |\u001b[39m test(\u001b[32m'AT-4: Profile settings persist after reload'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                        "column": 69,
                        "line": 38
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m\n\n\n  36 |\n  37 |     // TODO: Assert on visible change or success message\n> 38 |     await expect(page.locator('text=Profile updated successfully')).toBeVisible();\n     |                                                                     ^\n  39 | });\n  40 |\n  41 | test('AT-4: Profile settings persist after reload', async ({ page }) => {\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts:38:69"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:09.007Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                    "column": 69,
                    "line": 38
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "e8b79b4ee550a37632f1-e37f493bc89d96a468be",
          "file": "profile.spec.ts",
          "line": 27,
          "column": 1
        },
        {
          "title": "AT-4: Profile settings persist after reload",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 25,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 10219,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[aria-label=\"Click to select\"]').nth(1)\nExpected string: \u001b[32m\"true\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('[aria-label=\"Click to select\"]').nth(1)\u001b[22m\n\u001b[2m    7 × locator resolved to <div aria-label=\"Click to select\" data-mui-internal-clone-element=\"true\" class=\"MuiAvatar-root MuiAvatar-circular css-r4mjgc-MuiAvatar-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"null\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[aria-label=\"Click to select\"]').nth(1)\nExpected string: \u001b[32m\"true\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('[aria-label=\"Click to select\"]').nth(1)\u001b[22m\n\u001b[2m    7 × locator resolved to <div aria-label=\"Click to select\" data-mui-internal-clone-element=\"true\" class=\"MuiAvatar-root MuiAvatar-circular css-r4mjgc-MuiAvatar-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"null\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts:52:34",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                      "column": 34,
                      "line": 52
                    },
                    "snippet": "\u001b[0m \u001b[90m 50 |\u001b[39m\n \u001b[90m 51 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mreload()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m     \u001b[36mawait\u001b[39m expect(avatars\u001b[33m.\u001b[39mnth(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoHaveAttribute(\u001b[32m'aria-selected'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'true'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 54 |\u001b[39m\n \u001b[90m 55 |\u001b[39m test(\u001b[32m'AT-5: Unauthorized user cannot access profile page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                        "column": 34,
                        "line": 52
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[aria-label=\"Click to select\"]').nth(1)\nExpected string: \u001b[32m\"true\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('[aria-label=\"Click to select\"]').nth(1)\u001b[22m\n\u001b[2m    7 × locator resolved to <div aria-label=\"Click to select\" data-mui-internal-clone-element=\"true\" class=\"MuiAvatar-root MuiAvatar-circular css-r4mjgc-MuiAvatar-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"null\"\u001b[22m\n\n\n  50 |\n  51 |     await page.reload();\n> 52 |     await expect(avatars.nth(1)).toHaveAttribute('aria-selected', 'true');\n     |                                  ^\n  53 | });\n  54 |\n  55 | test('AT-5: Unauthorized user cannot access profile page', async ({ page }) => {\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts:52:34"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:17.870Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                    "column": 34,
                    "line": 52
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "e8b79b4ee550a37632f1-6c800f5d64a56c4fec67",
          "file": "profile.spec.ts",
          "line": 41,
          "column": 1
        },
        {
          "title": "AT-5: Unauthorized user cannot access profile page",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 26,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 7570,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Not authorized')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Not authorized')\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Not authorized')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Not authorized')\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts:57:55",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                      "column": 55,
                      "line": 57
                    },
                    "snippet": "\u001b[0m \u001b[90m 55 |\u001b[39m test(\u001b[32m'AT-5: Unauthorized user cannot access profile page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 56 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:8000/profile'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 57 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=Not authorized'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 58 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                        "column": 55,
                        "line": 57
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Not authorized')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Not authorized')\u001b[22m\n\n\n  55 | test('AT-5: Unauthorized user cannot access profile page', async ({ page }) => {\n  56 |     await page.goto('http://localhost:8000/profile');\n> 57 |     await expect(page.locator('text=Not authorized')).toBeVisible();\n     |                                                       ^\n  58 | });\n  59 |\n  60 |\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts:57:55"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:18.480Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/profile.spec.ts",
                    "column": 55,
                    "line": 57
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "e8b79b4ee550a37632f1-d4199da75fa293e769f9",
          "file": "profile.spec.ts",
          "line": 55,
          "column": 1
        }
      ]
    },
    {
      "title": "sidebar.spec.ts",
      "file": "sidebar.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: Sidebar shows Community and AI tabs",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 27,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2926,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:26.713Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "19544871d9648c30f4b7-f40bce8d315587116a74",
          "file": "sidebar.spec.ts",
          "line": 39,
          "column": 1
        },
        {
          "title": "AT-2: Click AI goes to AI page",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3168,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:28.789Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "19544871d9648c30f4b7-7b78237700c922633642",
          "file": "sidebar.spec.ts",
          "line": 47,
          "column": 1
        },
        {
          "title": "AT-3: Click Community goes to Community page",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 27,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3103,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:29.730Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "19544871d9648c30f4b7-8f23db2e51b0699d6902",
          "file": "sidebar.spec.ts",
          "line": 53,
          "column": 1
        },
        {
          "title": "AT-4: Direct /ai shows AI content",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4944,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:32.083Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "19544871d9648c30f4b7-ad79831bb4d5d13b5a6e",
          "file": "sidebar.spec.ts",
          "line": 59,
          "column": 1
        },
        {
          "title": "AT-5: Direct /community shows Community content",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 27,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 5293,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:32.851Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "19544871d9648c30f4b7-8dac3974cc99d62a4927",
          "file": "sidebar.spec.ts",
          "line": 65,
          "column": 1
        },
        {
          "title": "AT-6: Click Profile goes to Profile page",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3217,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:37.058Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "19544871d9648c30f4b7-c30e4ecc406b9860b486",
          "file": "sidebar.spec.ts",
          "line": 71,
          "column": 1
        },
        {
          "title": "AT-7: Click Logout logs out and redirects to Login",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 27,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 8103,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/login(?:$|[?#])/\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/community\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    2 × unexpected value \"http://localhost:8000/logout\"\u001b[22m\n\u001b[2m    7 × unexpected value \"http://localhost:8000/community\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/login(?:$|[?#])/\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/community\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    2 × unexpected value \"http://localhost:8000/logout\"\u001b[22m\n\u001b[2m    7 × unexpected value \"http://localhost:8000/community\"\u001b[22m\n\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/sidebar.spec.ts:81:24",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/sidebar.spec.ts",
                      "column": 24,
                      "line": 81
                    },
                    "snippet": "\u001b[0m \u001b[90m 79 |\u001b[39m     \u001b[36mawait\u001b[39m login(page)\u001b[33m;\u001b[39m\n \u001b[90m 80 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgetByRole(\u001b[32m'link'\u001b[39m\u001b[33m,\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m'Logout'\u001b[39m })\u001b[33m.\u001b[39mclick()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 81 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveURL(\u001b[35m/\\/login(?:$|[?#])/\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 82 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mgetByRole(\u001b[32m'heading'\u001b[39m\u001b[33m,\u001b[39m { name\u001b[33m:\u001b[39m \u001b[35m/login/i\u001b[39m }))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 83 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/sidebar.spec.ts",
                        "column": 24,
                        "line": 81
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/login(?:$|[?#])/\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/community\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    2 × unexpected value \"http://localhost:8000/logout\"\u001b[22m\n\u001b[2m    7 × unexpected value \"http://localhost:8000/community\"\u001b[22m\n\n\n  79 |     await login(page);\n  80 |     await page.getByRole('link', { name: 'Logout' }).click();\n> 81 |     await expect(page).toHaveURL(/\\/login(?:$|[?#])/);\n     |                        ^\n  82 |     await expect(page.getByRole('heading', { name: /login/i })).toBeVisible();\n  83 | });\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/sidebar.spec.ts:81:24"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:38.173Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/sidebar.spec.ts",
                    "column": 24,
                    "line": 81
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "19544871d9648c30f4b7-4af978e8a3c6a0ad234e",
          "file": "sidebar.spec.ts",
          "line": 78,
          "column": 1
        }
      ]
    },
    {
      "title": "smoke.spec.ts",
      "file": "smoke.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "basic math works",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-13T21:11:40.303Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "4219922fea2e2bd3c691-371c1f9131bc3b9545ac",
          "file": "smoke.spec.ts",
          "line": 3,
          "column": 1
        }
      ]
    },
    {
      "title": "typing-indicator.spec.ts",
      "file": "typing-indicator.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "AT-1: shows typing indicator to other users when someone starts typing",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 5480,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"poll toBeTruthy\"",
                      "duration": 8
                    }
                  ],
                  "startTime": "2025-10-13T21:11:40.325Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "5db79e380d9166cdb045-85fbc14e9e638da4b5ae",
          "file": "typing-indicator.spec.ts",
          "line": 37,
          "column": 1
        },
        {
          "title": "AT-2: Indicator disappears after stop typing or sending",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 13442,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n\nCall Log:\n- Timeout 8000ms exceeded while waiting on the predicate",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n\nCall Log:\n- Timeout 8000ms exceeded while waiting on the predicate\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/typing-indicator.spec.ts:61:3",
                    "location": {
                      "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/typing-indicator.spec.ts",
                      "column": 3,
                      "line": 61
                    },
                    "snippet": "\u001b[0m \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m   \u001b[36mawait\u001b[39m selectors\u001b[33m.\u001b[39msend(a)\u001b[33m.\u001b[39mclick()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m   \u001b[36mawait\u001b[39m expect\u001b[33m.\u001b[39mpoll(() \u001b[33m=>\u001b[39m indicatorIsVisible(b)\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m8000\u001b[39m })\u001b[33m.\u001b[39mtoBeFalsy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m\n \u001b[90m 63 |\u001b[39m   \u001b[36mawait\u001b[39m ctxA\u001b[33m.\u001b[39mclose()\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m   \u001b[36mawait\u001b[39m ctxB\u001b[33m.\u001b[39mclose()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/typing-indicator.spec.ts",
                        "column": 3,
                        "line": 61
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n\nCall Log:\n- Timeout 8000ms exceeded while waiting on the predicate\n\n  59 |\n  60 |   await selectors.send(a).click();\n> 61 |   await expect.poll(() => indicatorIsVisible(b), { timeout: 8000 }).toBeFalsy();\n     |   ^\n  62 |\n  63 |   await ctxA.close();\n  64 |   await ctxB.close();\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/typing-indicator.spec.ts:61:3"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"poll toBeTruthy\"",
                      "duration": 7
                    },
                    {
                      "title": "Expect \"poll toBeFalsy\"",
                      "duration": 7924,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n\nCall Log:\n- Timeout 8000ms exceeded while waiting on the predicate",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n\nCall Log:\n- Timeout 8000ms exceeded while waiting on the predicate\n    at /home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/typing-indicator.spec.ts:61:3",
                        "location": {
                          "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/typing-indicator.spec.ts",
                          "column": 3,
                          "line": 61
                        },
                        "snippet": "\u001b[0m \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m   \u001b[36mawait\u001b[39m selectors\u001b[33m.\u001b[39msend(a)\u001b[33m.\u001b[39mclick()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m   \u001b[36mawait\u001b[39m expect\u001b[33m.\u001b[39mpoll(() \u001b[33m=>\u001b[39m indicatorIsVisible(b)\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m8000\u001b[39m })\u001b[33m.\u001b[39mtoBeFalsy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m\n \u001b[90m 63 |\u001b[39m   \u001b[36mawait\u001b[39m ctxA\u001b[33m.\u001b[39mclose()\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m   \u001b[36mawait\u001b[39m ctxB\u001b[33m.\u001b[39mclose()\u001b[33m;\u001b[39m\u001b[0m"
                      }
                    }
                  ],
                  "startTime": "2025-10-13T21:11:45.816Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/test-failed-2.png"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/test-failed-1.png"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/cs673olf25project-cs673olf25_team1/cs673olf25project-cs673olf25_team1/tests/e2e/typing-indicator.spec.ts",
                    "column": 3,
                    "line": 61
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "5db79e380d9166cdb045-f08bc9be542f1e7766a7",
          "file": "typing-indicator.spec.ts",
          "line": 51,
          "column": 1
        },
        {
          "title": "AT-3: Shows \"X users are typing\" when two users type",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 29,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 8274,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"poll toBeTruthy\"",
                      "duration": 9
                    }
                  ],
                  "startTime": "2025-10-13T21:11:46.886Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "5db79e380d9166cdb045-863120fc70016cb88e90",
          "file": "typing-indicator.spec.ts",
          "line": 68,
          "column": 1
        },
        {
          "title": "AT-4: Typist does not see their own indicator",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 29,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3608,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"poll toBeFalsy\"",
                      "duration": 6
                    }
                  ],
                  "startTime": "2025-10-13T21:11:55.255Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "5db79e380d9166cdb045-81bcc80ac0ddafefd6a9",
          "file": "typing-indicator.spec.ts",
          "line": 88,
          "column": 1
        },
        {
          "title": "AT-5: Indicator does not persist after reload",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 29,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 7606,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"poll toBeTruthy\"",
                      "duration": 7
                    },
                    {
                      "title": "Expect \"poll toBeFalsy\"",
                      "duration": 123
                    }
                  ],
                  "startTime": "2025-10-13T21:11:58.885Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "5db79e380d9166cdb045-4aabe2dcb0afaa93b391",
          "file": "typing-indicator.spec.ts",
          "line": 95,
          "column": 1
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-13T21:03:26.754Z",
    "duration": 519793.386,
    "expected": 86,
    "skipped": 1,
    "unexpected": 29,
    "flaky": 0
  },
  "markdownSummary": "# Playwright Test Report Summary\n\n**Generated:** 10/13/2025, 9:12:06 PM\n\n| Status | Count |\n|--------|-------|\n| Passed | 86 |\n| Failed | 29 |\n| Skipped | 1 |\n\n---\n\n## ai-chat.spec.ts\n\n**Summary:** Passed: 11 | Failed: 3 | Skipped: 1\n\n### Failed Tests\n**1. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"4\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/test-failed-1.png)\n- [video](../../../test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/video.webm)\n- [error-context](../../../test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/error-context.md)\n\n**2. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected pattern: \u001b[32m/Mercury|Venus/i\u001b[39m\nReceived string:  \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 7000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 7000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?\"\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/test-failed-1.png)\n- [video](../../../test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/video.webm)\n- [error-context](../../../test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/error-context.md)\n\n**3. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"{\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a string\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/test-failed-1.png)\n- [video](../../../test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/video.webm)\n- [error-context](../../../test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/error-context.md)\n\n---\n\n## auth-login.spec.ts\n\n**Summary:** Passed: 4 | Failed: 6 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/community|\\/dashboard/i\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/login\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"http://localhost:8000/login\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/test-failed-1.png)\n- [video](../../../test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/video.webm)\n- [error-context](../../../test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/error-context.md)\n\n---\n\n## autoscroll.spec.ts\n\n**Summary:** Passed: 2 | Failed: 2 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n```\n**Attachments:**\n- [screenshot](../../../test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/test-failed-2.png)\n- [screenshot](../../../test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/test-failed-1.png)\n- [error-context](../../../test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/error-context.md)\n\n**2. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[data-testid=\"message-list\"]')\nExpected string: \u001b[32m\"seed 0\"\u001b[39m\nReceived string: \u001b[31m\"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[39m\nTimeout: 10000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"message-list\"]')\u001b[22m\n\u001b[2m    3 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16👍❤️😂😮🎉testuser: seed 17testuser: seed 18testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/test-failed-1.png)\n- [screenshot](../../../test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/test-failed-2.png)\n- [error-context](../../../test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/error-context.md)\n\n---\n\n## chat-guest.spec.ts\n\n**Summary:** Passed: 10 | Failed: 0 | Skipped: 0\n\n---\n\n## chat-history.spec.ts\n\n**Summary:** Passed: 13 | Failed: 7 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389711447\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/test-failed-2.png)\n- [screenshot](../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/test-failed-1.png)\n- [video](../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/video.webm)\n- [video](../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/video-1.webm)\n- [error-context](../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/error-context.md)\n\n**2. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First 1760389724028\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/test-failed-1.png)\n- [video](../../../test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/video.webm)\n- [error-context](../../../test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/error-context.md)\n\n**3. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Message 0 - 1760389725428\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/test-failed-1.png)\n- [video](../../../test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/video.webm)\n- [error-context](../../../test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/error-context.md)\n\n**4. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First cycle 1760389736684\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/test-failed-1.png)\n- [video](../../../test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/video.webm)\n- [error-context](../../../test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/error-context.md)\n\n**5. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/test-failed-1.png)\n- [video](../../../test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/video.webm)\n- [error-context](../../../test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/error-context.md)\n\n**6. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/test-failed-1.png)\n- [video](../../../test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/video.webm)\n- [error-context](../../../test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/error-context.md)\n\n**7. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389764568\"\u001b[39m\nReceived string: \u001b[31m\"testuser: Test 1760389772015User is typing...\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    6 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: Test 1760389772015User is typing...\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/test-failed-2.png)\n- [screenshot](../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/test-failed-1.png)\n- [video](../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/video-1.webm)\n- [video](../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/video.webm)\n- [error-context](../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/error-context.md)\n\n---\n\n## enter-key.spec.ts\n\n**Summary:** Passed: 18 | Failed: 2 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n```\n**Attachments:**\n- [screenshot](../../../test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/test-failed-1.png)\n- [video](../../../test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/video.webm)\n- [error-context](../../../test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/error-context.md)\n\n**2. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n```\n**Attachments:**\n- [screenshot](../../../test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/test-failed-1.png)\n- [video](../../../test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/video.webm)\n- [error-context](../../../test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/error-context.md)\n\n---\n\n## hello.spec.ts\n\n**Summary:** Passed: 1 | Failed: 0 | Skipped: 0\n\n---\n\n## help-ai.spec.ts\n\n**Summary:** Passed: 7 | Failed: 2 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/test-failed-1.png)\n- [video](../../../test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/video.webm)\n- [error-context](../../../test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/error-context.md)\n\n**2. undefined**\n\n```\nError: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/test-failed-1.png)\n- [video](../../../test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/video.webm)\n- [error-context](../../../test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/error-context.md)\n\n---\n\n## help-community.spec.ts\n\n**Summary:** Passed: 8 | Failed: 1 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: Help button not found on page.\n```\n**Attachments:**\n- [screenshot](../../../test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/test-failed-1.png)\n- [video](../../../test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/video.webm)\n- [error-context](../../../test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/error-context.md)\n\n---\n\n## profile.spec.ts\n\n**Summary:** Passed: 1 | Failed: 4 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/test-failed-1.png)\n- [video](../../../test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/video.webm)\n- [error-context](../../../test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/error-context.md)\n\n**2. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/test-failed-1.png)\n- [video](../../../test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/video.webm)\n- [error-context](../../../test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/error-context.md)\n\n**3. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[aria-label=\"Click to select\"]').nth(1)\nExpected string: \u001b[32m\"true\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('[aria-label=\"Click to select\"]').nth(1)\u001b[22m\n\u001b[2m    7 × locator resolved to <div aria-label=\"Click to select\" data-mui-internal-clone-element=\"true\" class=\"MuiAvatar-root MuiAvatar-circular css-r4mjgc-MuiAvatar-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"null\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/test-failed-1.png)\n- [video](../../../test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/video.webm)\n- [error-context](../../../test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/error-context.md)\n\n**4. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Not authorized')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Not authorized')\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/test-failed-1.png)\n- [video](../../../test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/video.webm)\n- [error-context](../../../test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/error-context.md)\n\n---\n\n## sidebar.spec.ts\n\n**Summary:** Passed: 6 | Failed: 1 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/login(?:$|[?#])/\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/community\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    2 × unexpected value \"http://localhost:8000/logout\"\u001b[22m\n\u001b[2m    7 × unexpected value \"http://localhost:8000/community\"\u001b[22m\n```\n**Attachments:**\n- [screenshot](../../../test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/test-failed-1.png)\n- [video](../../../test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/video.webm)\n- [error-context](../../../test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/error-context.md)\n\n---\n\n## smoke.spec.ts\n\n**Summary:** Passed: 1 | Failed: 0 | Skipped: 0\n\n---\n\n## typing-indicator.spec.ts\n\n**Summary:** Passed: 4 | Failed: 1 | Skipped: 0\n\n### Failed Tests\n**1. undefined**\n\n```\nError: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n\nCall Log:\n- Timeout 8000ms exceeded while waiting on the predicate\n```\n**Attachments:**\n- [screenshot](../../../test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/test-failed-2.png)\n- [screenshot](../../../test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/test-failed-1.png)\n- [error-context](../../../test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/error-context.md)\n\n---\n\n",
  "htmlSummary": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>Playwright Test Summary</title>\n<style>\n  body { font-family: Arial, sans-serif; background: #fafafa; color: #222; margin: 40px; }\n  h1, h2, h3 { color: #333; }\n  table { border-collapse: collapse; width: 50%; margin-bottom: 20px; }\n  th, td { border: 1px solid #ccc; padding: 6px 12px; text-align: left; }\n  tr:nth-child(even) { background: #f2f2f2; }\n  details { margin-bottom: 12px; background: #fff; border: 1px solid #ddd; padding: 10px; border-radius: 6px; }\n  summary { font-weight: bold; cursor: pointer; }\n  code { background: #eee; padding: 2px 6px; border-radius: 4px; display: block; white-space: pre-wrap; margin-top: 4px; }\n  .passed { color: green; }\n  .failed { color: red; }\n  .skipped { color: orange; }\n</style>\n</head>\n<body>\n<h1>Playwright Test Report Summary</h1>\n<p><strong>Generated:</strong> 10/13/2025, 9:12:06 PM</p>\n<table>\n  <tr><th>Status</th><th>Count</th></tr>\n  <tr><td class=\"passed\">Passed</td><td>86</td></tr>\n  <tr><td class=\"failed\">Failed</td><td>29</td></tr>\n  <tr><td class=\"skipped\">Skipped</td><td>1</td></tr>\n</table>\n<h2>ai-chat.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 11</span> | <span class=\"failed\">Failed: 3</span> | <span class=\"skipped\">Skipped: 1</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"4\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?What is 2 + 2?Sorry, there was an error contacting the AI service.\"\u001b[22m</code><ul><li><a href=\"../../../test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/ai-chat-AT-3-LLM-response-appears-after-sending-a-message-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>2. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected pattern: \u001b[32m/Mercury|Venus/i\u001b[39m\nReceived string:  \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 7000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 7000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?\"\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Start a long explanation about the solar system...Sorry, there was an error contacting the AI service.What’s the hottest planet?Sorry, there was an error contacting the AI service.\"\u001b[22m</code><ul><li><a href=\"../../../test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/ai-chat-AT-12-Sending-a-ne-58921-vious-LLM-response-finishes-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>3. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"{\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    2 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a string\"\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?Show me a JavaScript function that reverses a stringSorry, there was an error contacting the AI service.\"\u001b[22m</code><ul><li><a href=\"../../../test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/ai-chat-AT-13-LLM-can-return-formatted-code-responses-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>auth-login.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 4</span> | <span class=\"failed\">Failed: 6</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/community|\\/dashboard/i\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/login\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"http://localhost:8000/login\"\u001b[22m</code><ul><li><a href=\"../../../test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/auth-login-AT-5-Login-with-3bc0d-ials-redirects-to-community-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>autoscroll.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 2</span> | <span class=\"failed\">Failed: 2</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m</code><ul><li><a href=\"../../../test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/test-failed-2.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/autoscroll-AT-02-No-jump-when-viewer-scrolled-up-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>2. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[data-testid=\"message-list\"]')\nExpected string: \u001b[32m\"seed 0\"\u001b[39m\nReceived string: \u001b[31m\"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[39m\nTimeout: 10000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"message-list\"]')\u001b[22m\n\u001b[2m    3 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16👍❤️😂😮🎉testuser: seed 17testuser: seed 18testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19User is typing...\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17testuser: seed 18👍❤️😂😮🎉testuser: seed 19\"\u001b[22m\n\u001b[2m    5 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"testuser: seed 1testuser: seed 2testuser: seed 3testuser: seed 4testuser: seed 5testuser: seed 6testuser: seed 7testuser: seed 8testuser: seed 9testuser: seed 10testuser: seed 11testuser: seed 12testuser: seed 13testuser: seed 14testuser: seed 15testuser: seed 16testuser: seed 17👍❤️😂😮🎉testuser: seed 18testuser: seed 19\"\u001b[22m</code><ul><li><a href=\"../../../test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/test-failed-2.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/autoscroll-AT-03-Auto-scro-126c7-er-viewer-returns-to-bottom-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>chat-guest.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 10</span> | <span class=\"failed\">Failed: 0</span> | <span class=\"skipped\">Skipped: 0</span></p><h2>chat-history.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 13</span> | <span class=\"failed\">Failed: 7</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389711447\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    7 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m</code><ul><li><a href=\"../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/test-failed-2.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/video-1.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-9-multiple-tabs-should-show-same-history-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>2. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First 1760389724028\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m</code><ul><li><a href=\"../../../test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-12-should--32389-ple-messages-and-keep-order-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>3. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Message 0 - 1760389725428\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    9 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m</code><ul><li><a href=\"../../../test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-13-should-persist-a-long-history-of-messages-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>4. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"First cycle 1760389736684\"\u001b[39m\nReceived string: \u001b[31m\"Hello! I’m your AI assistant. How can I help you today?\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    8 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"Hello! I’m your AI assistant. How can I help you today?\"\u001b[22m</code><ul><li><a href=\"../../../test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-14-should--3c8b6-ultiple-send-refresh-cycles-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>5. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"Duplicate check 1760389741474\")').last()\u001b[22m</code><ul><li><a href=\"../../../test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-15-should--0f65d-cate-messages-after-refresh-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>6. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list').locator('div:has-text(\"One 1760389751133\")').last()\u001b[22m</code><ul><li><a href=\"../../../test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-16-should--6a09f-er-after-multiple-refreshes-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>7. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoContainText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: getByTestId('message-list')\nExpected string: \u001b[32m\"Multi-tab 1760389764568\"\u001b[39m\nReceived string: \u001b[31m\"testuser: Test 1760389772015User is typing...\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toContainText\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('message-list')\u001b[22m\n\u001b[2m    6 × locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"\"\u001b[22m\n\u001b[2m    - locator resolved to <div data-testid=\"message-list\" class=\"MuiContainer-root MuiContainer-maxWidthMd css-1rl24un-MuiContainer-root\">…</div>\u001b[22m\n\u001b[2m    - unexpected value \"testuser: Test 1760389772015User is typing...\"\u001b[22m</code><ul><li><a href=\"../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/test-failed-2.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/video-1.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/chat-history-AT-19-multiple-tabs-should-show-same-history-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>enter-key.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 18</span> | <span class=\"failed\">Failed: 2</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m</code><ul><li><a href=\"../../../test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/enter-key-AT-8-should-not--febdd-sage-on-rapid-Enter-presses-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>2. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m</code><ul><li><a href=\"../../../test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/enter-key-AT-18-should-not-9a8d2-sage-on-rapid-Enter-presses-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>hello.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 1</span> | <span class=\"failed\">Failed: 0</span> | <span class=\"skipped\">Skipped: 0</span></p><h2>help-ai.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 7</span> | <span class=\"failed\">Failed: 2</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m</code><ul><li><a href=\"../../../test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/help-ai-AT-7-Re-open-works-after-closing-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>2. undefined</summary><code>Error: locator.elementHandle: Error: strict mode violation: locator('text=Help') resolved to 2 elements:\n    1) <p class=\"MuiTypography-root MuiTypography-body2 css-tf6nos-MuiTypography-root\">Hello! I’m your AI assistant. How can I help you …</p> aka getByText('Hello! I’m your AI assistant')\n    2) <button tabindex=\"0\" type=\"button\" data-testid=\"help-button\" class=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary css-zoli0u-MuiButtonBase-root-MuiButton-root\">…</button> aka getByTestId('help-button')\n\nCall log:\n\u001b[2m  - waiting for locator('text=Help')\u001b[22m</code><ul><li><a href=\"../../../test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/help-ai-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>help-community.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 8</span> | <span class=\"failed\">Failed: 1</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: Help button not found on page.</code><ul><li><a href=\"../../../test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/help-community-AT-9-Dialog-is-usable-on-mobile-viewport-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>profile.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 1</span> | <span class=\"failed\">Failed: 4</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m</code><ul><li><a href=\"../../../test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/profile-AT-2-Selecting-avatar-and-saving-updates-profile-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>2. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Profile updated successfully')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Profile updated successfully')\u001b[22m</code><ul><li><a href=\"../../../test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/profile-AT-3-Selecting-the-4a89d--and-saving-updates-profile-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>3. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[aria-label=\"Click to select\"]').nth(1)\nExpected string: \u001b[32m\"true\"\u001b[39m\nReceived string: \u001b[31m\"\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('[aria-label=\"Click to select\"]').nth(1)\u001b[22m\n\u001b[2m    7 × locator resolved to <div aria-label=\"Click to select\" data-mui-internal-clone-element=\"true\" class=\"MuiAvatar-root MuiAvatar-circular css-r4mjgc-MuiAvatar-root\">…</div>\u001b[22m\n\u001b[2m      - unexpected value \"null\"\u001b[22m</code><ul><li><a href=\"../../../test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/profile-AT-4-Profile-settings-persist-after-reload-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><details><summary>4. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Not authorized')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Not authorized')\u001b[22m</code><ul><li><a href=\"../../../test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/profile-AT-5-Unauthorized-user-cannot-access-profile-page-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>sidebar.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 6</span> | <span class=\"failed\">Failed: 1</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveURL\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/\\/login(?:$|[?#])/\u001b[39m\nReceived string:  \u001b[31m\"http://localhost:8000/community\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveURL\" with timeout 5000ms\u001b[22m\n\u001b[2m    2 × unexpected value \"http://localhost:8000/logout\"\u001b[22m\n\u001b[2m    7 × unexpected value \"http://localhost:8000/community\"\u001b[22m</code><ul><li><a href=\"../../../test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/video.webm\" target=\"_blank\">video</a></li><li><a href=\"../../../test-results/sidebar-AT-7-Click-Logout-logs-out-and-redirects-to-Login-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details><h2>smoke.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 1</span> | <span class=\"failed\">Failed: 0</span> | <span class=\"skipped\">Skipped: 0</span></p><h2>typing-indicator.spec.ts</h2><p><strong>Summary:</strong> <span class=\"passed\">Passed: 4</span> | <span class=\"failed\">Failed: 1</span> | <span class=\"skipped\">Skipped: 0</span></p><h3>Failed Tests</h3><details><summary>1. undefined</summary><code>Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n\nCall Log:\n- Timeout 8000ms exceeded while waiting on the predicate</code><ul><li><a href=\"../../../test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/test-failed-2.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/test-failed-1.png\" target=\"_blank\">screenshot</a></li><li><a href=\"../../../test-results/typing-indicator-AT-2-Indi-0947d-fter-stop-typing-or-sending-chromium/error-context.md\" target=\"_blank\">error-context</a></li></ul></details>\n</body>\n</html>\n"
}